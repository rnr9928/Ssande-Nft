{
	"id": "1c7550e04ff3345abecbcd1b4476448c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"standards/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"openzeppelin-solidity/contracts/utils/Address.sol\";\nimport \"openzeppelin-solidity/contracts/utils/Context.sol\";\nimport \"openzeppelin-solidity/contracts/utils/Strings.sol\";\nimport \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\";\n// import \"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n// import \"../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n// import \"../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\n// import \"../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n// import \"../node_modules/@openzeppelin/contracts/utils/Address.sol\";\n// import \"../node_modules/@openzeppelin/contracts/utils/Context.sol\";\n// import \"../node_modules/@openzeppelin/contracts/utils/Strings.sol\";\n// import \"../node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n *\n * Assumes the number of issuable tokens (collection size) is capped and fits in a uint128.\n *\n * Does not support burning tokens to address(0).\n */\ncontract ERC721A is\n  Context,\n  ERC165,\n  IERC721,\n  IERC721Metadata,\n  IERC721Enumerable\n{\n  using Address for address;\n  using Strings for uint256;\n\n  struct TokenOwnership {\n    address addr;\n    uint64 startTimestamp;\n  }\n\n  struct AddressData {\n    uint128 balance;\n    uint128 numberMinted;\n  }\n\n  uint256 private currentIndex = 1;\n  // 내가 토큰ID 1부터 시작할려고 수정함\n  \n\n  uint256 internal immutable collectionSize;\n  uint256 internal immutable maxBatchSize;\n\n  // Token name\n  string private _name;\n\n  // Token symbol\n  string private _symbol;\n\n  // Mapping from token ID to ownership details\n  // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n  mapping(uint256 => TokenOwnership) private _ownerships;\n\n  // Mapping owner address to address data\n  mapping(address => AddressData) private _addressData;\n\n  // Mapping from token ID to approved address\n  mapping(uint256 => address) private _tokenApprovals;\n\n  // Mapping from owner to operator approvals\n  mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n  /**\n   * @dev\n   * `maxBatchSize` refers to how much a minter can mint at a time.\n   * `collectionSize_` refers to how many tokens are in the collection.\n   */\n  constructor(\n    string memory name_,\n    string memory symbol_,\n    uint256 maxBatchSize_,\n    uint256 collectionSize_\n  ) {\n    require(\n      collectionSize_ > 0,\n      \"ERC721A: collection must have a nonzero supply\"\n    );\n    require(maxBatchSize_ > 0, \"ERC721A: max batch size must be nonzero\");\n    _name = name_;\n    _symbol = symbol_;\n    maxBatchSize = maxBatchSize_;\n    collectionSize = collectionSize_;\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-totalSupply}.\n   */\n  function totalSupply() public view override returns (uint256) {\n    return currentIndex - 1; //내가 -1로 수정\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-tokenByIndex}.\n   */\n  function tokenByIndex(uint256 index) public view override returns (uint256) {\n    require(index < totalSupply(), \"ERC721A: global index out of bounds\");\n    return index;\n  }\n\n  /**\n   * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n   * This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first.\n   * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\n   */\n  function tokenOfOwnerByIndex(address owner, uint256 index)\n    public\n    view\n    override\n    returns (uint256)\n  {\n    require(index < balanceOf(owner), \"ERC721A: owner index out of bounds\");\n    uint256 numMintedSoFar = totalSupply();\n    uint256 tokenIdsIdx = 0;\n    address currOwnershipAddr = address(0);\n    for (uint256 i = 1; i <= numMintedSoFar; i++) { // 내가 수정\n      TokenOwnership memory ownership = _ownerships[i];\n      if (ownership.addr != address(0)) {\n        currOwnershipAddr = ownership.addr;\n      }\n      if (currOwnershipAddr == owner) {\n        if (tokenIdsIdx == index) {\n          return i;\n        }\n        tokenIdsIdx++;\n      }\n    }\n    revert(\"ERC721A: unable to get token of owner by index\");\n  }\n\n  /**\n   * @dev See {IERC165-supportsInterface}.\n   */\n  function supportsInterface(bytes4 interfaceId)\n    public\n    view\n    virtual\n    override(ERC165, IERC165)\n    returns (bool)\n  {\n    return\n      interfaceId == type(IERC721).interfaceId ||\n      interfaceId == type(IERC721Metadata).interfaceId ||\n      interfaceId == type(IERC721Enumerable).interfaceId ||\n      super.supportsInterface(interfaceId);\n  }\n\n  /**\n   * @dev See {IERC721-balanceOf}.\n   */\n  function balanceOf(address owner) public view override returns (uint256) {\n    require(owner != address(0), \"ERC721A: balance query for the zero address\");\n    return uint256(_addressData[owner].balance);\n  }\n\n  function _numberMinted(address owner) internal view returns (uint256) {\n    require(\n      owner != address(0),\n      \"ERC721A: number minted query for the zero address\"\n    );\n    return uint256(_addressData[owner].numberMinted);\n  }\n\n  function ownershipOf(uint256 tokenId)\n    internal\n    view\n    returns (TokenOwnership memory)\n  {\n    require(_exists(tokenId), \"ERC721A: owner query for nonexistent token\");\n\n    uint256 lowestTokenToCheck;\n    if (tokenId >= maxBatchSize) {\n      lowestTokenToCheck = tokenId - maxBatchSize + 1;\n    }\n\n    for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {\n      TokenOwnership memory ownership = _ownerships[curr];\n      if (ownership.addr != address(0)) {\n        return ownership;\n      }\n    }\n\n    revert(\"ERC721A: unable to determine the owner of token\");\n  }\n\n  /**\n   * @dev See {IERC721-ownerOf}.\n   */\n  function ownerOf(uint256 tokenId) public view override returns (address) {\n    return ownershipOf(tokenId).addr;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-name}.\n   */\n  function name() public view virtual override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-symbol}.\n   */\n  function symbol() public view virtual override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev See {IERC721Metadata-tokenURI}.\n   */\n  function tokenURI(uint256 tokenId)\n    public\n    view\n    virtual\n    override\n    returns (string memory)\n  {\n    require(\n      _exists(tokenId),\n      \"ERC721Metadata: URI query for nonexistent token\"\n    );\n\n    string memory baseURI = _baseURI();\n    return\n      bytes(baseURI).length > 0\n        ? string(abi.encodePacked(baseURI, tokenId.toString()))\n        : \"\";\n  }\n\n  /**\n   * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n   * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n   * by default, can be overriden in child contracts.\n   */\n  function _baseURI() internal view virtual returns (string memory) {\n    return \"\";\n  }\n\n  /**\n   * @dev See {IERC721-approve}.\n   */\n  function approve(address to, uint256 tokenId) public override {\n    address owner = ERC721A.ownerOf(tokenId);\n    require(to != owner, \"ERC721A: approval to current owner\");\n\n    require(\n      _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n      \"ERC721A: approve caller is not owner nor approved for all\"\n    );\n\n    _approve(to, tokenId, owner);\n  }\n\n  /**\n   * @dev See {IERC721-getApproved}.\n   */\n  function getApproved(uint256 tokenId) public view override returns (address) {\n    require(_exists(tokenId), \"ERC721A: approved query for nonexistent token\");\n\n    return _tokenApprovals[tokenId];\n  }\n\n  /**\n   * @dev See {IERC721-setApprovalForAll}.\n   */\n  function setApprovalForAll(address operator, bool approved) public override {\n    require(operator != _msgSender(), \"ERC721A: approve to caller\");\n\n    _operatorApprovals[_msgSender()][operator] = approved;\n    emit ApprovalForAll(_msgSender(), operator, approved);\n  }\n\n  /**\n   * @dev See {IERC721-isApprovedForAll}.\n   */\n  function isApprovedForAll(address owner, address operator)\n    public\n    view\n    virtual\n    override\n    returns (bool)\n  {\n    return _operatorApprovals[owner][operator];\n  }\n\n  /**\n   * @dev See {IERC721-transferFrom}.\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public override {\n    _transfer(from, to, tokenId);\n  }\n\n  /**\n   * @dev See {IERC721-safeTransferFrom}.\n   */\n  function safeTransferFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public override {\n    safeTransferFrom(from, to, tokenId, \"\");\n  }\n\n  /**\n   * @dev See {IERC721-safeTransferFrom}.\n   */\n  function safeTransferFrom(\n    address from,\n    address to,\n    uint256 tokenId,\n    bytes memory _data\n  ) public override {\n    _transfer(from, to, tokenId);\n    require(\n      _checkOnERC721Received(from, to, tokenId, _data),\n      \"ERC721A: transfer to non ERC721Receiver implementer\"\n    );\n  }\n\n  /**\n   * @dev Returns whether `tokenId` exists.\n   *\n   * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   *\n   * Tokens start existing when they are minted (`_mint`),\n   */\n  function _exists(uint256 tokenId) internal view returns (bool) {\n    return tokenId < currentIndex;\n  }\n\n  function _safeMint(address to, uint256 quantity) internal {\n    _safeMint(to, quantity, \"\");\n  }\n\n  /**\n   * @dev Mints `quantity` tokens and transfers them to `to`.\n   *\n   * Requirements:\n   *\n   * - there must be `quantity` tokens remaining unminted in the total collection.\n   * - `to` cannot be the zero address.\n   * - `quantity` cannot be larger than the max batch size.\n   *\n   * Emits a {Transfer} event.\n   */\n  function _safeMint(\n    address to,\n    uint256 quantity,\n    bytes memory _data\n  ) internal {\n    uint256 startTokenId = currentIndex ; // 내가 +1로 수정함\n    require(to != address(0), \"ERC721A: mint to the zero address\");\n    // We know if the first token in the batch doesn't exist, the other ones don't as well, because of serial ordering.\n    require(!_exists(startTokenId), \"ERC721A: token already minted\");\n    require(quantity <= maxBatchSize, \"ERC721A: quantity to mint too high\");\n\n    _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n    AddressData memory addressData = _addressData[to];\n    _addressData[to] = AddressData(\n      addressData.balance + uint128(quantity),\n      addressData.numberMinted + uint128(quantity)\n    );\n    _ownerships[startTokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n    uint256 updatedIndex = startTokenId;\n\n    for (uint256 i = 0; i < quantity; i++) {\n      emit Transfer(address(0), to, updatedIndex);\n      require(\n        _checkOnERC721Received(address(0), to, updatedIndex, _data),\n        \"ERC721A: transfer to non ERC721Receiver implementer\"\n      );\n      updatedIndex++;\n    }\n\n    currentIndex = updatedIndex;\n    _afterTokenTransfers(address(0), to, startTokenId, quantity);\n  }\n\n  /**\n   * @dev Transfers `tokenId` from `from` to `to`.\n   *\n   * Requirements:\n   *\n   * - `to` cannot be the zero address.\n   * - `tokenId` token must be owned by `from`.\n   *\n   * Emits a {Transfer} event.\n   */\n  function _transfer(\n    address from,\n    address to,\n    uint256 tokenId\n  ) private {\n    TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n    bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n      getApproved(tokenId) == _msgSender() ||\n      isApprovedForAll(prevOwnership.addr, _msgSender()));\n\n    require(\n      isApprovedOrOwner,\n      \"ERC721A: transfer caller is not owner nor approved\"\n    );\n\n    require(\n      prevOwnership.addr == from,\n      \"ERC721A: transfer from incorrect owner\"\n    );\n    require(to != address(0), \"ERC721A: transfer to the zero address\");\n\n    _beforeTokenTransfers(from, to, tokenId, 1);\n\n    // Clear approvals from the previous owner\n    _approve(address(0), tokenId, prevOwnership.addr);\n\n    _addressData[from].balance -= 1;\n    _addressData[to].balance += 1;\n    _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n    // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n    // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n    uint256 nextTokenId = tokenId + 1;\n    if (_ownerships[nextTokenId].addr == address(0)) {\n      if (_exists(nextTokenId)) {\n        _ownerships[nextTokenId] = TokenOwnership(\n          prevOwnership.addr,\n          prevOwnership.startTimestamp\n        );\n      }\n    }\n\n    emit Transfer(from, to, tokenId);\n    _afterTokenTransfers(from, to, tokenId, 1);\n  }\n\n  /**\n   * @dev Approve `to` to operate on `tokenId`\n   *\n   * Emits a {Approval} event.\n   */\n  function _approve(\n    address to,\n    uint256 tokenId,\n    address owner\n  ) private {\n    _tokenApprovals[tokenId] = to;\n    emit Approval(owner, to, tokenId);\n  }\n\n  uint256 public nextOwnerToExplicitlySet = 0;\n\n  /**\n   * @dev Explicitly set `owners` to eliminate loops in future calls of ownerOf().\n   */\n  function _setOwnersExplicit(uint256 quantity) internal {\n    uint256 oldNextOwnerToSet = nextOwnerToExplicitlySet;\n    require(quantity > 0, \"quantity must be nonzero\");\n    uint256 endIndex = oldNextOwnerToSet + quantity - 1;\n    if (endIndex > collectionSize - 1) {\n      endIndex = collectionSize - 1;\n    }\n    // We know if the last one in the group exists, all in the group exist, due to serial ordering.\n    require(_exists(endIndex), \"not enough minted yet for this cleanup\");\n    for (uint256 i = oldNextOwnerToSet; i <= endIndex; i++) {\n      if (_ownerships[i].addr == address(0)) {\n        TokenOwnership memory ownership = ownershipOf(i);\n        _ownerships[i] = TokenOwnership(\n          ownership.addr,\n          ownership.startTimestamp\n        );\n      }\n    }\n    nextOwnerToExplicitlySet = endIndex + 1;\n  }\n\n  /**\n   * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n   * The call is not executed if the target address is not a contract.\n   *\n   * @param from address representing the previous owner of the given token ID\n   * @param to target address that will receive the tokens\n   * @param tokenId uint256 ID of the token to be transferred\n   * @param _data bytes optional data to send along with the call\n   * @return bool whether the call correctly returned the expected magic value\n   */\n  function _checkOnERC721Received(\n    address from,\n    address to,\n    uint256 tokenId,\n    bytes memory _data\n  ) private returns (bool) {\n    if (to.isContract()) {\n      try\n        IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data)\n      returns (bytes4 retval) {\n        return retval == IERC721Receiver(to).onERC721Received.selector;\n      } catch (bytes memory reason) {\n        if (reason.length == 0) {\n          revert(\"ERC721A: transfer to non ERC721Receiver implementer\");\n        } else {\n          assembly {\n            revert(add(32, reason), mload(reason))\n          }\n        }\n      }\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n   *\n   * startTokenId - the first token id to be transferred\n   * quantity - the amount to be transferred\n   *\n   * Calling conditions:\n   *\n   * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n   * transferred to `to`.\n   * - When `from` is zero, `tokenId` will be minted for `to`.\n   */\n  function _beforeTokenTransfers(\n    address from,\n    address to,\n    uint256 startTokenId,\n    uint256 quantity\n  ) internal virtual {}\n\n  /**\n   * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n   * minting.\n   *\n   * startTokenId - the first token id to be transferred\n   * quantity - the amount to be transferred\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero.\n   * - `from` and `to` are never both zero.\n   */\n  function _afterTokenTransfers(\n    address from,\n    address to,\n    uint256 startTokenId,\n    uint256 quantity\n  ) internal virtual {}\n}"
			},
			"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220053a0a0971c0c4f4346ec3de68892b4c638f923f2b18ebbc7dc31616f4281fbe64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220053a0a0971c0c4f4346ec3de68892b4c638f923f2b18ebbc7dc31616f4281fbe64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV GASPRICE EXP MULMOD PUSH18 0xC0C4F4346EC3DE68892B4C638F923F2B18EB 0xBC PUSH30 0xC31616F4281FBE64736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220053a0a0971c0c4f4346ec3de68892b4c638f923f2b18ebbc7dc31616f4281fbe64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV GASPRICE EXP MULMOD PUSH18 0xC0C4F4346EC3DE68892B4C638F923F2B18EB 0xBC PUSH30 0xC31616F4281FBE64736F6C63430008110033000000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220053a0a0971c0c4f4346ec3de68892b4c638f923f2b18ebbc7dc31616f4281fbe64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-solidity/contracts/utils/Address.sol",
								"openzeppelin-solidity/contracts/utils/Context.sol",
								"openzeppelin-solidity/contracts/utils/Strings.sol",
								"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
								"standards/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c046e08c2238cec2c1cdc32e4d15d5e4af1d5db34c95831c8687ca960ba562164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c046e08c2238cec2c1cdc32e4d15d5e4af1d5db34c95831c8687ca960ba562164736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DIV PUSH15 0x8C2238CEC2C1CDC32E4D15D5E4AF1 0xD5 0xDB CALLVALUE 0xC9 PC BALANCE 0xC8 PUSH9 0x7CA960BA562164736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c046e08c2238cec2c1cdc32e4d15d5e4af1d5db34c95831c8687ca960ba562164736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DIV PUSH15 0x8C2238CEC2C1CDC32E4D15D5E4AF1 0xD5 0xDB CALLVALUE 0xC9 PC BALANCE 0xC8 PUSH9 0x7CA960BA562164736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c046e08c2238cec2c1cdc32e4d15d5e4af1d5db34c95831c8687ca960ba562164736f6c63430008110033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-solidity/contracts/utils/Address.sol",
								"openzeppelin-solidity/contracts/utils/Context.sol",
								"openzeppelin-solidity/contracts/utils/Strings.sol",
								"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
								"standards/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"standards/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "maxBatchSize_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "collectionSize_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextOwnerToExplicitlySet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Assumes the number of issuable tokens (collection size) is capped and fits in a uint128. Does not support burning tokens to address(0).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "`maxBatchSize` refers to how much a minter can mint at a time. `collectionSize_` refers to how many tokens are in the collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"standards/ERC721A.sol\":1728:16845  contract ERC721A is... */\n  mstore(0x40, 0xc0)\n    /* \"standards/ERC721A.sol\":2064:2065  1 */\n  0x01\n    /* \"standards/ERC721A.sol\":2033:2065  uint256 private currentIndex = 1 */\n  0x00\n  sstore\n    /* \"standards/ERC721A.sol\":13626:13627  0 */\n  0x00\n    /* \"standards/ERC721A.sol\":13584:13627  uint256 public nextOwnerToExplicitlySet = 0 */\n  0x07\n  sstore\n    /* \"standards/ERC721A.sol\":3016:3436  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"standards/ERC721A.sol\":3179:3180  0 */\n  0x00\n    /* \"standards/ERC721A.sol\":3161:3176  collectionSize_ */\n  dup2\n    /* \"standards/ERC721A.sol\":3161:3180  collectionSize_ > 0 */\n  gt\n    /* \"standards/ERC721A.sol\":3146:3242  require(... */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"standards/ERC721A.sol\":3272:3273  0 */\n  0x00\n    /* \"standards/ERC721A.sol\":3256:3269  maxBatchSize_ */\n  dup3\n    /* \"standards/ERC721A.sol\":3256:3273  maxBatchSize_ > 0 */\n  gt\n    /* \"standards/ERC721A.sol\":3248:3317  require(maxBatchSize_ > 0, \"ERC721A: max batch size must be nonzero\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"standards/ERC721A.sol\":3331:3336  name_ */\n  dup4\n    /* \"standards/ERC721A.sol\":3323:3328  _name */\n  0x01\n    /* \"standards/ERC721A.sol\":3323:3336  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"standards/ERC721A.sol\":3352:3359  symbol_ */\n  dup3\n    /* \"standards/ERC721A.sol\":3342:3349  _symbol */\n  0x02\n    /* \"standards/ERC721A.sol\":3342:3359  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"standards/ERC721A.sol\":3380:3393  maxBatchSize_ */\n  dup2\n    /* \"standards/ERC721A.sol\":3365:3393  maxBatchSize = maxBatchSize_ */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"standards/ERC721A.sol\":3416:3431  collectionSize_ */\n  dup1\n    /* \"standards/ERC721A.sol\":3399:3431  collectionSize = collectionSize_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"standards/ERC721A.sol\":3016:3436  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"standards/ERC721A.sol\":1728:16845  contract ERC721A is... */\n  jump(tag_15)\n    /* \"#utility.yul\":7:82   */\ntag_16:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_18:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_19:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_20:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_21:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_22:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_23:\n    /* \"#utility.yul\":957:984   */\n  tag_64\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_21\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_66\n  tag_22\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1030:1118   */\ntag_65:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_24:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_68\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_69\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_25:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_72\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1434:1490   */\ntag_71:\n    /* \"#utility.yul\":1508:1537   */\n  tag_73\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_21\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_26:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_75:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_27:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_79\n    /* \"#utility.yul\":1992:2041   */\n  tag_80\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1976:2042   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_82\n  tag_20\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2117:2229   */\ntag_81:\n    /* \"#utility.yul\":2238:2290   */\n  tag_83\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_26\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_28:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_86\n  tag_19\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2399:2521   */\ntag_85:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_87\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_27\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_29:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_30:\n    /* \"#utility.yul\":2833:2857   */\n  tag_90\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_29\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_91:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_31:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_93\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4203   */\ntag_3:\n    /* \"#utility.yul\":3154:3160   */\n  0x00\n    /* \"#utility.yul\":3162:3168   */\n  dup1\n    /* \"#utility.yul\":3170:3176   */\n  0x00\n    /* \"#utility.yul\":3178:3184   */\n  dup1\n    /* \"#utility.yul\":3227:3230   */\n  0x80\n    /* \"#utility.yul\":3215:3224   */\n  dup6\n    /* \"#utility.yul\":3206:3213   */\n  dup8\n    /* \"#utility.yul\":3202:3225   */\n  sub\n    /* \"#utility.yul\":3198:3231   */\n  slt\n    /* \"#utility.yul\":3195:3315   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3234:3313   */\n  tag_96\n  tag_17\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3195:3315   */\ntag_95:\n    /* \"#utility.yul\":3375:3376   */\n  0x00\n    /* \"#utility.yul\":3364:3373   */\n  dup6\n    /* \"#utility.yul\":3360:3377   */\n  add\n    /* \"#utility.yul\":3354:3378   */\n  mload\n    /* \"#utility.yul\":3405:3423   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3397:3403   */\n  dup2\n    /* \"#utility.yul\":3394:3424   */\n  gt\n    /* \"#utility.yul\":3391:3508   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3427:3506   */\n  tag_98\n  tag_18\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3391:3508   */\ntag_97:\n    /* \"#utility.yul\":3532:3606   */\n  tag_99\n    /* \"#utility.yul\":3598:3605   */\n  dup8\n    /* \"#utility.yul\":3589:3595   */\n  dup3\n    /* \"#utility.yul\":3578:3587   */\n  dup9\n    /* \"#utility.yul\":3574:3596   */\n  add\n    /* \"#utility.yul\":3532:3606   */\n  tag_28\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3522:3606   */\n  swap5\n  pop\n    /* \"#utility.yul\":3325:3616   */\n  pop\n    /* \"#utility.yul\":3676:3678   */\n  0x20\n    /* \"#utility.yul\":3665:3674   */\n  dup6\n    /* \"#utility.yul\":3661:3679   */\n  add\n    /* \"#utility.yul\":3655:3680   */\n  mload\n    /* \"#utility.yul\":3707:3725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3699:3705   */\n  dup2\n    /* \"#utility.yul\":3696:3726   */\n  gt\n    /* \"#utility.yul\":3693:3810   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3729:3808   */\n  tag_101\n  tag_18\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3693:3810   */\ntag_100:\n    /* \"#utility.yul\":3834:3908   */\n  tag_102\n    /* \"#utility.yul\":3900:3907   */\n  dup8\n    /* \"#utility.yul\":3891:3897   */\n  dup3\n    /* \"#utility.yul\":3880:3889   */\n  dup9\n    /* \"#utility.yul\":3876:3898   */\n  add\n    /* \"#utility.yul\":3834:3908   */\n  tag_28\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3824:3908   */\n  swap4\n  pop\n    /* \"#utility.yul\":3626:3918   */\n  pop\n    /* \"#utility.yul\":3957:3959   */\n  0x40\n    /* \"#utility.yul\":3983:4047   */\n  tag_103\n    /* \"#utility.yul\":4039:4046   */\n  dup8\n    /* \"#utility.yul\":4030:4036   */\n  dup3\n    /* \"#utility.yul\":4019:4028   */\n  dup9\n    /* \"#utility.yul\":4015:4037   */\n  add\n    /* \"#utility.yul\":3983:4047   */\n  tag_31\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3973:4047   */\n  swap3\n  pop\n    /* \"#utility.yul\":3928:4057   */\n  pop\n    /* \"#utility.yul\":4096:4098   */\n  0x60\n    /* \"#utility.yul\":4122:4186   */\n  tag_104\n    /* \"#utility.yul\":4178:4185   */\n  dup8\n    /* \"#utility.yul\":4169:4175   */\n  dup3\n    /* \"#utility.yul\":4158:4167   */\n  dup9\n    /* \"#utility.yul\":4154:4176   */\n  add\n    /* \"#utility.yul\":4122:4186   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4112:4186   */\n  swap2\n  pop\n    /* \"#utility.yul\":4067:4196   */\n  pop\n    /* \"#utility.yul\":3037:4203   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4209:4378   */\ntag_32:\n    /* \"#utility.yul\":4293:4304   */\n  0x00\n    /* \"#utility.yul\":4327:4333   */\n  dup3\n    /* \"#utility.yul\":4322:4325   */\n  dup3\n    /* \"#utility.yul\":4315:4334   */\n  mstore\n    /* \"#utility.yul\":4367:4371   */\n  0x20\n    /* \"#utility.yul\":4362:4365   */\n  dup3\n    /* \"#utility.yul\":4358:4372   */\n  add\n    /* \"#utility.yul\":4343:4372   */\n  swap1\n  pop\n    /* \"#utility.yul\":4209:4378   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4384:4617   */\ntag_33:\n    /* \"#utility.yul\":4524:4558   */\n  0x455243373231413a20636f6c6c656374696f6e206d7573742068617665206120\n    /* \"#utility.yul\":4520:4521   */\n  0x00\n    /* \"#utility.yul\":4512:4518   */\n  dup3\n    /* \"#utility.yul\":4508:4522   */\n  add\n    /* \"#utility.yul\":4501:4559   */\n  mstore\n    /* \"#utility.yul\":4593:4609   */\n  0x6e6f6e7a65726f20737570706c79000000000000000000000000000000000000\n    /* \"#utility.yul\":4588:4590   */\n  0x20\n    /* \"#utility.yul\":4580:4586   */\n  dup3\n    /* \"#utility.yul\":4576:4591   */\n  add\n    /* \"#utility.yul\":4569:4610   */\n  mstore\n    /* \"#utility.yul\":4384:4617   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4623:4989   */\ntag_34:\n    /* \"#utility.yul\":4765:4768   */\n  0x00\n    /* \"#utility.yul\":4786:4853   */\n  tag_108\n    /* \"#utility.yul\":4850:4852   */\n  0x2e\n    /* \"#utility.yul\":4845:4848   */\n  dup4\n    /* \"#utility.yul\":4786:4853   */\n  tag_32\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4779:4853   */\n  swap2\n  pop\n    /* \"#utility.yul\":4862:4955   */\n  tag_109\n    /* \"#utility.yul\":4951:4954   */\n  dup3\n    /* \"#utility.yul\":4862:4955   */\n  tag_33\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4980:4982   */\n  0x40\n    /* \"#utility.yul\":4975:4978   */\n  dup3\n    /* \"#utility.yul\":4971:4983   */\n  add\n    /* \"#utility.yul\":4964:4983   */\n  swap1\n  pop\n    /* \"#utility.yul\":4623:4989   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4995:5414   */\ntag_8:\n    /* \"#utility.yul\":5161:5165   */\n  0x00\n    /* \"#utility.yul\":5199:5201   */\n  0x20\n    /* \"#utility.yul\":5188:5197   */\n  dup3\n    /* \"#utility.yul\":5184:5202   */\n  add\n    /* \"#utility.yul\":5176:5202   */\n  swap1\n  pop\n    /* \"#utility.yul\":5248:5257   */\n  dup2\n    /* \"#utility.yul\":5242:5246   */\n  dup2\n    /* \"#utility.yul\":5238:5258   */\n  sub\n    /* \"#utility.yul\":5234:5235   */\n  0x00\n    /* \"#utility.yul\":5223:5232   */\n  dup4\n    /* \"#utility.yul\":5219:5236   */\n  add\n    /* \"#utility.yul\":5212:5259   */\n  mstore\n    /* \"#utility.yul\":5276:5407   */\n  tag_111\n    /* \"#utility.yul\":5402:5406   */\n  dup2\n    /* \"#utility.yul\":5276:5407   */\n  tag_34\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5268:5407   */\n  swap1\n  pop\n    /* \"#utility.yul\":4995:5414   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5420:5646   */\ntag_35:\n    /* \"#utility.yul\":5560:5594   */\n  0x455243373231413a206d61782062617463682073697a65206d75737420626520\n    /* \"#utility.yul\":5556:5557   */\n  0x00\n    /* \"#utility.yul\":5548:5554   */\n  dup3\n    /* \"#utility.yul\":5544:5558   */\n  add\n    /* \"#utility.yul\":5537:5595   */\n  mstore\n    /* \"#utility.yul\":5629:5638   */\n  0x6e6f6e7a65726f00000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5624:5626   */\n  0x20\n    /* \"#utility.yul\":5616:5622   */\n  dup3\n    /* \"#utility.yul\":5612:5627   */\n  add\n    /* \"#utility.yul\":5605:5639   */\n  mstore\n    /* \"#utility.yul\":5420:5646   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5652:6018   */\ntag_36:\n    /* \"#utility.yul\":5794:5797   */\n  0x00\n    /* \"#utility.yul\":5815:5882   */\n  tag_114\n    /* \"#utility.yul\":5879:5881   */\n  0x27\n    /* \"#utility.yul\":5874:5877   */\n  dup4\n    /* \"#utility.yul\":5815:5882   */\n  tag_32\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5808:5882   */\n  swap2\n  pop\n    /* \"#utility.yul\":5891:5984   */\n  tag_115\n    /* \"#utility.yul\":5980:5983   */\n  dup3\n    /* \"#utility.yul\":5891:5984   */\n  tag_35\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6009:6011   */\n  0x40\n    /* \"#utility.yul\":6004:6007   */\n  dup3\n    /* \"#utility.yul\":6000:6012   */\n  add\n    /* \"#utility.yul\":5993:6012   */\n  swap1\n  pop\n    /* \"#utility.yul\":5652:6018   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6024:6443   */\ntag_11:\n    /* \"#utility.yul\":6190:6194   */\n  0x00\n    /* \"#utility.yul\":6228:6230   */\n  0x20\n    /* \"#utility.yul\":6217:6226   */\n  dup3\n    /* \"#utility.yul\":6213:6231   */\n  add\n    /* \"#utility.yul\":6205:6231   */\n  swap1\n  pop\n    /* \"#utility.yul\":6277:6286   */\n  dup2\n    /* \"#utility.yul\":6271:6275   */\n  dup2\n    /* \"#utility.yul\":6267:6287   */\n  sub\n    /* \"#utility.yul\":6263:6264   */\n  0x00\n    /* \"#utility.yul\":6252:6261   */\n  dup4\n    /* \"#utility.yul\":6248:6265   */\n  add\n    /* \"#utility.yul\":6241:6288   */\n  mstore\n    /* \"#utility.yul\":6305:6436   */\n  tag_117\n    /* \"#utility.yul\":6431:6435   */\n  dup2\n    /* \"#utility.yul\":6305:6436   */\n  tag_36\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6297:6436   */\n  swap1\n  pop\n    /* \"#utility.yul\":6024:6443   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6449:6548   */\ntag_37:\n    /* \"#utility.yul\":6501:6507   */\n  0x00\n    /* \"#utility.yul\":6535:6540   */\n  dup2\n    /* \"#utility.yul\":6529:6541   */\n  mload\n    /* \"#utility.yul\":6519:6541   */\n  swap1\n  pop\n    /* \"#utility.yul\":6449:6548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6554:6734   */\ntag_38:\n    /* \"#utility.yul\":6602:6679   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6599:6600   */\n  0x00\n    /* \"#utility.yul\":6592:6680   */\n  mstore\n    /* \"#utility.yul\":6699:6703   */\n  0x22\n    /* \"#utility.yul\":6696:6697   */\n  0x04\n    /* \"#utility.yul\":6689:6704   */\n  mstore\n    /* \"#utility.yul\":6723:6727   */\n  0x24\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6713:6728   */\n  revert\n    /* \"#utility.yul\":6740:7060   */\ntag_39:\n    /* \"#utility.yul\":6784:6790   */\n  0x00\n    /* \"#utility.yul\":6821:6822   */\n  0x02\n    /* \"#utility.yul\":6815:6819   */\n  dup3\n    /* \"#utility.yul\":6811:6823   */\n  div\n    /* \"#utility.yul\":6801:6823   */\n  swap1\n  pop\n    /* \"#utility.yul\":6868:6869   */\n  0x01\n    /* \"#utility.yul\":6862:6866   */\n  dup3\n    /* \"#utility.yul\":6858:6870   */\n  and\n    /* \"#utility.yul\":6889:6907   */\n  dup1\n    /* \"#utility.yul\":6879:6960   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6945:6949   */\n  0x7f\n    /* \"#utility.yul\":6937:6943   */\n  dup3\n    /* \"#utility.yul\":6933:6950   */\n  and\n    /* \"#utility.yul\":6923:6950   */\n  swap2\n  pop\n    /* \"#utility.yul\":6879:6960   */\ntag_121:\n    /* \"#utility.yul\":7007:7009   */\n  0x20\n    /* \"#utility.yul\":6999:7005   */\n  dup3\n    /* \"#utility.yul\":6996:7010   */\n  lt\n    /* \"#utility.yul\":6976:6994   */\n  dup2\n    /* \"#utility.yul\":6973:7011   */\n  sub\n    /* \"#utility.yul\":6970:7054   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":7026:7044   */\n  tag_123\n  tag_38\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6970:7054   */\ntag_122:\n    /* \"#utility.yul\":6791:7060   */\n  pop\n    /* \"#utility.yul\":6740:7060   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7066:7207   */\ntag_40:\n    /* \"#utility.yul\":7115:7119   */\n  0x00\n    /* \"#utility.yul\":7138:7141   */\n  dup2\n    /* \"#utility.yul\":7130:7141   */\n  swap1\n  pop\n    /* \"#utility.yul\":7161:7164   */\n  dup2\n    /* \"#utility.yul\":7158:7159   */\n  0x00\n    /* \"#utility.yul\":7151:7165   */\n  mstore\n    /* \"#utility.yul\":7195:7199   */\n  0x20\n    /* \"#utility.yul\":7192:7193   */\n  0x00\n    /* \"#utility.yul\":7182:7200   */\n  keccak256\n    /* \"#utility.yul\":7174:7200   */\n  swap1\n  pop\n    /* \"#utility.yul\":7066:7207   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7213:7306   */\ntag_41:\n    /* \"#utility.yul\":7250:7256   */\n  0x00\n    /* \"#utility.yul\":7297:7299   */\n  0x20\n    /* \"#utility.yul\":7292:7294   */\n  0x1f\n    /* \"#utility.yul\":7285:7290   */\n  dup4\n    /* \"#utility.yul\":7281:7295   */\n  add\n    /* \"#utility.yul\":7277:7300   */\n  div\n    /* \"#utility.yul\":7267:7300   */\n  swap1\n  pop\n    /* \"#utility.yul\":7213:7306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7312:7419   */\ntag_42:\n    /* \"#utility.yul\":7356:7364   */\n  0x00\n    /* \"#utility.yul\":7406:7411   */\n  dup3\n    /* \"#utility.yul\":7400:7404   */\n  dup3\n    /* \"#utility.yul\":7396:7412   */\n  shl\n    /* \"#utility.yul\":7375:7412   */\n  swap1\n  pop\n    /* \"#utility.yul\":7312:7419   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7425:7818   */\ntag_43:\n    /* \"#utility.yul\":7494:7500   */\n  0x00\n    /* \"#utility.yul\":7544:7545   */\n  0x08\n    /* \"#utility.yul\":7532:7542   */\n  dup4\n    /* \"#utility.yul\":7528:7546   */\n  mul\n    /* \"#utility.yul\":7567:7664   */\n  tag_128\n    /* \"#utility.yul\":7597:7663   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7586:7595   */\n  dup3\n    /* \"#utility.yul\":7567:7664   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7685:7724   */\n  tag_129\n    /* \"#utility.yul\":7715:7723   */\n  dup7\n    /* \"#utility.yul\":7704:7713   */\n  dup4\n    /* \"#utility.yul\":7685:7724   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7673:7724   */\n  swap6\n  pop\n    /* \"#utility.yul\":7757:7761   */\n  dup1\n    /* \"#utility.yul\":7753:7762   */\n  not\n    /* \"#utility.yul\":7746:7751   */\n  dup5\n    /* \"#utility.yul\":7742:7763   */\n  and\n    /* \"#utility.yul\":7733:7763   */\n  swap4\n  pop\n    /* \"#utility.yul\":7806:7810   */\n  dup1\n    /* \"#utility.yul\":7796:7804   */\n  dup7\n    /* \"#utility.yul\":7792:7811   */\n  and\n    /* \"#utility.yul\":7785:7790   */\n  dup5\n    /* \"#utility.yul\":7782:7812   */\n  or\n    /* \"#utility.yul\":7772:7812   */\n  swap3\n  pop\n    /* \"#utility.yul\":7501:7818   */\n  pop\n  pop\n    /* \"#utility.yul\":7425:7818   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7824:7884   */\ntag_44:\n    /* \"#utility.yul\":7852:7855   */\n  0x00\n    /* \"#utility.yul\":7873:7878   */\n  dup2\n    /* \"#utility.yul\":7866:7878   */\n  swap1\n  pop\n    /* \"#utility.yul\":7824:7884   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7890:8032   */\ntag_45:\n    /* \"#utility.yul\":7940:7949   */\n  0x00\n    /* \"#utility.yul\":7973:8026   */\n  tag_132\n    /* \"#utility.yul\":7991:8025   */\n  tag_133\n    /* \"#utility.yul\":8000:8024   */\n  tag_134\n    /* \"#utility.yul\":8018:8023   */\n  dup5\n    /* \"#utility.yul\":8000:8024   */\n  tag_29\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7991:8025   */\n  tag_44\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7973:8026   */\n  tag_29\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7960:8026   */\n  swap1\n  pop\n    /* \"#utility.yul\":7890:8032   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8038:8113   */\ntag_46:\n    /* \"#utility.yul\":8081:8084   */\n  0x00\n    /* \"#utility.yul\":8102:8107   */\n  dup2\n    /* \"#utility.yul\":8095:8107   */\n  swap1\n  pop\n    /* \"#utility.yul\":8038:8113   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8119:8388   */\ntag_47:\n    /* \"#utility.yul\":8229:8268   */\n  tag_137\n    /* \"#utility.yul\":8260:8267   */\n  dup4\n    /* \"#utility.yul\":8229:8268   */\n  tag_45\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8290:8381   */\n  tag_138\n    /* \"#utility.yul\":8339:8380   */\n  tag_139\n    /* \"#utility.yul\":8363:8379   */\n  dup3\n    /* \"#utility.yul\":8339:8380   */\n  tag_46\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8331:8337   */\n  dup5\n    /* \"#utility.yul\":8324:8328   */\n  dup5\n    /* \"#utility.yul\":8318:8329   */\n  sload\n    /* \"#utility.yul\":8290:8381   */\n  tag_43\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":8284:8288   */\n  dup3\n    /* \"#utility.yul\":8277:8382   */\n  sstore\n    /* \"#utility.yul\":8195:8388   */\n  pop\n    /* \"#utility.yul\":8119:8388   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8394:8467   */\ntag_48:\n    /* \"#utility.yul\":8439:8442   */\n  0x00\n    /* \"#utility.yul\":8394:8467   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":8473:8662   */\ntag_49:\n    /* \"#utility.yul\":8550:8582   */\n  tag_142\n  tag_48\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8591:8656   */\n  tag_143\n    /* \"#utility.yul\":8649:8655   */\n  dup2\n    /* \"#utility.yul\":8641:8647   */\n  dup5\n    /* \"#utility.yul\":8635:8639   */\n  dup5\n    /* \"#utility.yul\":8591:8656   */\n  tag_47\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8526:8662   */\n  pop\n    /* \"#utility.yul\":8473:8662   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8668:8854   */\ntag_50:\n    /* \"#utility.yul\":8728:8848   */\ntag_145:\n    /* \"#utility.yul\":8745:8748   */\n  dup2\n    /* \"#utility.yul\":8738:8743   */\n  dup2\n    /* \"#utility.yul\":8735:8749   */\n  lt\n    /* \"#utility.yul\":8728:8848   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8799:8838   */\n  tag_148\n    /* \"#utility.yul\":8836:8837   */\n  0x00\n    /* \"#utility.yul\":8829:8834   */\n  dup3\n    /* \"#utility.yul\":8799:8838   */\n  tag_49\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8772:8773   */\n  0x01\n    /* \"#utility.yul\":8765:8770   */\n  dup2\n    /* \"#utility.yul\":8761:8774   */\n  add\n    /* \"#utility.yul\":8752:8774   */\n  swap1\n  pop\n    /* \"#utility.yul\":8728:8848   */\n  jump(tag_145)\ntag_147:\n    /* \"#utility.yul\":8668:8854   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8860:9403   */\ntag_51:\n    /* \"#utility.yul\":8961:8963   */\n  0x1f\n    /* \"#utility.yul\":8956:8959   */\n  dup3\n    /* \"#utility.yul\":8953:8964   */\n  gt\n    /* \"#utility.yul\":8950:9396   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":8995:9033   */\n  tag_151\n    /* \"#utility.yul\":9027:9032   */\n  dup2\n    /* \"#utility.yul\":8995:9033   */\n  tag_40\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":9079:9108   */\n  tag_152\n    /* \"#utility.yul\":9097:9107   */\n  dup5\n    /* \"#utility.yul\":9079:9108   */\n  tag_41\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":9069:9077   */\n  dup2\n    /* \"#utility.yul\":9065:9109   */\n  add\n    /* \"#utility.yul\":9262:9264   */\n  0x20\n    /* \"#utility.yul\":9250:9260   */\n  dup6\n    /* \"#utility.yul\":9247:9265   */\n  lt\n    /* \"#utility.yul\":9244:9293   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":9283:9291   */\n  dup2\n    /* \"#utility.yul\":9268:9291   */\n  swap1\n  pop\n    /* \"#utility.yul\":9244:9293   */\ntag_153:\n    /* \"#utility.yul\":9306:9386   */\n  tag_154\n    /* \"#utility.yul\":9362:9384   */\n  tag_155\n    /* \"#utility.yul\":9380:9383   */\n  dup6\n    /* \"#utility.yul\":9362:9384   */\n  tag_41\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":9352:9360   */\n  dup4\n    /* \"#utility.yul\":9348:9385   */\n  add\n    /* \"#utility.yul\":9335:9346   */\n  dup3\n    /* \"#utility.yul\":9306:9386   */\n  tag_50\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8965:9396   */\n  pop\n  pop\n    /* \"#utility.yul\":8950:9396   */\ntag_150:\n    /* \"#utility.yul\":8860:9403   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9409:9526   */\ntag_52:\n    /* \"#utility.yul\":9463:9471   */\n  0x00\n    /* \"#utility.yul\":9513:9518   */\n  dup3\n    /* \"#utility.yul\":9507:9511   */\n  dup3\n    /* \"#utility.yul\":9503:9519   */\n  shr\n    /* \"#utility.yul\":9482:9519   */\n  swap1\n  pop\n    /* \"#utility.yul\":9409:9526   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9532:9701   */\ntag_53:\n    /* \"#utility.yul\":9576:9582   */\n  0x00\n    /* \"#utility.yul\":9609:9660   */\n  tag_158\n    /* \"#utility.yul\":9657:9658   */\n  0x00\n    /* \"#utility.yul\":9653:9659   */\n  not\n    /* \"#utility.yul\":9645:9650   */\n  dup5\n    /* \"#utility.yul\":9642:9643   */\n  0x08\n    /* \"#utility.yul\":9638:9651   */\n  mul\n    /* \"#utility.yul\":9609:9660   */\n  tag_52\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":9605:9661   */\n  not\n    /* \"#utility.yul\":9690:9694   */\n  dup1\n    /* \"#utility.yul\":9684:9688   */\n  dup4\n    /* \"#utility.yul\":9680:9695   */\n  and\n    /* \"#utility.yul\":9670:9695   */\n  swap2\n  pop\n    /* \"#utility.yul\":9583:9701   */\n  pop\n    /* \"#utility.yul\":9532:9701   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9706:10001   */\ntag_54:\n    /* \"#utility.yul\":9782:9786   */\n  0x00\n    /* \"#utility.yul\":9928:9957   */\n  tag_160\n    /* \"#utility.yul\":9953:9956   */\n  dup4\n    /* \"#utility.yul\":9947:9951   */\n  dup4\n    /* \"#utility.yul\":9928:9957   */\n  tag_53\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":9920:9957   */\n  swap2\n  pop\n    /* \"#utility.yul\":9990:9993   */\n  dup3\n    /* \"#utility.yul\":9987:9988   */\n  0x02\n    /* \"#utility.yul\":9983:9994   */\n  mul\n    /* \"#utility.yul\":9977:9981   */\n  dup3\n    /* \"#utility.yul\":9974:9995   */\n  or\n    /* \"#utility.yul\":9966:9995   */\n  swap1\n  pop\n    /* \"#utility.yul\":9706:10001   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10006:11401   */\ntag_13:\n    /* \"#utility.yul\":10123:10160   */\n  tag_162\n    /* \"#utility.yul\":10156:10159   */\n  dup3\n    /* \"#utility.yul\":10123:10160   */\n  tag_37\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":10225:10243   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":10217:10223   */\n  dup2\n    /* \"#utility.yul\":10214:10244   */\n  gt\n    /* \"#utility.yul\":10211:10267   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":10247:10265   */\n  tag_164\n  tag_22\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":10211:10267   */\ntag_163:\n    /* \"#utility.yul\":10291:10329   */\n  tag_165\n    /* \"#utility.yul\":10323:10327   */\n  dup3\n    /* \"#utility.yul\":10317:10328   */\n  sload\n    /* \"#utility.yul\":10291:10329   */\n  tag_39\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":10376:10443   */\n  tag_166\n    /* \"#utility.yul\":10436:10442   */\n  dup3\n    /* \"#utility.yul\":10428:10434   */\n  dup3\n    /* \"#utility.yul\":10422:10426   */\n  dup6\n    /* \"#utility.yul\":10376:10443   */\n  tag_51\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":10470:10471   */\n  0x00\n    /* \"#utility.yul\":10494:10498   */\n  0x20\n    /* \"#utility.yul\":10481:10498   */\n  swap1\n  pop\n    /* \"#utility.yul\":10526:10528   */\n  0x1f\n    /* \"#utility.yul\":10518:10524   */\n  dup4\n    /* \"#utility.yul\":10515:10529   */\n  gt\n    /* \"#utility.yul\":10543:10544   */\n  0x01\n    /* \"#utility.yul\":10538:11156   */\n  dup2\n  eq\n  tag_168\n  jumpi\n    /* \"#utility.yul\":11200:11201   */\n  0x00\n    /* \"#utility.yul\":11217:11223   */\n  dup5\n    /* \"#utility.yul\":11214:11291   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":11266:11275   */\n  dup3\n    /* \"#utility.yul\":11261:11264   */\n  dup8\n    /* \"#utility.yul\":11257:11276   */\n  add\n    /* \"#utility.yul\":11251:11277   */\n  mload\n    /* \"#utility.yul\":11242:11277   */\n  swap1\n  pop\n    /* \"#utility.yul\":11214:11291   */\ntag_169:\n    /* \"#utility.yul\":11317:11384   */\n  tag_170\n    /* \"#utility.yul\":11377:11383   */\n  dup6\n    /* \"#utility.yul\":11370:11375   */\n  dup3\n    /* \"#utility.yul\":11317:11384   */\n  tag_54\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":11311:11315   */\n  dup7\n    /* \"#utility.yul\":11304:11385   */\n  sstore\n    /* \"#utility.yul\":11173:11395   */\n  pop\n    /* \"#utility.yul\":10508:11395   */\n  jump(tag_167)\n    /* \"#utility.yul\":10538:11156   */\ntag_168:\n    /* \"#utility.yul\":10590:10594   */\n  0x1f\n    /* \"#utility.yul\":10586:10595   */\n  not\n    /* \"#utility.yul\":10578:10584   */\n  dup5\n    /* \"#utility.yul\":10574:10596   */\n  and\n    /* \"#utility.yul\":10624:10661   */\n  tag_171\n    /* \"#utility.yul\":10656:10660   */\n  dup7\n    /* \"#utility.yul\":10624:10661   */\n  tag_40\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":10683:10684   */\n  0x00\n    /* \"#utility.yul\":10697:10905   */\ntag_172:\n    /* \"#utility.yul\":10711:10718   */\n  dup3\n    /* \"#utility.yul\":10708:10709   */\n  dup2\n    /* \"#utility.yul\":10705:10719   */\n  lt\n    /* \"#utility.yul\":10697:10905   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":10790:10799   */\n  dup5\n    /* \"#utility.yul\":10785:10788   */\n  dup10\n    /* \"#utility.yul\":10781:10800   */\n  add\n    /* \"#utility.yul\":10775:10801   */\n  mload\n    /* \"#utility.yul\":10767:10773   */\n  dup3\n    /* \"#utility.yul\":10760:10802   */\n  sstore\n    /* \"#utility.yul\":10841:10842   */\n  0x01\n    /* \"#utility.yul\":10833:10839   */\n  dup3\n    /* \"#utility.yul\":10829:10843   */\n  add\n    /* \"#utility.yul\":10819:10843   */\n  swap2\n  pop\n    /* \"#utility.yul\":10888:10890   */\n  0x20\n    /* \"#utility.yul\":10877:10886   */\n  dup6\n    /* \"#utility.yul\":10873:10891   */\n  add\n    /* \"#utility.yul\":10860:10891   */\n  swap5\n  pop\n    /* \"#utility.yul\":10734:10738   */\n  0x20\n    /* \"#utility.yul\":10731:10732   */\n  dup2\n    /* \"#utility.yul\":10727:10739   */\n  add\n    /* \"#utility.yul\":10722:10739   */\n  swap1\n  pop\n    /* \"#utility.yul\":10697:10905   */\n  jump(tag_172)\ntag_174:\n    /* \"#utility.yul\":10933:10939   */\n  dup7\n    /* \"#utility.yul\":10924:10931   */\n  dup4\n    /* \"#utility.yul\":10921:10940   */\n  lt\n    /* \"#utility.yul\":10918:11097   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":10991:11000   */\n  dup5\n    /* \"#utility.yul\":10986:10989   */\n  dup10\n    /* \"#utility.yul\":10982:11001   */\n  add\n    /* \"#utility.yul\":10976:11002   */\n  mload\n    /* \"#utility.yul\":11034:11082   */\n  tag_176\n    /* \"#utility.yul\":11076:11080   */\n  0x1f\n    /* \"#utility.yul\":11068:11074   */\n  dup10\n    /* \"#utility.yul\":11064:11081   */\n  and\n    /* \"#utility.yul\":11053:11062   */\n  dup3\n    /* \"#utility.yul\":11034:11082   */\n  tag_53\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":11026:11032   */\n  dup4\n    /* \"#utility.yul\":11019:11083   */\n  sstore\n    /* \"#utility.yul\":10941:11097   */\n  pop\n    /* \"#utility.yul\":10918:11097   */\ntag_175:\n    /* \"#utility.yul\":11143:11144   */\n  0x01\n    /* \"#utility.yul\":11139:11140   */\n  0x02\n    /* \"#utility.yul\":11131:11137   */\n  dup9\n    /* \"#utility.yul\":11127:11141   */\n  mul\n    /* \"#utility.yul\":11123:11145   */\n  add\n    /* \"#utility.yul\":11117:11121   */\n  dup9\n    /* \"#utility.yul\":11110:11146   */\n  sstore\n    /* \"#utility.yul\":10545:11156   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":10508:11395   */\ntag_167:\n  pop\n    /* \"#utility.yul\":10098:11401   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":10006:11401   */\n  pop\n  pop\n  jump\t// out\n    /* \"standards/ERC721A.sol\":1728:16845  contract ERC721A is... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  0x00\n  assignImmutable(\"0x97798a7ce1eedb778fe135ba4f72c5cd61b1904f61f817965236ff22acf6c32a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"standards/ERC721A.sol\":1728:16845  contract ERC721A is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ccce7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd7224ba0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x4f6ccce7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"standards/ERC721A.sol\":4937:5295  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":6601:6693  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":8066:8266  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":7644:8013  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"standards/ERC721A.sol\":3499:3617  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":8884:9020  function transferFrom(... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"standards/ERC721A.sol\":4139:4878  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":9078:9229  function safeTransferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"standards/ERC721A.sol\":3681:3855  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":6431:6547  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":5346:5554  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":6749:6845  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":8325:8594  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"standards/ERC721A.sol\":9287:9587  function safeTransferFrom(... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"standards/ERC721A.sol\":6903:7280  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":13584:13627  uint256 public nextOwnerToExplicitlySet = 0 */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":8652:8830  function isApprovedForAll(address owner, address operator)... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"standards/ERC721A.sol\":4937:5295  function supportsInterface(bytes4 interfaceId)... */\n    tag_26:\n        /* \"standards/ERC721A.sol\":5059:5063  bool */\n      0x00\n        /* \"standards/ERC721A.sol\":5101:5126  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"standards/ERC721A.sol\":5086:5126  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"standards/ERC721A.sol\":5086:5097  interfaceId */\n      dup3\n        /* \"standards/ERC721A.sol\":5086:5126  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"standards/ERC721A.sol\":5086:5184  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":5151:5184  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"standards/ERC721A.sol\":5136:5184  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"standards/ERC721A.sol\":5136:5147  interfaceId */\n      dup3\n        /* \"standards/ERC721A.sol\":5136:5184  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"standards/ERC721A.sol\":5086:5184  interfaceId == type(IERC721).interfaceId ||... */\n    tag_95:\n        /* \"standards/ERC721A.sol\":5086:5244  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":5209:5244  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"standards/ERC721A.sol\":5194:5244  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"standards/ERC721A.sol\":5194:5205  interfaceId */\n      dup3\n        /* \"standards/ERC721A.sol\":5194:5244  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"standards/ERC721A.sol\":5086:5244  interfaceId == type(IERC721).interfaceId ||... */\n    tag_96:\n        /* \"standards/ERC721A.sol\":5086:5290  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":5254:5290  super.supportsInterface(interfaceId) */\n      tag_98\n        /* \"standards/ERC721A.sol\":5278:5289  interfaceId */\n      dup3\n        /* \"standards/ERC721A.sol\":5254:5277  super.supportsInterface */\n      tag_99\n        /* \"standards/ERC721A.sol\":5254:5290  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_98:\n        /* \"standards/ERC721A.sol\":5086:5290  interfaceId == type(IERC721).interfaceId ||... */\n    tag_97:\n        /* \"standards/ERC721A.sol\":5073:5290  return... */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":4937:5295  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":6601:6693  function name() public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"standards/ERC721A.sol\":6655:6668  string memory */\n      0x60\n        /* \"standards/ERC721A.sol\":6683:6688  _name */\n      0x01\n        /* \"standards/ERC721A.sol\":6676:6688  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6601:6693  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"standards/ERC721A.sol\":8066:8266  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_36:\n        /* \"standards/ERC721A.sol\":8134:8141  address */\n      0x00\n        /* \"standards/ERC721A.sol\":8157:8173  _exists(tokenId) */\n      tag_108\n        /* \"standards/ERC721A.sol\":8165:8172  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":8157:8164  _exists */\n      tag_109\n        /* \"standards/ERC721A.sol\":8157:8173  _exists(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"standards/ERC721A.sol\":8149:8223  require(_exists(tokenId), \"ERC721A: approved query for nonexistent token\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"standards/ERC721A.sol\":8237:8252  _tokenApprovals */\n      0x05\n        /* \"standards/ERC721A.sol\":8237:8261  _tokenApprovals[tokenId] */\n      0x00\n        /* \"standards/ERC721A.sol\":8253:8260  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":8237:8261  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":8230:8261  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":8066:8266  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":7644:8013  function approve(address to, uint256 tokenId) public override {... */\n    tag_42:\n        /* \"standards/ERC721A.sol\":7712:7725  address owner */\n      0x00\n        /* \"standards/ERC721A.sol\":7728:7752  ERC721A.ownerOf(tokenId) */\n      tag_114\n        /* \"standards/ERC721A.sol\":7744:7751  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":7728:7743  ERC721A.ownerOf */\n      tag_64\n        /* \"standards/ERC721A.sol\":7728:7752  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_114:\n        /* \"standards/ERC721A.sol\":7712:7752  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":7772:7777  owner */\n      dup1\n        /* \"standards/ERC721A.sol\":7766:7777  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":7766:7768  to */\n      dup4\n        /* \"standards/ERC721A.sol\":7766:7777  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":7758:7816  require(to != owner, \"ERC721A: approval to current owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"standards/ERC721A.sol\":7854:7859  owner */\n      dup1\n        /* \"standards/ERC721A.sol\":7838:7859  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":7838:7850  _msgSender() */\n      tag_118\n        /* \"standards/ERC721A.sol\":7838:7848  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":7838:7850  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"standards/ERC721A.sol\":7838:7859  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":7838:7900  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":7863:7900  isApprovedForAll(owner, _msgSender()) */\n      tag_121\n        /* \"standards/ERC721A.sol\":7880:7885  owner */\n      dup2\n        /* \"standards/ERC721A.sol\":7887:7899  _msgSender() */\n      tag_122\n        /* \"standards/ERC721A.sol\":7887:7897  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":7887:7899  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"standards/ERC721A.sol\":7863:7879  isApprovedForAll */\n      tag_92\n        /* \"standards/ERC721A.sol\":7863:7900  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_121:\n        /* \"standards/ERC721A.sol\":7838:7900  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_120:\n        /* \"standards/ERC721A.sol\":7823:7973  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"standards/ERC721A.sol\":7980:8008  _approve(to, tokenId, owner) */\n      tag_126\n        /* \"standards/ERC721A.sol\":7989:7991  to */\n      dup4\n        /* \"standards/ERC721A.sol\":7993:8000  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":8002:8007  owner */\n      dup4\n        /* \"standards/ERC721A.sol\":7980:7988  _approve */\n      tag_127\n        /* \"standards/ERC721A.sol\":7980:8008  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_126:\n        /* \"standards/ERC721A.sol\":7706:8013  {... */\n      pop\n        /* \"standards/ERC721A.sol\":7644:8013  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":3499:3617  function totalSupply() public view override returns (uint256) {... */\n    tag_44:\n        /* \"standards/ERC721A.sol\":3552:3559  uint256 */\n      0x00\n        /* \"standards/ERC721A.sol\":3589:3590  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":3574:3586  currentIndex */\n      sload(0x00)\n        /* \"standards/ERC721A.sol\":3574:3590  currentIndex - 1 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"standards/ERC721A.sol\":3567:3590  return currentIndex - 1 */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":3499:3617  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"standards/ERC721A.sol\":8884:9020  function transferFrom(... */\n    tag_50:\n        /* \"standards/ERC721A.sol\":8987:9015  _transfer(from, to, tokenId) */\n      tag_132\n        /* \"standards/ERC721A.sol\":8997:9001  from */\n      dup4\n        /* \"standards/ERC721A.sol\":9003:9005  to */\n      dup4\n        /* \"standards/ERC721A.sol\":9007:9014  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":8987:8996  _transfer */\n      tag_133\n        /* \"standards/ERC721A.sol\":8987:9015  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_132:\n        /* \"standards/ERC721A.sol\":8884:9020  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":4139:4878  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_53:\n        /* \"standards/ERC721A.sol\":4244:4251  uint256 */\n      0x00\n        /* \"standards/ERC721A.sol\":4277:4293  balanceOf(owner) */\n      tag_135\n        /* \"standards/ERC721A.sol\":4287:4292  owner */\n      dup4\n        /* \"standards/ERC721A.sol\":4277:4286  balanceOf */\n      tag_69\n        /* \"standards/ERC721A.sol\":4277:4293  balanceOf(owner) */\n      jump\t// in\n    tag_135:\n        /* \"standards/ERC721A.sol\":4269:4274  index */\n      dup3\n        /* \"standards/ERC721A.sol\":4269:4293  index < balanceOf(owner) */\n      lt\n        /* \"standards/ERC721A.sol\":4261:4332  require(index < balanceOf(owner), \"ERC721A: owner index out of bounds\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"standards/ERC721A.sol\":4338:4360  uint256 numMintedSoFar */\n      0x00\n        /* \"standards/ERC721A.sol\":4363:4376  totalSupply() */\n      tag_139\n        /* \"standards/ERC721A.sol\":4363:4374  totalSupply */\n      tag_44\n        /* \"standards/ERC721A.sol\":4363:4376  totalSupply() */\n      jump\t// in\n    tag_139:\n        /* \"standards/ERC721A.sol\":4338:4376  uint256 numMintedSoFar = totalSupply() */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":4382:4401  uint256 tokenIdsIdx */\n      0x00\n        /* \"standards/ERC721A.sol\":4411:4436  address currOwnershipAddr */\n      dup1\n        /* \"standards/ERC721A.sol\":4460:4469  uint256 i */\n      0x00\n        /* \"standards/ERC721A.sol\":4472:4473  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":4460:4473  uint256 i = 1 */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":4455:4812  for (uint256 i = 1; i <= numMintedSoFar; i++) { // 내가 수정... */\n    tag_140:\n        /* \"standards/ERC721A.sol\":4480:4494  numMintedSoFar */\n      dup4\n        /* \"standards/ERC721A.sol\":4475:4476  i */\n      dup2\n        /* \"standards/ERC721A.sol\":4475:4494  i <= numMintedSoFar */\n      gt\n        /* \"standards/ERC721A.sol\":4455:4812  for (uint256 i = 1; i <= numMintedSoFar; i++) { // 내가 수정... */\n      tag_141\n      jumpi\n        /* \"standards/ERC721A.sol\":4526:4557  TokenOwnership memory ownership */\n      0x00\n        /* \"standards/ERC721A.sol\":4560:4571  _ownerships */\n      0x03\n        /* \"standards/ERC721A.sol\":4560:4574  _ownerships[i] */\n      0x00\n        /* \"standards/ERC721A.sol\":4572:4573  i */\n      dup4\n        /* \"standards/ERC721A.sol\":4560:4574  _ownerships[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":4526:4574  TokenOwnership memory ownership = _ownerships[i] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":4612:4613  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":4586:4614  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":4586:4595  ownership */\n      dup2\n        /* \"standards/ERC721A.sol\":4586:4600  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":4586:4614  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":4582:4669  if (ownership.addr != address(0)) {... */\n      tag_143\n      jumpi\n        /* \"standards/ERC721A.sol\":4646:4655  ownership */\n      dup1\n        /* \"standards/ERC721A.sol\":4646:4660  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":4626:4660  currOwnershipAddr = ownership.addr */\n      swap3\n      pop\n        /* \"standards/ERC721A.sol\":4582:4669  if (ownership.addr != address(0)) {... */\n    tag_143:\n        /* \"standards/ERC721A.sol\":4701:4706  owner */\n      dup8\n        /* \"standards/ERC721A.sol\":4680:4706  currOwnershipAddr == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":4680:4697  currOwnershipAddr */\n      dup4\n        /* \"standards/ERC721A.sol\":4680:4706  currOwnershipAddr == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":4676:4806  if (currOwnershipAddr == owner) {... */\n      tag_144\n      jumpi\n        /* \"standards/ERC721A.sol\":4737:4742  index */\n      dup7\n        /* \"standards/ERC721A.sol\":4722:4733  tokenIdsIdx */\n      dup5\n        /* \"standards/ERC721A.sol\":4722:4742  tokenIdsIdx == index */\n      sub\n        /* \"standards/ERC721A.sol\":4718:4775  if (tokenIdsIdx == index) {... */\n      tag_145\n      jumpi\n        /* \"standards/ERC721A.sol\":4763:4764  i */\n      dup2\n        /* \"standards/ERC721A.sol\":4756:4764  return i */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_134)\n        /* \"standards/ERC721A.sol\":4718:4775  if (tokenIdsIdx == index) {... */\n    tag_145:\n        /* \"standards/ERC721A.sol\":4784:4797  tokenIdsIdx++ */\n      dup4\n      dup1\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      swap5\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":4676:4806  if (currOwnershipAddr == owner) {... */\n    tag_144:\n        /* \"standards/ERC721A.sol\":4501:4812  { // 내가 수정... */\n      pop\n        /* \"standards/ERC721A.sol\":4496:4499  i++ */\n      dup1\n      dup1\n      tag_148\n      swap1\n      tag_147\n      jump\t// in\n    tag_148:\n      swap2\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":4455:4812  for (uint256 i = 1; i <= numMintedSoFar; i++) { // 내가 수정... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"standards/ERC721A.sol\":4817:4873  revert(\"ERC721A: unable to get token of owner by index\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"standards/ERC721A.sol\":4139:4878  function tokenOfOwnerByIndex(address owner, uint256 index)... */\n    tag_134:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":9078:9229  function safeTransferFrom(... */\n    tag_57:\n        /* \"standards/ERC721A.sol\":9185:9224  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_152\n        /* \"standards/ERC721A.sol\":9202:9206  from */\n      dup4\n        /* \"standards/ERC721A.sol\":9208:9210  to */\n      dup4\n        /* \"standards/ERC721A.sol\":9212:9219  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":9185:9224  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"standards/ERC721A.sol\":9185:9201  safeTransferFrom */\n      tag_81\n        /* \"standards/ERC721A.sol\":9185:9224  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_152:\n        /* \"standards/ERC721A.sol\":9078:9229  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":3681:3855  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n    tag_60:\n        /* \"standards/ERC721A.sol\":3748:3755  uint256 */\n      0x00\n        /* \"standards/ERC721A.sol\":3779:3792  totalSupply() */\n      tag_154\n        /* \"standards/ERC721A.sol\":3779:3790  totalSupply */\n      tag_44\n        /* \"standards/ERC721A.sol\":3779:3792  totalSupply() */\n      jump\t// in\n    tag_154:\n        /* \"standards/ERC721A.sol\":3771:3776  index */\n      dup3\n        /* \"standards/ERC721A.sol\":3771:3792  index < totalSupply() */\n      lt\n        /* \"standards/ERC721A.sol\":3763:3832  require(index < totalSupply(), \"ERC721A: global index out of bounds\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"standards/ERC721A.sol\":3845:3850  index */\n      dup2\n        /* \"standards/ERC721A.sol\":3838:3850  return index */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":3681:3855  function tokenByIndex(uint256 index) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":6431:6547  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_64:\n        /* \"standards/ERC721A.sol\":6495:6502  address */\n      0x00\n        /* \"standards/ERC721A.sol\":6517:6537  ownershipOf(tokenId) */\n      tag_159\n        /* \"standards/ERC721A.sol\":6529:6536  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":6517:6528  ownershipOf */\n      tag_160\n        /* \"standards/ERC721A.sol\":6517:6537  ownershipOf(tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"standards/ERC721A.sol\":6517:6542  ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":6510:6542  return ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6431:6547  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":5346:5554  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_69:\n        /* \"standards/ERC721A.sol\":5410:5417  uint256 */\n      0x00\n        /* \"standards/ERC721A.sol\":5450:5451  0 */\n      dup1\n        /* \"standards/ERC721A.sol\":5433:5452  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":5433:5438  owner */\n      dup3\n        /* \"standards/ERC721A.sol\":5433:5452  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":5425:5500  require(owner != address(0), \"ERC721A: balance query for the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"standards/ERC721A.sol\":5521:5533  _addressData */\n      0x04\n        /* \"standards/ERC721A.sol\":5521:5540  _addressData[owner] */\n      0x00\n        /* \"standards/ERC721A.sol\":5534:5539  owner */\n      dup4\n        /* \"standards/ERC721A.sol\":5521:5540  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":5521:5548  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":5513:5549  uint256(_addressData[owner].balance) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":5506:5549  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":5346:5554  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":6749:6845  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"standards/ERC721A.sol\":6805:6818  string memory */\n      0x60\n        /* \"standards/ERC721A.sol\":6833:6840  _symbol */\n      0x02\n        /* \"standards/ERC721A.sol\":6826:6840  return _symbol */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_102\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_102\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6749:6845  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"standards/ERC721A.sol\":8325:8594  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_77:\n        /* \"standards/ERC721A.sol\":8427:8439  _msgSender() */\n      tag_172\n        /* \"standards/ERC721A.sol\":8427:8437  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":8427:8439  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"standards/ERC721A.sol\":8415:8439  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":8415:8423  operator */\n      dup3\n        /* \"standards/ERC721A.sol\":8415:8439  operator != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":8407:8470  require(operator != _msgSender(), \"ERC721A: approve to caller\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"standards/ERC721A.sol\":8522:8530  approved */\n      dup1\n        /* \"standards/ERC721A.sol\":8477:8495  _operatorApprovals */\n      0x06\n        /* \"standards/ERC721A.sol\":8477:8509  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"standards/ERC721A.sol\":8496:8508  _msgSender() */\n      tag_176\n        /* \"standards/ERC721A.sol\":8496:8506  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":8496:8508  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"standards/ERC721A.sol\":8477:8509  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":8477:8519  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"standards/ERC721A.sol\":8510:8518  operator */\n      dup5\n        /* \"standards/ERC721A.sol\":8477:8519  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"standards/ERC721A.sol\":8477:8530  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"standards/ERC721A.sol\":8570:8578  operator */\n      dup2\n        /* \"standards/ERC721A.sol\":8541:8589  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":8556:8568  _msgSender() */\n      tag_177\n        /* \"standards/ERC721A.sol\":8556:8566  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":8556:8568  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"standards/ERC721A.sol\":8541:8589  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"standards/ERC721A.sol\":8580:8588  approved */\n      dup4\n        /* \"standards/ERC721A.sol\":8541:8589  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"standards/ERC721A.sol\":8325:8594  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":9287:9587  function safeTransferFrom(... */\n    tag_81:\n        /* \"standards/ERC721A.sol\":9418:9446  _transfer(from, to, tokenId) */\n      tag_180\n        /* \"standards/ERC721A.sol\":9428:9432  from */\n      dup5\n        /* \"standards/ERC721A.sol\":9434:9436  to */\n      dup5\n        /* \"standards/ERC721A.sol\":9438:9445  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":9418:9427  _transfer */\n      tag_133\n        /* \"standards/ERC721A.sol\":9418:9446  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"standards/ERC721A.sol\":9467:9515  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_181\n        /* \"standards/ERC721A.sol\":9490:9494  from */\n      dup5\n        /* \"standards/ERC721A.sol\":9496:9498  to */\n      dup5\n        /* \"standards/ERC721A.sol\":9500:9507  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":9509:9514  _data */\n      dup5\n        /* \"standards/ERC721A.sol\":9467:9489  _checkOnERC721Received */\n      tag_182\n        /* \"standards/ERC721A.sol\":9467:9515  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_181:\n        /* \"standards/ERC721A.sol\":9452:9582  require(... */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"standards/ERC721A.sol\":9287:9587  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":6903:7280  function tokenURI(uint256 tokenId)... */\n    tag_84:\n        /* \"standards/ERC721A.sol\":6996:7009  string memory */\n      0x60\n        /* \"standards/ERC721A.sol\":7034:7050  _exists(tokenId) */\n      tag_187\n        /* \"standards/ERC721A.sol\":7042:7049  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":7034:7041  _exists */\n      tag_109\n        /* \"standards/ERC721A.sol\":7034:7050  _exists(tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"standards/ERC721A.sol\":7019:7113  require(... */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"standards/ERC721A.sol\":7120:7141  string memory baseURI */\n      0x00\n        /* \"standards/ERC721A.sol\":7144:7154  _baseURI() */\n      tag_191\n        /* \"standards/ERC721A.sol\":7144:7152  _baseURI */\n      tag_192\n        /* \"standards/ERC721A.sol\":7144:7154  _baseURI() */\n      jump\t// in\n    tag_191:\n        /* \"standards/ERC721A.sol\":7120:7154  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":7197:7198  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":7179:7186  baseURI */\n      dup2\n        /* \"standards/ERC721A.sol\":7173:7194  bytes(baseURI).length */\n      mload\n        /* \"standards/ERC721A.sol\":7173:7198  bytes(baseURI).length > 0 */\n      gt\n        /* \"standards/ERC721A.sol\":7173:7275  bytes(baseURI).length > 0... */\n      tag_193\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_194)\n    tag_193:\n        /* \"standards/ERC721A.sol\":7233:7240  baseURI */\n      dup1\n        /* \"standards/ERC721A.sol\":7242:7260  tokenId.toString() */\n      tag_195\n        /* \"standards/ERC721A.sol\":7242:7249  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":7242:7258  tokenId.toString */\n      tag_196\n        /* \"standards/ERC721A.sol\":7242:7260  tokenId.toString() */\n      jump\t// in\n    tag_195:\n        /* \"standards/ERC721A.sol\":7216:7261  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"standards/ERC721A.sol\":7173:7275  bytes(baseURI).length > 0... */\n    tag_194:\n        /* \"standards/ERC721A.sol\":7160:7275  return... */\n      swap2\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":6903:7280  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":13584:13627  uint256 public nextOwnerToExplicitlySet = 0 */\n    tag_87:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"standards/ERC721A.sol\":8652:8830  function isApprovedForAll(address owner, address operator)... */\n    tag_92:\n        /* \"standards/ERC721A.sol\":8769:8773  bool */\n      0x00\n        /* \"standards/ERC721A.sol\":8790:8808  _operatorApprovals */\n      0x06\n        /* \"standards/ERC721A.sol\":8790:8815  _operatorApprovals[owner] */\n      0x00\n        /* \"standards/ERC721A.sol\":8809:8814  owner */\n      dup5\n        /* \"standards/ERC721A.sol\":8790:8815  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":8790:8825  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"standards/ERC721A.sol\":8816:8824  operator */\n      dup4\n        /* \"standards/ERC721A.sol\":8790:8825  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"standards/ERC721A.sol\":8783:8825  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":8652:8830  function isApprovedForAll(address owner, address operator)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_99:\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":9817:9920  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_109:\n        /* \"standards/ERC721A.sol\":9874:9878  bool */\n      0x00\n        /* \"standards/ERC721A.sol\":9903:9915  currentIndex */\n      dup1\n      sload\n        /* \"standards/ERC721A.sol\":9893:9900  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":9893:9915  tokenId < currentIndex */\n      lt\n        /* \"standards/ERC721A.sol\":9886:9915  return tokenId < currentIndex */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":9817:9920  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"standards/ERC721A.sol\":13415:13580  function _approve(... */\n    tag_127:\n        /* \"standards/ERC721A.sol\":13534:13536  to */\n      dup3\n        /* \"standards/ERC721A.sol\":13507:13522  _tokenApprovals */\n      0x05\n        /* \"standards/ERC721A.sol\":13507:13531  _tokenApprovals[tokenId] */\n      0x00\n        /* \"standards/ERC721A.sol\":13523:13530  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":13507:13531  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"standards/ERC721A.sol\":13507:13536  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"standards/ERC721A.sol\":13567:13574  tokenId */\n      dup2\n        /* \"standards/ERC721A.sol\":13563:13565  to */\n      dup4\n        /* \"standards/ERC721A.sol\":13547:13575  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":13556:13561  owner */\n      dup3\n        /* \"standards/ERC721A.sol\":13547:13575  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"standards/ERC721A.sol\":13415:13580  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":11832:13316  function _transfer(... */\n    tag_133:\n        /* \"standards/ERC721A.sol\":11924:11959  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"standards/ERC721A.sol\":11962:11982  ownershipOf(tokenId) */\n      tag_205\n        /* \"standards/ERC721A.sol\":11974:11981  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":11962:11973  ownershipOf */\n      tag_160\n        /* \"standards/ERC721A.sol\":11962:11982  ownershipOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"standards/ERC721A.sol\":11924:11982  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":11989:12011  bool isApprovedOrOwner */\n      0x00\n        /* \"standards/ERC721A.sol\":12031:12044  prevOwnership */\n      dup2\n        /* \"standards/ERC721A.sol\":12031:12049  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":12015:12049  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":12015:12027  _msgSender() */\n      tag_206\n        /* \"standards/ERC721A.sol\":12015:12025  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":12015:12027  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"standards/ERC721A.sol\":12015:12049  _msgSender() == prevOwnership.addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":12015:12095  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_207\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":12083:12095  _msgSender() */\n      tag_208\n        /* \"standards/ERC721A.sol\":12083:12093  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":12083:12095  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"standards/ERC721A.sol\":12059:12095  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":12059:12079  getApproved(tokenId) */\n      tag_209\n        /* \"standards/ERC721A.sol\":12071:12078  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":12059:12070  getApproved */\n      tag_36\n        /* \"standards/ERC721A.sol\":12059:12079  getApproved(tokenId) */\n      jump\t// in\n    tag_209:\n        /* \"standards/ERC721A.sol\":12059:12095  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":12015:12095  _msgSender() == prevOwnership.addr ||... */\n    tag_207:\n        /* \"standards/ERC721A.sol\":12015:12155  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_210\n      jumpi\n      pop\n        /* \"standards/ERC721A.sol\":12105:12155  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_211\n        /* \"standards/ERC721A.sol\":12122:12135  prevOwnership */\n      dup3\n        /* \"standards/ERC721A.sol\":12122:12140  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":12142:12154  _msgSender() */\n      tag_212\n        /* \"standards/ERC721A.sol\":12142:12152  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":12142:12154  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"standards/ERC721A.sol\":12105:12121  isApprovedForAll */\n      tag_92\n        /* \"standards/ERC721A.sol\":12105:12155  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      jump\t// in\n    tag_211:\n        /* \"standards/ERC721A.sol\":12015:12155  _msgSender() == prevOwnership.addr ||... */\n    tag_210:\n        /* \"standards/ERC721A.sol\":11989:12156  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":12178:12195  isApprovedOrOwner */\n      dup1\n        /* \"standards/ERC721A.sol\":12163:12261  require(... */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"standards/ERC721A.sol\":12305:12309  from */\n      dup5\n        /* \"standards/ERC721A.sol\":12283:12309  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":12283:12296  prevOwnership */\n      dup3\n        /* \"standards/ERC721A.sol\":12283:12301  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":12283:12309  prevOwnership.addr == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":12268:12363  require(... */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"standards/ERC721A.sol\":12391:12392  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":12377:12393  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":12377:12379  to */\n      dup5\n        /* \"standards/ERC721A.sol\":12377:12393  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":12369:12435  require(to != address(0), \"ERC721A: transfer to the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"standards/ERC721A.sol\":12442:12485  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_222\n        /* \"standards/ERC721A.sol\":12464:12468  from */\n      dup6\n        /* \"standards/ERC721A.sol\":12470:12472  to */\n      dup6\n        /* \"standards/ERC721A.sol\":12474:12481  tokenId */\n      dup6\n        /* \"standards/ERC721A.sol\":12483:12484  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":12442:12463  _beforeTokenTransfers */\n      tag_223\n        /* \"standards/ERC721A.sol\":12442:12485  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_222:\n        /* \"standards/ERC721A.sol\":12539:12588  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_224\n        /* \"standards/ERC721A.sol\":12556:12557  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":12560:12567  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":12569:12582  prevOwnership */\n      dup5\n        /* \"standards/ERC721A.sol\":12569:12587  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":12539:12547  _approve */\n      tag_127\n        /* \"standards/ERC721A.sol\":12539:12588  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_224:\n        /* \"standards/ERC721A.sol\":12625:12626  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":12595:12607  _addressData */\n      0x04\n        /* \"standards/ERC721A.sol\":12595:12613  _addressData[from] */\n      0x00\n        /* \"standards/ERC721A.sol\":12608:12612  from */\n      dup8\n        /* \"standards/ERC721A.sol\":12595:12613  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":12595:12621  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"standards/ERC721A.sol\":12595:12626  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"standards/ERC721A.sol\":12660:12661  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":12632:12644  _addressData */\n      0x04\n        /* \"standards/ERC721A.sol\":12632:12648  _addressData[to] */\n      0x00\n        /* \"standards/ERC721A.sol\":12645:12647  to */\n      dup7\n        /* \"standards/ERC721A.sol\":12632:12648  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":12632:12656  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"standards/ERC721A.sol\":12632:12661  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"standards/ERC721A.sol\":12690:12733  TokenOwnership(to, uint64(block.timestamp)) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"standards/ERC721A.sol\":12705:12707  to */\n      dup6\n        /* \"standards/ERC721A.sol\":12690:12733  TokenOwnership(to, uint64(block.timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"standards/ERC721A.sol\":12716:12731  block.timestamp */\n      timestamp\n        /* \"standards/ERC721A.sol\":12690:12733  TokenOwnership(to, uint64(block.timestamp)) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"standards/ERC721A.sol\":12667:12678  _ownerships */\n      0x03\n        /* \"standards/ERC721A.sol\":12667:12687  _ownerships[tokenId] */\n      0x00\n        /* \"standards/ERC721A.sol\":12679:12686  tokenId */\n      dup6\n        /* \"standards/ERC721A.sol\":12667:12687  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":12667:12733  _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp)) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":12957:12976  uint256 nextTokenId */\n      0x00\n        /* \"standards/ERC721A.sol\":12989:12990  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":12979:12986  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":12979:12990  tokenId + 1 */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"standards/ERC721A.sol\":12957:12990  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":13041:13042  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":13000:13043  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":13000:13011  _ownerships */\n      0x03\n        /* \"standards/ERC721A.sol\":13000:13024  _ownerships[nextTokenId] */\n      0x00\n        /* \"standards/ERC721A.sol\":13012:13023  nextTokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":13000:13024  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":13000:13029  _ownerships[nextTokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":13000:13043  _ownerships[nextTokenId].addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"standards/ERC721A.sol\":12996:13225  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"standards/ERC721A.sol\":13057:13077  _exists(nextTokenId) */\n      tag_232\n        /* \"standards/ERC721A.sol\":13065:13076  nextTokenId */\n      dup2\n        /* \"standards/ERC721A.sol\":13057:13064  _exists */\n      tag_109\n        /* \"standards/ERC721A.sol\":13057:13077  _exists(nextTokenId) */\n      jump\t// in\n    tag_232:\n        /* \"standards/ERC721A.sol\":13053:13219  if (_exists(nextTokenId)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"standards/ERC721A.sol\":13116:13210  TokenOwnership(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"standards/ERC721A.sol\":13142:13155  prevOwnership */\n      dup5\n        /* \"standards/ERC721A.sol\":13142:13160  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":13116:13210  TokenOwnership(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"standards/ERC721A.sol\":13172:13185  prevOwnership */\n      dup5\n        /* \"standards/ERC721A.sol\":13172:13200  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"standards/ERC721A.sol\":13116:13210  TokenOwnership(... */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"standards/ERC721A.sol\":13089:13100  _ownerships */\n      0x03\n        /* \"standards/ERC721A.sol\":13089:13113  _ownerships[nextTokenId] */\n      0x00\n        /* \"standards/ERC721A.sol\":13101:13112  nextTokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":13089:13113  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":13089:13210  _ownerships[nextTokenId] = TokenOwnership(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":13053:13219  if (_exists(nextTokenId)) {... */\n    tag_233:\n        /* \"standards/ERC721A.sol\":12996:13225  if (_ownerships[nextTokenId].addr == address(0)) {... */\n    tag_231:\n        /* \"standards/ERC721A.sol\":13255:13262  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":13251:13253  to */\n      dup6\n        /* \"standards/ERC721A.sol\":13236:13263  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":13245:13249  from */\n      dup8\n        /* \"standards/ERC721A.sol\":13236:13263  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"standards/ERC721A.sol\":13269:13311  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_234\n        /* \"standards/ERC721A.sol\":13290:13294  from */\n      dup7\n        /* \"standards/ERC721A.sol\":13296:13298  to */\n      dup7\n        /* \"standards/ERC721A.sol\":13300:13307  tokenId */\n      dup7\n        /* \"standards/ERC721A.sol\":13309:13310  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":13269:13289  _afterTokenTransfers */\n      tag_235\n        /* \"standards/ERC721A.sol\":13269:13311  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_234:\n        /* \"standards/ERC721A.sol\":11918:13316  {... */\n      pop\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":11832:13316  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":5796:6382  function ownershipOf(uint256 tokenId)... */\n    tag_160:\n        /* \"standards/ERC721A.sol\":5869:5890  TokenOwnership memory */\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"standards/ERC721A.sol\":5908:5924  _exists(tokenId) */\n      tag_239\n        /* \"standards/ERC721A.sol\":5916:5923  tokenId */\n      dup3\n        /* \"standards/ERC721A.sol\":5908:5915  _exists */\n      tag_109\n        /* \"standards/ERC721A.sol\":5908:5924  _exists(tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"standards/ERC721A.sol\":5900:5971  require(_exists(tokenId), \"ERC721A: owner query for nonexistent token\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"standards/ERC721A.sol\":5978:6004  uint256 lowestTokenToCheck */\n      0x00\n        /* \"standards/ERC721A.sol\":6025:6037  maxBatchSize */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"standards/ERC721A.sol\":6014:6021  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":6014:6037  tokenId >= maxBatchSize */\n      lt\n        /* \"standards/ERC721A.sol\":6010:6101  if (tokenId >= maxBatchSize) {... */\n      tag_243\n      jumpi\n        /* \"standards/ERC721A.sol\":6093:6094  1 */\n      0x01\n        /* \"standards/ERC721A.sol\":6078:6090  maxBatchSize */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"standards/ERC721A.sol\":6068:6075  tokenId */\n      dup5\n        /* \"standards/ERC721A.sol\":6068:6090  tokenId - maxBatchSize */\n      tag_244\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_244:\n        /* \"standards/ERC721A.sol\":6068:6094  tokenId - maxBatchSize + 1 */\n      tag_245\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_245:\n        /* \"standards/ERC721A.sol\":6047:6094  lowestTokenToCheck = tokenId - maxBatchSize + 1 */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6010:6101  if (tokenId >= maxBatchSize) {... */\n    tag_243:\n        /* \"standards/ERC721A.sol\":6112:6124  uint256 curr */\n      0x00\n        /* \"standards/ERC721A.sol\":6127:6134  tokenId */\n      dup4\n        /* \"standards/ERC721A.sol\":6112:6134  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6107:6314  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n    tag_246:\n        /* \"standards/ERC721A.sol\":6144:6162  lowestTokenToCheck */\n      dup2\n        /* \"standards/ERC721A.sol\":6136:6140  curr */\n      dup2\n        /* \"standards/ERC721A.sol\":6136:6162  curr >= lowestTokenToCheck */\n      lt\n        /* \"standards/ERC721A.sol\":6107:6314  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n      tag_247\n      jumpi\n        /* \"standards/ERC721A.sol\":6180:6211  TokenOwnership memory ownership */\n      0x00\n        /* \"standards/ERC721A.sol\":6214:6225  _ownerships */\n      0x03\n        /* \"standards/ERC721A.sol\":6214:6231  _ownerships[curr] */\n      0x00\n        /* \"standards/ERC721A.sol\":6226:6230  curr */\n      dup4\n        /* \"standards/ERC721A.sol\":6214:6231  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"standards/ERC721A.sol\":6180:6231  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":6269:6270  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":6243:6271  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"standards/ERC721A.sol\":6243:6252  ownership */\n      dup2\n        /* \"standards/ERC721A.sol\":6243:6257  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"standards/ERC721A.sol\":6243:6271  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"standards/ERC721A.sol\":6239:6308  if (ownership.addr != address(0)) {... */\n      tag_249\n      jumpi\n        /* \"standards/ERC721A.sol\":6290:6299  ownership */\n      dup1\n        /* \"standards/ERC721A.sol\":6283:6299  return ownership */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_238)\n        /* \"standards/ERC721A.sol\":6239:6308  if (ownership.addr != address(0)) {... */\n    tag_249:\n        /* \"standards/ERC721A.sol\":6172:6314  {... */\n      pop\n        /* \"standards/ERC721A.sol\":6164:6170  curr-- */\n      dup1\n      dup1\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      swap2\n      pop\n      pop\n        /* \"standards/ERC721A.sol\":6107:6314  for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {... */\n      jump(tag_246)\n    tag_247:\n      pop\n        /* \"standards/ERC721A.sol\":6320:6377  revert(\"ERC721A: unable to determine the owner of token\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"standards/ERC721A.sol\":5796:6382  function ownershipOf(uint256 tokenId)... */\n    tag_238:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":15085:15752  function _checkOnERC721Received(... */\n    tag_182:\n        /* \"standards/ERC721A.sol\":15217:15221  bool */\n      0x00\n        /* \"standards/ERC721A.sol\":15233:15248  to.isContract() */\n      tag_255\n        /* \"standards/ERC721A.sol\":15233:15235  to */\n      dup5\n        /* \"standards/ERC721A.sol\":15233:15246  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_256\n        /* \"standards/ERC721A.sol\":15233:15248  to.isContract() */\n      jump\t// in\n    tag_255:\n        /* \"standards/ERC721A.sol\":15229:15748  if (to.isContract()) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"standards/ERC721A.sol\":15286:15288  to */\n      dup4\n        /* \"standards/ERC721A.sol\":15270:15306  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"standards/ERC721A.sol\":15307:15319  _msgSender() */\n      tag_258\n        /* \"standards/ERC721A.sol\":15307:15317  _msgSender */\n      tag_119\n        /* \"standards/ERC721A.sol\":15307:15319  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"standards/ERC721A.sol\":15321:15325  from */\n      dup8\n        /* \"standards/ERC721A.sol\":15327:15334  tokenId */\n      dup7\n        /* \"standards/ERC721A.sol\":15336:15341  _data */\n      dup7\n        /* \"standards/ERC721A.sol\":15270:15342  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      0x01\n    tag_261:\n        /* \"standards/ERC721A.sol\":15258:15710  try... */\n      tag_264\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_269\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_268)\n    tag_269:\n      0x60\n      swap2\n      pop\n    tag_268:\n      pop\n        /* \"standards/ERC721A.sol\":15514:15515  0 */\n      0x00\n        /* \"standards/ERC721A.sol\":15497:15503  reason */\n      dup2\n        /* \"standards/ERC721A.sol\":15497:15510  reason.length */\n      mload\n        /* \"standards/ERC721A.sol\":15497:15515  reason.length == 0 */\n      sub\n        /* \"standards/ERC721A.sol\":15493:15702  if (reason.length == 0) {... */\n      tag_270\n      jumpi\n        /* \"standards/ERC721A.sol\":15529:15590  revert(\"ERC721A: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_185\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"standards/ERC721A.sol\":15493:15702  if (reason.length == 0) {... */\n    tag_270:\n        /* \"standards/ERC721A.sol\":15672:15678  reason */\n      dup1\n        /* \"standards/ERC721A.sol\":15666:15679  mload(reason) */\n      mload\n        /* \"standards/ERC721A.sol\":15657:15663  reason */\n      dup2\n        /* \"standards/ERC721A.sol\":15653:15655  32 */\n      0x20\n        /* \"standards/ERC721A.sol\":15649:15664  add(32, reason) */\n      add\n        /* \"standards/ERC721A.sol\":15642:15680  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"standards/ERC721A.sol\":15258:15710  try... */\n    tag_264:\n        /* \"standards/ERC721A.sol\":15400:15445  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"standards/ERC721A.sol\":15390:15445  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"standards/ERC721A.sol\":15390:15396  retval */\n      dup2\n        /* \"standards/ERC721A.sol\":15390:15445  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"standards/ERC721A.sol\":15383:15445  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_254)\n        /* \"standards/ERC721A.sol\":15229:15748  if (to.isContract()) {... */\n    tag_257:\n        /* \"standards/ERC721A.sol\":15737:15741  true */\n      0x01\n        /* \"standards/ERC721A.sol\":15730:15741  return true */\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":15085:15752  function _checkOnERC721Received(... */\n    tag_254:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":7509:7595  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_192:\n        /* \"standards/ERC721A.sol\":7560:7573  string memory */\n      0x60\n        /* \"standards/ERC721A.sol\":7581:7590  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"standards/ERC721A.sol\":7509:7595  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_196:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":601:606  value */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_277\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_276)\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_277:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":672:677  value */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":657:677  uint256 temp = value */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":687:701  uint256 digits */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_278:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":726:727  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":718:722  temp */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      eq\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_279\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      dup1\n      tag_280\n      swap1\n      tag_147\n      jump\t// in\n    tag_280:\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup3\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_278)\n    tag_279:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_283\n      jumpi\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n    tag_283:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_286\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_286:\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_287:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":860:861  0 */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":851:856  value */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":851:861  value != 0 */\n      eq\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_288\n      jumpi\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup3\n      tag_289\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_289:\n      swap2\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":945:950  value */\n      dup6\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_290\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_292\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_292:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n    tag_293:\n      0x20\n      add\n      add\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup6\n      tag_296\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_296:\n      swap5\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_287)\n    tag_288:\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":1017:1023  buffer */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":1003:1024  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_276:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":16200:16336  function _beforeTokenTransfers(... */\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"standards/ERC721A.sol\":16708:16843  function _afterTokenTransfers(... */\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_256:\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"openzeppelin-solidity/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_237:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_300:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_301:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_302:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_303:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_304:\n        /* \"#utility.yul\":561:584   */\n      tag_378\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_303\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_379:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_305:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_381\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_304\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_384\n      tag_301\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":833:952   */\n    tag_383:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_385\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_305\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_306:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_307:\n        /* \"#utility.yul\":1268:1289   */\n      tag_388\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_306\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_390\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_307\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_308:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_309:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_310:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_394:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_394)\n    tag_396:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_311:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_312:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_399\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_308\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2329:2400   */\n      tag_400\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_309\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_401\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_310\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2499:2528   */\n      tag_402\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_311\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_32:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_404\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_312\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_313:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_314:\n        /* \"#utility.yul\":3016:3040   */\n      tag_407\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_313\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_408:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_315:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_410\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_314\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_35:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_413\n      tag_301\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3292:3411   */\n    tag_412:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_414\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_315\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_316:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_317:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_417\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_316\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_318:\n        /* \"#utility.yul\":3872:3896   */\n      tag_419\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_317\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_38:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_421\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_318\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_319:\n        /* \"#utility.yul\":4210:4234   */\n      tag_423\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_317\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_424:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_320:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_426\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_319\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_41:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_429\n      tag_301\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4503:4622   */\n    tag_428:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_430\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_320\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_431\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_315\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_321:\n        /* \"#utility.yul\":4977:5001   */\n      tag_433\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_313\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_46:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_435\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_321\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_49:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_438\n      tag_301\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5352:5471   */\n    tag_437:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_439\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_320\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_440\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_320\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_441\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_315\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_68:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_444\n      tag_301\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5943:6062   */\n    tag_443:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_445\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_320\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_322:\n        /* \"#utility.yul\":6272:6293   */\n      tag_447\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_306\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_448:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_323:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_450\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_322\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_76:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_453\n      tag_301\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6553:6672   */\n    tag_452:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_454\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_320\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_455\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_323\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_324:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_325:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_285:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_326:\n        /* \"#utility.yul\":7452:7479   */\n      tag_460\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_311\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_462\n      tag_285\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7525:7613   */\n    tag_461:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_327:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_464\n      tag_300\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_465\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_326\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_328:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_468\n      tag_285\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7928:7984   */\n    tag_467:\n        /* \"#utility.yul\":8002:8031   */\n      tag_469\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_311\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_329:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_330:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_472\n        /* \"#utility.yul\":8374:8422   */\n      tag_473\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_328\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8358:8423   */\n      tag_327\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_475\n      tag_325\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8498:8610   */\n    tag_474:\n        /* \"#utility.yul\":8619:8673   */\n      tag_476\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_329\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_331:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_479\n      tag_324\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8769:8891   */\n    tag_478:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_480\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_330\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_80:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_483\n      tag_301\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9178:9298   */\n    tag_482:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_484\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_320\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_485\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_320\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_486\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_315\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_488\n      tag_302\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9765:9882   */\n    tag_487:\n        /* \"#utility.yul\":9906:9968   */\n      tag_489\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_331\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_91:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_492\n      tag_301\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10084:10203   */\n    tag_491:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_493\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_320\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_494\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_320\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_332:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_102:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_497:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_499\n      tag_332\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10887:10971   */\n    tag_498:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11215   */\n    tag_333:\n        /* \"#utility.yul\":11123:11157   */\n      0x455243373231413a20617070726f76656420717565727920666f72206e6f6e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11207   */\n      0x78697374656e7420746f6b656e00000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11208   */\n      mstore\n        /* \"#utility.yul\":10983:11215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:11587   */\n    tag_334:\n        /* \"#utility.yul\":11363:11366   */\n      0x00\n        /* \"#utility.yul\":11384:11451   */\n      tag_502\n        /* \"#utility.yul\":11448:11450   */\n      0x2d\n        /* \"#utility.yul\":11443:11446   */\n      dup4\n        /* \"#utility.yul\":11384:11451   */\n      tag_309\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11377:11451   */\n      swap2\n      pop\n        /* \"#utility.yul\":11460:11553   */\n      tag_503\n        /* \"#utility.yul\":11549:11552   */\n      dup3\n        /* \"#utility.yul\":11460:11553   */\n      tag_333\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11578:11580   */\n      0x40\n        /* \"#utility.yul\":11573:11576   */\n      dup3\n        /* \"#utility.yul\":11569:11581   */\n      add\n        /* \"#utility.yul\":11562:11581   */\n      swap1\n      pop\n        /* \"#utility.yul\":11221:11587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11593:12012   */\n    tag_112:\n        /* \"#utility.yul\":11759:11763   */\n      0x00\n        /* \"#utility.yul\":11797:11799   */\n      0x20\n        /* \"#utility.yul\":11786:11795   */\n      dup3\n        /* \"#utility.yul\":11782:11800   */\n      add\n        /* \"#utility.yul\":11774:11800   */\n      swap1\n      pop\n        /* \"#utility.yul\":11846:11855   */\n      dup2\n        /* \"#utility.yul\":11840:11844   */\n      dup2\n        /* \"#utility.yul\":11836:11856   */\n      sub\n        /* \"#utility.yul\":11832:11833   */\n      0x00\n        /* \"#utility.yul\":11821:11830   */\n      dup4\n        /* \"#utility.yul\":11817:11834   */\n      add\n        /* \"#utility.yul\":11810:11857   */\n      mstore\n        /* \"#utility.yul\":11874:12005   */\n      tag_505\n        /* \"#utility.yul\":12000:12004   */\n      dup2\n        /* \"#utility.yul\":11874:12005   */\n      tag_334\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11866:12005   */\n      swap1\n      pop\n        /* \"#utility.yul\":11593:12012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12018:12239   */\n    tag_335:\n        /* \"#utility.yul\":12158:12192   */\n      0x455243373231413a20617070726f76616c20746f2063757272656e74206f776e\n        /* \"#utility.yul\":12154:12155   */\n      0x00\n        /* \"#utility.yul\":12146:12152   */\n      dup3\n        /* \"#utility.yul\":12142:12156   */\n      add\n        /* \"#utility.yul\":12135:12193   */\n      mstore\n        /* \"#utility.yul\":12227:12231   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12222:12224   */\n      0x20\n        /* \"#utility.yul\":12214:12220   */\n      dup3\n        /* \"#utility.yul\":12210:12225   */\n      add\n        /* \"#utility.yul\":12203:12232   */\n      mstore\n        /* \"#utility.yul\":12018:12239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12611   */\n    tag_336:\n        /* \"#utility.yul\":12387:12390   */\n      0x00\n        /* \"#utility.yul\":12408:12475   */\n      tag_508\n        /* \"#utility.yul\":12472:12474   */\n      0x22\n        /* \"#utility.yul\":12467:12470   */\n      dup4\n        /* \"#utility.yul\":12408:12475   */\n      tag_309\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12401:12475   */\n      swap2\n      pop\n        /* \"#utility.yul\":12484:12577   */\n      tag_509\n        /* \"#utility.yul\":12573:12576   */\n      dup3\n        /* \"#utility.yul\":12484:12577   */\n      tag_335\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12602:12604   */\n      0x40\n        /* \"#utility.yul\":12597:12600   */\n      dup3\n        /* \"#utility.yul\":12593:12605   */\n      add\n        /* \"#utility.yul\":12586:12605   */\n      swap1\n      pop\n        /* \"#utility.yul\":12245:12611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12617:13036   */\n    tag_117:\n        /* \"#utility.yul\":12783:12787   */\n      0x00\n        /* \"#utility.yul\":12821:12823   */\n      0x20\n        /* \"#utility.yul\":12810:12819   */\n      dup3\n        /* \"#utility.yul\":12806:12824   */\n      add\n        /* \"#utility.yul\":12798:12824   */\n      swap1\n      pop\n        /* \"#utility.yul\":12870:12879   */\n      dup2\n        /* \"#utility.yul\":12864:12868   */\n      dup2\n        /* \"#utility.yul\":12860:12880   */\n      sub\n        /* \"#utility.yul\":12856:12857   */\n      0x00\n        /* \"#utility.yul\":12845:12854   */\n      dup4\n        /* \"#utility.yul\":12841:12858   */\n      add\n        /* \"#utility.yul\":12834:12881   */\n      mstore\n        /* \"#utility.yul\":12898:13029   */\n      tag_511\n        /* \"#utility.yul\":13024:13028   */\n      dup2\n        /* \"#utility.yul\":12898:13029   */\n      tag_336\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12890:13029   */\n      swap1\n      pop\n        /* \"#utility.yul\":12617:13036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13042:13286   */\n    tag_337:\n        /* \"#utility.yul\":13182:13216   */\n      0x455243373231413a20617070726f76652063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":13178:13179   */\n      0x00\n        /* \"#utility.yul\":13170:13176   */\n      dup3\n        /* \"#utility.yul\":13166:13180   */\n      add\n        /* \"#utility.yul\":13159:13217   */\n      mstore\n        /* \"#utility.yul\":13251:13278   */\n      0x776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000\n        /* \"#utility.yul\":13246:13248   */\n      0x20\n        /* \"#utility.yul\":13238:13244   */\n      dup3\n        /* \"#utility.yul\":13234:13249   */\n      add\n        /* \"#utility.yul\":13227:13279   */\n      mstore\n        /* \"#utility.yul\":13042:13286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13658   */\n    tag_338:\n        /* \"#utility.yul\":13434:13437   */\n      0x00\n        /* \"#utility.yul\":13455:13522   */\n      tag_514\n        /* \"#utility.yul\":13519:13521   */\n      0x39\n        /* \"#utility.yul\":13514:13517   */\n      dup4\n        /* \"#utility.yul\":13455:13522   */\n      tag_309\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13448:13522   */\n      swap2\n      pop\n        /* \"#utility.yul\":13531:13624   */\n      tag_515\n        /* \"#utility.yul\":13620:13623   */\n      dup3\n        /* \"#utility.yul\":13531:13624   */\n      tag_337\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13649:13651   */\n      0x40\n        /* \"#utility.yul\":13644:13647   */\n      dup3\n        /* \"#utility.yul\":13640:13652   */\n      add\n        /* \"#utility.yul\":13633:13652   */\n      swap1\n      pop\n        /* \"#utility.yul\":13292:13658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13664:14083   */\n    tag_125:\n        /* \"#utility.yul\":13830:13834   */\n      0x00\n        /* \"#utility.yul\":13868:13870   */\n      0x20\n        /* \"#utility.yul\":13857:13866   */\n      dup3\n        /* \"#utility.yul\":13853:13871   */\n      add\n        /* \"#utility.yul\":13845:13871   */\n      swap1\n      pop\n        /* \"#utility.yul\":13917:13926   */\n      dup2\n        /* \"#utility.yul\":13911:13915   */\n      dup2\n        /* \"#utility.yul\":13907:13927   */\n      sub\n        /* \"#utility.yul\":13903:13904   */\n      0x00\n        /* \"#utility.yul\":13892:13901   */\n      dup4\n        /* \"#utility.yul\":13888:13905   */\n      add\n        /* \"#utility.yul\":13881:13928   */\n      mstore\n        /* \"#utility.yul\":13945:14076   */\n      tag_517\n        /* \"#utility.yul\":14071:14075   */\n      dup2\n        /* \"#utility.yul\":13945:14076   */\n      tag_338\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13937:14076   */\n      swap1\n      pop\n        /* \"#utility.yul\":13664:14083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14089:14269   */\n    tag_339:\n        /* \"#utility.yul\":14137:14214   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14134:14135   */\n      0x00\n        /* \"#utility.yul\":14127:14215   */\n      mstore\n        /* \"#utility.yul\":14234:14238   */\n      0x11\n        /* \"#utility.yul\":14231:14232   */\n      0x04\n        /* \"#utility.yul\":14224:14239   */\n      mstore\n        /* \"#utility.yul\":14258:14262   */\n      0x24\n        /* \"#utility.yul\":14255:14256   */\n      0x00\n        /* \"#utility.yul\":14248:14263   */\n      revert\n        /* \"#utility.yul\":14275:14469   */\n    tag_130:\n        /* \"#utility.yul\":14315:14319   */\n      0x00\n        /* \"#utility.yul\":14335:14355   */\n      tag_520\n        /* \"#utility.yul\":14353:14354   */\n      dup3\n        /* \"#utility.yul\":14335:14355   */\n      tag_313\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14330:14355   */\n      swap2\n      pop\n        /* \"#utility.yul\":14369:14389   */\n      tag_521\n        /* \"#utility.yul\":14387:14388   */\n      dup4\n        /* \"#utility.yul\":14369:14389   */\n      tag_313\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14364:14389   */\n      swap3\n      pop\n        /* \"#utility.yul\":14413:14414   */\n      dup3\n        /* \"#utility.yul\":14410:14411   */\n      dup3\n        /* \"#utility.yul\":14406:14415   */\n      sub\n        /* \"#utility.yul\":14398:14415   */\n      swap1\n      pop\n        /* \"#utility.yul\":14437:14438   */\n      dup2\n        /* \"#utility.yul\":14431:14435   */\n      dup2\n        /* \"#utility.yul\":14428:14439   */\n      gt\n        /* \"#utility.yul\":14425:14462   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":14442:14460   */\n      tag_523\n      tag_339\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14425:14462   */\n    tag_522:\n        /* \"#utility.yul\":14275:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14696   */\n    tag_340:\n        /* \"#utility.yul\":14615:14649   */\n      0x455243373231413a206f776e657220696e646578206f7574206f6620626f756e\n        /* \"#utility.yul\":14611:14612   */\n      0x00\n        /* \"#utility.yul\":14603:14609   */\n      dup3\n        /* \"#utility.yul\":14599:14613   */\n      add\n        /* \"#utility.yul\":14592:14650   */\n      mstore\n        /* \"#utility.yul\":14684:14688   */\n      0x6473000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14679:14681   */\n      0x20\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14667:14682   */\n      add\n        /* \"#utility.yul\":14660:14689   */\n      mstore\n        /* \"#utility.yul\":14475:14696   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14702:15068   */\n    tag_341:\n        /* \"#utility.yul\":14844:14847   */\n      0x00\n        /* \"#utility.yul\":14865:14932   */\n      tag_526\n        /* \"#utility.yul\":14929:14931   */\n      0x22\n        /* \"#utility.yul\":14924:14927   */\n      dup4\n        /* \"#utility.yul\":14865:14932   */\n      tag_309\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14858:14932   */\n      swap2\n      pop\n        /* \"#utility.yul\":14941:15034   */\n      tag_527\n        /* \"#utility.yul\":15030:15033   */\n      dup3\n        /* \"#utility.yul\":14941:15034   */\n      tag_340\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15059:15061   */\n      0x40\n        /* \"#utility.yul\":15054:15057   */\n      dup3\n        /* \"#utility.yul\":15050:15062   */\n      add\n        /* \"#utility.yul\":15043:15062   */\n      swap1\n      pop\n        /* \"#utility.yul\":14702:15068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15074:15493   */\n    tag_138:\n        /* \"#utility.yul\":15240:15244   */\n      0x00\n        /* \"#utility.yul\":15278:15280   */\n      0x20\n        /* \"#utility.yul\":15267:15276   */\n      dup3\n        /* \"#utility.yul\":15263:15281   */\n      add\n        /* \"#utility.yul\":15255:15281   */\n      swap1\n      pop\n        /* \"#utility.yul\":15327:15336   */\n      dup2\n        /* \"#utility.yul\":15321:15325   */\n      dup2\n        /* \"#utility.yul\":15317:15337   */\n      sub\n        /* \"#utility.yul\":15313:15314   */\n      0x00\n        /* \"#utility.yul\":15302:15311   */\n      dup4\n        /* \"#utility.yul\":15298:15315   */\n      add\n        /* \"#utility.yul\":15291:15338   */\n      mstore\n        /* \"#utility.yul\":15355:15486   */\n      tag_529\n        /* \"#utility.yul\":15481:15485   */\n      dup2\n        /* \"#utility.yul\":15355:15486   */\n      tag_341\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15347:15486   */\n      swap1\n      pop\n        /* \"#utility.yul\":15074:15493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15499:15732   */\n    tag_147:\n        /* \"#utility.yul\":15538:15541   */\n      0x00\n        /* \"#utility.yul\":15561:15585   */\n      tag_531\n        /* \"#utility.yul\":15579:15584   */\n      dup3\n        /* \"#utility.yul\":15561:15585   */\n      tag_313\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15552:15585   */\n      swap2\n      pop\n        /* \"#utility.yul\":15607:15673   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15600:15605   */\n      dup3\n        /* \"#utility.yul\":15597:15674   */\n      sub\n        /* \"#utility.yul\":15594:15697   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":15677:15695   */\n      tag_533\n      tag_339\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15594:15697   */\n    tag_532:\n        /* \"#utility.yul\":15724:15725   */\n      0x01\n        /* \"#utility.yul\":15717:15722   */\n      dup3\n        /* \"#utility.yul\":15713:15726   */\n      add\n        /* \"#utility.yul\":15706:15726   */\n      swap1\n      pop\n        /* \"#utility.yul\":15499:15732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15738:15971   */\n    tag_342:\n        /* \"#utility.yul\":15878:15912   */\n      0x455243373231413a20756e61626c6520746f2067657420746f6b656e206f6620\n        /* \"#utility.yul\":15874:15875   */\n      0x00\n        /* \"#utility.yul\":15866:15872   */\n      dup3\n        /* \"#utility.yul\":15862:15876   */\n      add\n        /* \"#utility.yul\":15855:15913   */\n      mstore\n        /* \"#utility.yul\":15947:15963   */\n      0x6f776e657220627920696e646578000000000000000000000000000000000000\n        /* \"#utility.yul\":15942:15944   */\n      0x20\n        /* \"#utility.yul\":15934:15940   */\n      dup3\n        /* \"#utility.yul\":15930:15945   */\n      add\n        /* \"#utility.yul\":15923:15964   */\n      mstore\n        /* \"#utility.yul\":15738:15971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15977:16343   */\n    tag_343:\n        /* \"#utility.yul\":16119:16122   */\n      0x00\n        /* \"#utility.yul\":16140:16207   */\n      tag_536\n        /* \"#utility.yul\":16204:16206   */\n      0x2e\n        /* \"#utility.yul\":16199:16202   */\n      dup4\n        /* \"#utility.yul\":16140:16207   */\n      tag_309\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16133:16207   */\n      swap2\n      pop\n        /* \"#utility.yul\":16216:16309   */\n      tag_537\n        /* \"#utility.yul\":16305:16308   */\n      dup3\n        /* \"#utility.yul\":16216:16309   */\n      tag_342\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16334:16336   */\n      0x40\n        /* \"#utility.yul\":16329:16332   */\n      dup3\n        /* \"#utility.yul\":16325:16337   */\n      add\n        /* \"#utility.yul\":16318:16337   */\n      swap1\n      pop\n        /* \"#utility.yul\":15977:16343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16349:16768   */\n    tag_150:\n        /* \"#utility.yul\":16515:16519   */\n      0x00\n        /* \"#utility.yul\":16553:16555   */\n      0x20\n        /* \"#utility.yul\":16542:16551   */\n      dup3\n        /* \"#utility.yul\":16538:16556   */\n      add\n        /* \"#utility.yul\":16530:16556   */\n      swap1\n      pop\n        /* \"#utility.yul\":16602:16611   */\n      dup2\n        /* \"#utility.yul\":16596:16600   */\n      dup2\n        /* \"#utility.yul\":16592:16612   */\n      sub\n        /* \"#utility.yul\":16588:16589   */\n      0x00\n        /* \"#utility.yul\":16577:16586   */\n      dup4\n        /* \"#utility.yul\":16573:16590   */\n      add\n        /* \"#utility.yul\":16566:16613   */\n      mstore\n        /* \"#utility.yul\":16630:16761   */\n      tag_539\n        /* \"#utility.yul\":16756:16760   */\n      dup2\n        /* \"#utility.yul\":16630:16761   */\n      tag_343\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16622:16761   */\n      swap1\n      pop\n        /* \"#utility.yul\":16349:16768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16774:16996   */\n    tag_344:\n        /* \"#utility.yul\":16914:16948   */\n      0x455243373231413a20676c6f62616c20696e646578206f7574206f6620626f75\n        /* \"#utility.yul\":16910:16911   */\n      0x00\n        /* \"#utility.yul\":16902:16908   */\n      dup3\n        /* \"#utility.yul\":16898:16912   */\n      add\n        /* \"#utility.yul\":16891:16949   */\n      mstore\n        /* \"#utility.yul\":16983:16988   */\n      0x6e64730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16978:16980   */\n      0x20\n        /* \"#utility.yul\":16970:16976   */\n      dup3\n        /* \"#utility.yul\":16966:16981   */\n      add\n        /* \"#utility.yul\":16959:16989   */\n      mstore\n        /* \"#utility.yul\":16774:16996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17002:17368   */\n    tag_345:\n        /* \"#utility.yul\":17144:17147   */\n      0x00\n        /* \"#utility.yul\":17165:17232   */\n      tag_542\n        /* \"#utility.yul\":17229:17231   */\n      0x23\n        /* \"#utility.yul\":17224:17227   */\n      dup4\n        /* \"#utility.yul\":17165:17232   */\n      tag_309\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17158:17232   */\n      swap2\n      pop\n        /* \"#utility.yul\":17241:17334   */\n      tag_543\n        /* \"#utility.yul\":17330:17333   */\n      dup3\n        /* \"#utility.yul\":17241:17334   */\n      tag_344\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17359:17361   */\n      0x40\n        /* \"#utility.yul\":17354:17357   */\n      dup3\n        /* \"#utility.yul\":17350:17362   */\n      add\n        /* \"#utility.yul\":17343:17362   */\n      swap1\n      pop\n        /* \"#utility.yul\":17002:17368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17374:17793   */\n    tag_157:\n        /* \"#utility.yul\":17540:17544   */\n      0x00\n        /* \"#utility.yul\":17578:17580   */\n      0x20\n        /* \"#utility.yul\":17567:17576   */\n      dup3\n        /* \"#utility.yul\":17563:17581   */\n      add\n        /* \"#utility.yul\":17555:17581   */\n      swap1\n      pop\n        /* \"#utility.yul\":17627:17636   */\n      dup2\n        /* \"#utility.yul\":17621:17625   */\n      dup2\n        /* \"#utility.yul\":17617:17637   */\n      sub\n        /* \"#utility.yul\":17613:17614   */\n      0x00\n        /* \"#utility.yul\":17602:17611   */\n      dup4\n        /* \"#utility.yul\":17598:17615   */\n      add\n        /* \"#utility.yul\":17591:17638   */\n      mstore\n        /* \"#utility.yul\":17655:17786   */\n      tag_545\n        /* \"#utility.yul\":17781:17785   */\n      dup2\n        /* \"#utility.yul\":17655:17786   */\n      tag_345\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17647:17786   */\n      swap1\n      pop\n        /* \"#utility.yul\":17374:17793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17799:18029   */\n    tag_346:\n        /* \"#utility.yul\":17939:17973   */\n      0x455243373231413a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":17935:17936   */\n      0x00\n        /* \"#utility.yul\":17927:17933   */\n      dup3\n        /* \"#utility.yul\":17923:17937   */\n      add\n        /* \"#utility.yul\":17916:17974   */\n      mstore\n        /* \"#utility.yul\":18008:18021   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18003:18005   */\n      0x20\n        /* \"#utility.yul\":17995:18001   */\n      dup3\n        /* \"#utility.yul\":17991:18006   */\n      add\n        /* \"#utility.yul\":17984:18022   */\n      mstore\n        /* \"#utility.yul\":17799:18029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18035:18401   */\n    tag_347:\n        /* \"#utility.yul\":18177:18180   */\n      0x00\n        /* \"#utility.yul\":18198:18265   */\n      tag_548\n        /* \"#utility.yul\":18262:18264   */\n      0x2b\n        /* \"#utility.yul\":18257:18260   */\n      dup4\n        /* \"#utility.yul\":18198:18265   */\n      tag_309\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":18191:18265   */\n      swap2\n      pop\n        /* \"#utility.yul\":18274:18367   */\n      tag_549\n        /* \"#utility.yul\":18363:18366   */\n      dup3\n        /* \"#utility.yul\":18274:18367   */\n      tag_346\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":18392:18394   */\n      0x40\n        /* \"#utility.yul\":18387:18390   */\n      dup3\n        /* \"#utility.yul\":18383:18395   */\n      add\n        /* \"#utility.yul\":18376:18395   */\n      swap1\n      pop\n        /* \"#utility.yul\":18035:18401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18407:18826   */\n    tag_164:\n        /* \"#utility.yul\":18573:18577   */\n      0x00\n        /* \"#utility.yul\":18611:18613   */\n      0x20\n        /* \"#utility.yul\":18600:18609   */\n      dup3\n        /* \"#utility.yul\":18596:18614   */\n      add\n        /* \"#utility.yul\":18588:18614   */\n      swap1\n      pop\n        /* \"#utility.yul\":18660:18669   */\n      dup2\n        /* \"#utility.yul\":18654:18658   */\n      dup2\n        /* \"#utility.yul\":18650:18670   */\n      sub\n        /* \"#utility.yul\":18646:18647   */\n      0x00\n        /* \"#utility.yul\":18635:18644   */\n      dup4\n        /* \"#utility.yul\":18631:18648   */\n      add\n        /* \"#utility.yul\":18624:18671   */\n      mstore\n        /* \"#utility.yul\":18688:18819   */\n      tag_551\n        /* \"#utility.yul\":18814:18818   */\n      dup2\n        /* \"#utility.yul\":18688:18819   */\n      tag_347\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18680:18819   */\n      swap1\n      pop\n        /* \"#utility.yul\":18407:18826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18832:19008   */\n    tag_348:\n        /* \"#utility.yul\":18972:19000   */\n      0x455243373231413a20617070726f766520746f2063616c6c6572000000000000\n        /* \"#utility.yul\":18968:18969   */\n      0x00\n        /* \"#utility.yul\":18960:18966   */\n      dup3\n        /* \"#utility.yul\":18956:18970   */\n      add\n        /* \"#utility.yul\":18949:19001   */\n      mstore\n        /* \"#utility.yul\":18832:19008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19014:19380   */\n    tag_349:\n        /* \"#utility.yul\":19156:19159   */\n      0x00\n        /* \"#utility.yul\":19177:19244   */\n      tag_554\n        /* \"#utility.yul\":19241:19243   */\n      0x1a\n        /* \"#utility.yul\":19236:19239   */\n      dup4\n        /* \"#utility.yul\":19177:19244   */\n      tag_309\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":19170:19244   */\n      swap2\n      pop\n        /* \"#utility.yul\":19253:19346   */\n      tag_555\n        /* \"#utility.yul\":19342:19345   */\n      dup3\n        /* \"#utility.yul\":19253:19346   */\n      tag_348\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19371:19373   */\n      0x20\n        /* \"#utility.yul\":19366:19369   */\n      dup3\n        /* \"#utility.yul\":19362:19374   */\n      add\n        /* \"#utility.yul\":19355:19374   */\n      swap1\n      pop\n        /* \"#utility.yul\":19014:19380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19386:19805   */\n    tag_175:\n        /* \"#utility.yul\":19552:19556   */\n      0x00\n        /* \"#utility.yul\":19590:19592   */\n      0x20\n        /* \"#utility.yul\":19579:19588   */\n      dup3\n        /* \"#utility.yul\":19575:19593   */\n      add\n        /* \"#utility.yul\":19567:19593   */\n      swap1\n      pop\n        /* \"#utility.yul\":19639:19648   */\n      dup2\n        /* \"#utility.yul\":19633:19637   */\n      dup2\n        /* \"#utility.yul\":19629:19649   */\n      sub\n        /* \"#utility.yul\":19625:19626   */\n      0x00\n        /* \"#utility.yul\":19614:19623   */\n      dup4\n        /* \"#utility.yul\":19610:19627   */\n      add\n        /* \"#utility.yul\":19603:19650   */\n      mstore\n        /* \"#utility.yul\":19667:19798   */\n      tag_557\n        /* \"#utility.yul\":19793:19797   */\n      dup2\n        /* \"#utility.yul\":19667:19798   */\n      tag_349\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":19659:19798   */\n      swap1\n      pop\n        /* \"#utility.yul\":19386:19805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19811:20049   */\n    tag_350:\n        /* \"#utility.yul\":19951:19985   */\n      0x455243373231413a207472616e7366657220746f206e6f6e2045524337323152\n        /* \"#utility.yul\":19947:19948   */\n      0x00\n        /* \"#utility.yul\":19939:19945   */\n      dup3\n        /* \"#utility.yul\":19935:19949   */\n      add\n        /* \"#utility.yul\":19928:19986   */\n      mstore\n        /* \"#utility.yul\":20020:20041   */\n      0x6563656976657220696d706c656d656e74657200000000000000000000000000\n        /* \"#utility.yul\":20015:20017   */\n      0x20\n        /* \"#utility.yul\":20007:20013   */\n      dup3\n        /* \"#utility.yul\":20003:20018   */\n      add\n        /* \"#utility.yul\":19996:20042   */\n      mstore\n        /* \"#utility.yul\":19811:20049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20055:20421   */\n    tag_351:\n        /* \"#utility.yul\":20197:20200   */\n      0x00\n        /* \"#utility.yul\":20218:20285   */\n      tag_560\n        /* \"#utility.yul\":20282:20284   */\n      0x33\n        /* \"#utility.yul\":20277:20280   */\n      dup4\n        /* \"#utility.yul\":20218:20285   */\n      tag_309\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20211:20285   */\n      swap2\n      pop\n        /* \"#utility.yul\":20294:20387   */\n      tag_561\n        /* \"#utility.yul\":20383:20386   */\n      dup3\n        /* \"#utility.yul\":20294:20387   */\n      tag_350\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":20412:20414   */\n      0x40\n        /* \"#utility.yul\":20407:20410   */\n      dup3\n        /* \"#utility.yul\":20403:20415   */\n      add\n        /* \"#utility.yul\":20396:20415   */\n      swap1\n      pop\n        /* \"#utility.yul\":20055:20421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20427:20846   */\n    tag_185:\n        /* \"#utility.yul\":20593:20597   */\n      0x00\n        /* \"#utility.yul\":20631:20633   */\n      0x20\n        /* \"#utility.yul\":20620:20629   */\n      dup3\n        /* \"#utility.yul\":20616:20634   */\n      add\n        /* \"#utility.yul\":20608:20634   */\n      swap1\n      pop\n        /* \"#utility.yul\":20680:20689   */\n      dup2\n        /* \"#utility.yul\":20674:20678   */\n      dup2\n        /* \"#utility.yul\":20670:20690   */\n      sub\n        /* \"#utility.yul\":20666:20667   */\n      0x00\n        /* \"#utility.yul\":20655:20664   */\n      dup4\n        /* \"#utility.yul\":20651:20668   */\n      add\n        /* \"#utility.yul\":20644:20691   */\n      mstore\n        /* \"#utility.yul\":20708:20839   */\n      tag_563\n        /* \"#utility.yul\":20834:20838   */\n      dup2\n        /* \"#utility.yul\":20708:20839   */\n      tag_351\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":20700:20839   */\n      swap1\n      pop\n        /* \"#utility.yul\":20427:20846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20852:21086   */\n    tag_352:\n        /* \"#utility.yul\":20992:21026   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":20988:20989   */\n      0x00\n        /* \"#utility.yul\":20980:20986   */\n      dup3\n        /* \"#utility.yul\":20976:20990   */\n      add\n        /* \"#utility.yul\":20969:21027   */\n      mstore\n        /* \"#utility.yul\":21061:21078   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":21056:21058   */\n      0x20\n        /* \"#utility.yul\":21048:21054   */\n      dup3\n        /* \"#utility.yul\":21044:21059   */\n      add\n        /* \"#utility.yul\":21037:21079   */\n      mstore\n        /* \"#utility.yul\":20852:21086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21092:21458   */\n    tag_353:\n        /* \"#utility.yul\":21234:21237   */\n      0x00\n        /* \"#utility.yul\":21255:21322   */\n      tag_566\n        /* \"#utility.yul\":21319:21321   */\n      0x2f\n        /* \"#utility.yul\":21314:21317   */\n      dup4\n        /* \"#utility.yul\":21255:21322   */\n      tag_309\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":21248:21322   */\n      swap2\n      pop\n        /* \"#utility.yul\":21331:21424   */\n      tag_567\n        /* \"#utility.yul\":21420:21423   */\n      dup3\n        /* \"#utility.yul\":21331:21424   */\n      tag_352\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":21449:21451   */\n      0x40\n        /* \"#utility.yul\":21444:21447   */\n      dup3\n        /* \"#utility.yul\":21440:21452   */\n      add\n        /* \"#utility.yul\":21433:21452   */\n      swap1\n      pop\n        /* \"#utility.yul\":21092:21458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21464:21883   */\n    tag_190:\n        /* \"#utility.yul\":21630:21634   */\n      0x00\n        /* \"#utility.yul\":21668:21670   */\n      0x20\n        /* \"#utility.yul\":21657:21666   */\n      dup3\n        /* \"#utility.yul\":21653:21671   */\n      add\n        /* \"#utility.yul\":21645:21671   */\n      swap1\n      pop\n        /* \"#utility.yul\":21717:21726   */\n      dup2\n        /* \"#utility.yul\":21711:21715   */\n      dup2\n        /* \"#utility.yul\":21707:21727   */\n      sub\n        /* \"#utility.yul\":21703:21704   */\n      0x00\n        /* \"#utility.yul\":21692:21701   */\n      dup4\n        /* \"#utility.yul\":21688:21705   */\n      add\n        /* \"#utility.yul\":21681:21728   */\n      mstore\n        /* \"#utility.yul\":21745:21876   */\n      tag_569\n        /* \"#utility.yul\":21871:21875   */\n      dup2\n        /* \"#utility.yul\":21745:21876   */\n      tag_353\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":21737:21876   */\n      swap1\n      pop\n        /* \"#utility.yul\":21464:21883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21889:22037   */\n    tag_354:\n        /* \"#utility.yul\":21991:22002   */\n      0x00\n        /* \"#utility.yul\":22028:22031   */\n      dup2\n        /* \"#utility.yul\":22013:22031   */\n      swap1\n      pop\n        /* \"#utility.yul\":21889:22037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22043:22433   */\n    tag_355:\n        /* \"#utility.yul\":22149:22152   */\n      0x00\n        /* \"#utility.yul\":22177:22216   */\n      tag_572\n        /* \"#utility.yul\":22210:22215   */\n      dup3\n        /* \"#utility.yul\":22177:22216   */\n      tag_308\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":22232:22321   */\n      tag_573\n        /* \"#utility.yul\":22314:22320   */\n      dup2\n        /* \"#utility.yul\":22309:22312   */\n      dup6\n        /* \"#utility.yul\":22232:22321   */\n      tag_354\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":22225:22321   */\n      swap4\n      pop\n        /* \"#utility.yul\":22330:22395   */\n      tag_574\n        /* \"#utility.yul\":22388:22394   */\n      dup2\n        /* \"#utility.yul\":22383:22386   */\n      dup6\n        /* \"#utility.yul\":22376:22380   */\n      0x20\n        /* \"#utility.yul\":22369:22374   */\n      dup7\n        /* \"#utility.yul\":22365:22381   */\n      add\n        /* \"#utility.yul\":22330:22395   */\n      tag_310\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":22420:22426   */\n      dup1\n        /* \"#utility.yul\":22415:22418   */\n      dup5\n        /* \"#utility.yul\":22411:22427   */\n      add\n        /* \"#utility.yul\":22404:22427   */\n      swap2\n      pop\n        /* \"#utility.yul\":22153:22433   */\n      pop\n        /* \"#utility.yul\":22043:22433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22439:22874   */\n    tag_198:\n        /* \"#utility.yul\":22619:22622   */\n      0x00\n        /* \"#utility.yul\":22641:22736   */\n      tag_576\n        /* \"#utility.yul\":22732:22735   */\n      dup3\n        /* \"#utility.yul\":22723:22729   */\n      dup6\n        /* \"#utility.yul\":22641:22736   */\n      tag_355\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":22634:22736   */\n      swap2\n      pop\n        /* \"#utility.yul\":22753:22848   */\n      tag_577\n        /* \"#utility.yul\":22844:22847   */\n      dup3\n        /* \"#utility.yul\":22835:22841   */\n      dup5\n        /* \"#utility.yul\":22753:22848   */\n      tag_355\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":22746:22848   */\n      swap2\n      pop\n        /* \"#utility.yul\":22865:22868   */\n      dup2\n        /* \"#utility.yul\":22858:22868   */\n      swap1\n      pop\n        /* \"#utility.yul\":22439:22874   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22880:23117   */\n    tag_356:\n        /* \"#utility.yul\":23020:23054   */\n      0x455243373231413a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":23016:23017   */\n      0x00\n        /* \"#utility.yul\":23008:23014   */\n      dup3\n        /* \"#utility.yul\":23004:23018   */\n      add\n        /* \"#utility.yul\":22997:23055   */\n      mstore\n        /* \"#utility.yul\":23089:23109   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":23084:23086   */\n      0x20\n        /* \"#utility.yul\":23076:23082   */\n      dup3\n        /* \"#utility.yul\":23072:23087   */\n      add\n        /* \"#utility.yul\":23065:23110   */\n      mstore\n        /* \"#utility.yul\":22880:23117   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23123:23489   */\n    tag_357:\n        /* \"#utility.yul\":23265:23268   */\n      0x00\n        /* \"#utility.yul\":23286:23353   */\n      tag_580\n        /* \"#utility.yul\":23350:23352   */\n      0x32\n        /* \"#utility.yul\":23345:23348   */\n      dup4\n        /* \"#utility.yul\":23286:23353   */\n      tag_309\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":23279:23353   */\n      swap2\n      pop\n        /* \"#utility.yul\":23362:23455   */\n      tag_581\n        /* \"#utility.yul\":23451:23454   */\n      dup3\n        /* \"#utility.yul\":23362:23455   */\n      tag_356\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":23480:23482   */\n      0x40\n        /* \"#utility.yul\":23475:23478   */\n      dup3\n        /* \"#utility.yul\":23471:23483   */\n      add\n        /* \"#utility.yul\":23464:23483   */\n      swap1\n      pop\n        /* \"#utility.yul\":23123:23489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23495:23914   */\n    tag_215:\n        /* \"#utility.yul\":23661:23665   */\n      0x00\n        /* \"#utility.yul\":23699:23701   */\n      0x20\n        /* \"#utility.yul\":23688:23697   */\n      dup3\n        /* \"#utility.yul\":23684:23702   */\n      add\n        /* \"#utility.yul\":23676:23702   */\n      swap1\n      pop\n        /* \"#utility.yul\":23748:23757   */\n      dup2\n        /* \"#utility.yul\":23742:23746   */\n      dup2\n        /* \"#utility.yul\":23738:23758   */\n      sub\n        /* \"#utility.yul\":23734:23735   */\n      0x00\n        /* \"#utility.yul\":23723:23732   */\n      dup4\n        /* \"#utility.yul\":23719:23736   */\n      add\n        /* \"#utility.yul\":23712:23759   */\n      mstore\n        /* \"#utility.yul\":23776:23907   */\n      tag_583\n        /* \"#utility.yul\":23902:23906   */\n      dup2\n        /* \"#utility.yul\":23776:23907   */\n      tag_357\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":23768:23907   */\n      swap1\n      pop\n        /* \"#utility.yul\":23495:23914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23920:24145   */\n    tag_358:\n        /* \"#utility.yul\":24060:24094   */\n      0x455243373231413a207472616e736665722066726f6d20696e636f7272656374\n        /* \"#utility.yul\":24056:24057   */\n      0x00\n        /* \"#utility.yul\":24048:24054   */\n      dup3\n        /* \"#utility.yul\":24044:24058   */\n      add\n        /* \"#utility.yul\":24037:24095   */\n      mstore\n        /* \"#utility.yul\":24129:24137   */\n      0x206f776e65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24124:24126   */\n      0x20\n        /* \"#utility.yul\":24116:24122   */\n      dup3\n        /* \"#utility.yul\":24112:24127   */\n      add\n        /* \"#utility.yul\":24105:24138   */\n      mstore\n        /* \"#utility.yul\":23920:24145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24151:24517   */\n    tag_359:\n        /* \"#utility.yul\":24293:24296   */\n      0x00\n        /* \"#utility.yul\":24314:24381   */\n      tag_586\n        /* \"#utility.yul\":24378:24380   */\n      0x26\n        /* \"#utility.yul\":24373:24376   */\n      dup4\n        /* \"#utility.yul\":24314:24381   */\n      tag_309\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24307:24381   */\n      swap2\n      pop\n        /* \"#utility.yul\":24390:24483   */\n      tag_587\n        /* \"#utility.yul\":24479:24482   */\n      dup3\n        /* \"#utility.yul\":24390:24483   */\n      tag_358\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":24508:24510   */\n      0x40\n        /* \"#utility.yul\":24503:24506   */\n      dup3\n        /* \"#utility.yul\":24499:24511   */\n      add\n        /* \"#utility.yul\":24492:24511   */\n      swap1\n      pop\n        /* \"#utility.yul\":24151:24517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24523:24942   */\n    tag_218:\n        /* \"#utility.yul\":24689:24693   */\n      0x00\n        /* \"#utility.yul\":24727:24729   */\n      0x20\n        /* \"#utility.yul\":24716:24725   */\n      dup3\n        /* \"#utility.yul\":24712:24730   */\n      add\n        /* \"#utility.yul\":24704:24730   */\n      swap1\n      pop\n        /* \"#utility.yul\":24776:24785   */\n      dup2\n        /* \"#utility.yul\":24770:24774   */\n      dup2\n        /* \"#utility.yul\":24766:24786   */\n      sub\n        /* \"#utility.yul\":24762:24763   */\n      0x00\n        /* \"#utility.yul\":24751:24760   */\n      dup4\n        /* \"#utility.yul\":24747:24764   */\n      add\n        /* \"#utility.yul\":24740:24787   */\n      mstore\n        /* \"#utility.yul\":24804:24935   */\n      tag_589\n        /* \"#utility.yul\":24930:24934   */\n      dup2\n        /* \"#utility.yul\":24804:24935   */\n      tag_359\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":24796:24935   */\n      swap1\n      pop\n        /* \"#utility.yul\":24523:24942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24948:25172   */\n    tag_360:\n        /* \"#utility.yul\":25088:25122   */\n      0x455243373231413a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":25084:25085   */\n      0x00\n        /* \"#utility.yul\":25076:25082   */\n      dup3\n        /* \"#utility.yul\":25072:25086   */\n      add\n        /* \"#utility.yul\":25065:25123   */\n      mstore\n        /* \"#utility.yul\":25157:25164   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25152:25154   */\n      0x20\n        /* \"#utility.yul\":25144:25150   */\n      dup3\n        /* \"#utility.yul\":25140:25155   */\n      add\n        /* \"#utility.yul\":25133:25165   */\n      mstore\n        /* \"#utility.yul\":24948:25172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25178:25544   */\n    tag_361:\n        /* \"#utility.yul\":25320:25323   */\n      0x00\n        /* \"#utility.yul\":25341:25408   */\n      tag_592\n        /* \"#utility.yul\":25405:25407   */\n      0x25\n        /* \"#utility.yul\":25400:25403   */\n      dup4\n        /* \"#utility.yul\":25341:25408   */\n      tag_309\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":25334:25408   */\n      swap2\n      pop\n        /* \"#utility.yul\":25417:25510   */\n      tag_593\n        /* \"#utility.yul\":25506:25509   */\n      dup3\n        /* \"#utility.yul\":25417:25510   */\n      tag_360\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":25535:25537   */\n      0x40\n        /* \"#utility.yul\":25530:25533   */\n      dup3\n        /* \"#utility.yul\":25526:25538   */\n      add\n        /* \"#utility.yul\":25519:25538   */\n      swap1\n      pop\n        /* \"#utility.yul\":25178:25544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25550:25969   */\n    tag_221:\n        /* \"#utility.yul\":25716:25720   */\n      0x00\n        /* \"#utility.yul\":25754:25756   */\n      0x20\n        /* \"#utility.yul\":25743:25752   */\n      dup3\n        /* \"#utility.yul\":25739:25757   */\n      add\n        /* \"#utility.yul\":25731:25757   */\n      swap1\n      pop\n        /* \"#utility.yul\":25803:25812   */\n      dup2\n        /* \"#utility.yul\":25797:25801   */\n      dup2\n        /* \"#utility.yul\":25793:25813   */\n      sub\n        /* \"#utility.yul\":25789:25790   */\n      0x00\n        /* \"#utility.yul\":25778:25787   */\n      dup4\n        /* \"#utility.yul\":25774:25791   */\n      add\n        /* \"#utility.yul\":25767:25814   */\n      mstore\n        /* \"#utility.yul\":25831:25962   */\n      tag_595\n        /* \"#utility.yul\":25957:25961   */\n      dup2\n        /* \"#utility.yul\":25831:25962   */\n      tag_361\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":25823:25962   */\n      swap1\n      pop\n        /* \"#utility.yul\":25550:25969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25975:26093   */\n    tag_362:\n        /* \"#utility.yul\":26012:26019   */\n      0x00\n        /* \"#utility.yul\":26052:26086   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26045:26050   */\n      dup3\n        /* \"#utility.yul\":26041:26087   */\n      and\n        /* \"#utility.yul\":26030:26087   */\n      swap1\n      pop\n        /* \"#utility.yul\":25975:26093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26099:26326   */\n    tag_226:\n        /* \"#utility.yul\":26139:26143   */\n      0x00\n        /* \"#utility.yul\":26159:26179   */\n      tag_598\n        /* \"#utility.yul\":26177:26178   */\n      dup3\n        /* \"#utility.yul\":26159:26179   */\n      tag_362\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":26154:26179   */\n      swap2\n      pop\n        /* \"#utility.yul\":26193:26213   */\n      tag_599\n        /* \"#utility.yul\":26211:26212   */\n      dup4\n        /* \"#utility.yul\":26193:26213   */\n      tag_362\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":26188:26213   */\n      swap3\n      pop\n        /* \"#utility.yul\":26237:26238   */\n      dup3\n        /* \"#utility.yul\":26234:26235   */\n      dup3\n        /* \"#utility.yul\":26230:26239   */\n      sub\n        /* \"#utility.yul\":26222:26239   */\n      swap1\n      pop\n        /* \"#utility.yul\":26261:26295   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26255:26259   */\n      dup2\n        /* \"#utility.yul\":26252:26296   */\n      gt\n        /* \"#utility.yul\":26249:26319   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":26299:26317   */\n      tag_601\n      tag_339\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":26249:26319   */\n    tag_600:\n        /* \"#utility.yul\":26099:26326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26332:26556   */\n    tag_228:\n        /* \"#utility.yul\":26372:26375   */\n      0x00\n        /* \"#utility.yul\":26391:26411   */\n      tag_603\n        /* \"#utility.yul\":26409:26410   */\n      dup3\n        /* \"#utility.yul\":26391:26411   */\n      tag_362\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":26386:26411   */\n      swap2\n      pop\n        /* \"#utility.yul\":26425:26445   */\n      tag_604\n        /* \"#utility.yul\":26443:26444   */\n      dup4\n        /* \"#utility.yul\":26425:26445   */\n      tag_362\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":26420:26445   */\n      swap3\n      pop\n        /* \"#utility.yul\":26468:26469   */\n      dup3\n        /* \"#utility.yul\":26465:26466   */\n      dup3\n        /* \"#utility.yul\":26461:26470   */\n      add\n        /* \"#utility.yul\":26454:26470   */\n      swap1\n      pop\n        /* \"#utility.yul\":26491:26525   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26486:26489   */\n      dup2\n        /* \"#utility.yul\":26483:26526   */\n      gt\n        /* \"#utility.yul\":26480:26549   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":26529:26547   */\n      tag_606\n      tag_339\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":26480:26549   */\n    tag_605:\n        /* \"#utility.yul\":26332:26556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26562:26753   */\n    tag_230:\n        /* \"#utility.yul\":26602:26605   */\n      0x00\n        /* \"#utility.yul\":26621:26641   */\n      tag_608\n        /* \"#utility.yul\":26639:26640   */\n      dup3\n        /* \"#utility.yul\":26621:26641   */\n      tag_313\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":26616:26641   */\n      swap2\n      pop\n        /* \"#utility.yul\":26655:26675   */\n      tag_609\n        /* \"#utility.yul\":26673:26674   */\n      dup4\n        /* \"#utility.yul\":26655:26675   */\n      tag_313\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":26650:26675   */\n      swap3\n      pop\n        /* \"#utility.yul\":26698:26699   */\n      dup3\n        /* \"#utility.yul\":26695:26696   */\n      dup3\n        /* \"#utility.yul\":26691:26700   */\n      add\n        /* \"#utility.yul\":26684:26700   */\n      swap1\n      pop\n        /* \"#utility.yul\":26719:26722   */\n      dup1\n        /* \"#utility.yul\":26716:26717   */\n      dup3\n        /* \"#utility.yul\":26713:26723   */\n      gt\n        /* \"#utility.yul\":26710:26746   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":26726:26744   */\n      tag_611\n      tag_339\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":26710:26746   */\n    tag_610:\n        /* \"#utility.yul\":26562:26753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26759:26988   */\n    tag_363:\n        /* \"#utility.yul\":26899:26933   */\n      0x455243373231413a206f776e657220717565727920666f72206e6f6e65786973\n        /* \"#utility.yul\":26895:26896   */\n      0x00\n        /* \"#utility.yul\":26887:26893   */\n      dup3\n        /* \"#utility.yul\":26883:26897   */\n      add\n        /* \"#utility.yul\":26876:26934   */\n      mstore\n        /* \"#utility.yul\":26968:26980   */\n      0x74656e7420746f6b656e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26963:26965   */\n      0x20\n        /* \"#utility.yul\":26955:26961   */\n      dup3\n        /* \"#utility.yul\":26951:26966   */\n      add\n        /* \"#utility.yul\":26944:26981   */\n      mstore\n        /* \"#utility.yul\":26759:26988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26994:27360   */\n    tag_364:\n        /* \"#utility.yul\":27136:27139   */\n      0x00\n        /* \"#utility.yul\":27157:27224   */\n      tag_614\n        /* \"#utility.yul\":27221:27223   */\n      0x2a\n        /* \"#utility.yul\":27216:27219   */\n      dup4\n        /* \"#utility.yul\":27157:27224   */\n      tag_309\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":27150:27224   */\n      swap2\n      pop\n        /* \"#utility.yul\":27233:27326   */\n      tag_615\n        /* \"#utility.yul\":27322:27325   */\n      dup3\n        /* \"#utility.yul\":27233:27326   */\n      tag_363\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":27351:27353   */\n      0x40\n        /* \"#utility.yul\":27346:27349   */\n      dup3\n        /* \"#utility.yul\":27342:27354   */\n      add\n        /* \"#utility.yul\":27335:27354   */\n      swap1\n      pop\n        /* \"#utility.yul\":26994:27360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27366:27785   */\n    tag_242:\n        /* \"#utility.yul\":27532:27536   */\n      0x00\n        /* \"#utility.yul\":27570:27572   */\n      0x20\n        /* \"#utility.yul\":27559:27568   */\n      dup3\n        /* \"#utility.yul\":27555:27573   */\n      add\n        /* \"#utility.yul\":27547:27573   */\n      swap1\n      pop\n        /* \"#utility.yul\":27619:27628   */\n      dup2\n        /* \"#utility.yul\":27613:27617   */\n      dup2\n        /* \"#utility.yul\":27609:27629   */\n      sub\n        /* \"#utility.yul\":27605:27606   */\n      0x00\n        /* \"#utility.yul\":27594:27603   */\n      dup4\n        /* \"#utility.yul\":27590:27607   */\n      add\n        /* \"#utility.yul\":27583:27630   */\n      mstore\n        /* \"#utility.yul\":27647:27778   */\n      tag_617\n        /* \"#utility.yul\":27773:27777   */\n      dup2\n        /* \"#utility.yul\":27647:27778   */\n      tag_364\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":27639:27778   */\n      swap1\n      pop\n        /* \"#utility.yul\":27366:27785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27791:27962   */\n    tag_251:\n        /* \"#utility.yul\":27830:27833   */\n      0x00\n        /* \"#utility.yul\":27853:27877   */\n      tag_619\n        /* \"#utility.yul\":27871:27876   */\n      dup3\n        /* \"#utility.yul\":27853:27877   */\n      tag_313\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":27844:27877   */\n      swap2\n      pop\n        /* \"#utility.yul\":27899:27903   */\n      0x00\n        /* \"#utility.yul\":27892:27897   */\n      dup3\n        /* \"#utility.yul\":27889:27904   */\n      sub\n        /* \"#utility.yul\":27886:27927   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":27907:27925   */\n      tag_621\n      tag_339\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":27886:27927   */\n    tag_620:\n        /* \"#utility.yul\":27954:27955   */\n      0x01\n        /* \"#utility.yul\":27947:27952   */\n      dup3\n        /* \"#utility.yul\":27943:27956   */\n      sub\n        /* \"#utility.yul\":27936:27956   */\n      swap1\n      pop\n        /* \"#utility.yul\":27791:27962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27968:28202   */\n    tag_365:\n        /* \"#utility.yul\":28108:28142   */\n      0x455243373231413a20756e61626c6520746f2064657465726d696e6520746865\n        /* \"#utility.yul\":28104:28105   */\n      0x00\n        /* \"#utility.yul\":28096:28102   */\n      dup3\n        /* \"#utility.yul\":28092:28106   */\n      add\n        /* \"#utility.yul\":28085:28143   */\n      mstore\n        /* \"#utility.yul\":28177:28194   */\n      0x206f776e6572206f6620746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":28172:28174   */\n      0x20\n        /* \"#utility.yul\":28164:28170   */\n      dup3\n        /* \"#utility.yul\":28160:28175   */\n      add\n        /* \"#utility.yul\":28153:28195   */\n      mstore\n        /* \"#utility.yul\":27968:28202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28208:28574   */\n    tag_366:\n        /* \"#utility.yul\":28350:28353   */\n      0x00\n        /* \"#utility.yul\":28371:28438   */\n      tag_624\n        /* \"#utility.yul\":28435:28437   */\n      0x2f\n        /* \"#utility.yul\":28430:28433   */\n      dup4\n        /* \"#utility.yul\":28371:28438   */\n      tag_309\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":28364:28438   */\n      swap2\n      pop\n        /* \"#utility.yul\":28447:28540   */\n      tag_625\n        /* \"#utility.yul\":28536:28539   */\n      dup3\n        /* \"#utility.yul\":28447:28540   */\n      tag_365\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":28565:28567   */\n      0x40\n        /* \"#utility.yul\":28560:28563   */\n      dup3\n        /* \"#utility.yul\":28556:28568   */\n      add\n        /* \"#utility.yul\":28549:28568   */\n      swap1\n      pop\n        /* \"#utility.yul\":28208:28574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28580:28999   */\n    tag_253:\n        /* \"#utility.yul\":28746:28750   */\n      0x00\n        /* \"#utility.yul\":28784:28786   */\n      0x20\n        /* \"#utility.yul\":28773:28782   */\n      dup3\n        /* \"#utility.yul\":28769:28787   */\n      add\n        /* \"#utility.yul\":28761:28787   */\n      swap1\n      pop\n        /* \"#utility.yul\":28833:28842   */\n      dup2\n        /* \"#utility.yul\":28827:28831   */\n      dup2\n        /* \"#utility.yul\":28823:28843   */\n      sub\n        /* \"#utility.yul\":28819:28820   */\n      0x00\n        /* \"#utility.yul\":28808:28817   */\n      dup4\n        /* \"#utility.yul\":28804:28821   */\n      add\n        /* \"#utility.yul\":28797:28844   */\n      mstore\n        /* \"#utility.yul\":28861:28992   */\n      tag_627\n        /* \"#utility.yul\":28987:28991   */\n      dup2\n        /* \"#utility.yul\":28861:28992   */\n      tag_366\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":28853:28992   */\n      swap1\n      pop\n        /* \"#utility.yul\":28580:28999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29005:29103   */\n    tag_367:\n        /* \"#utility.yul\":29056:29062   */\n      0x00\n        /* \"#utility.yul\":29090:29095   */\n      dup2\n        /* \"#utility.yul\":29084:29096   */\n      mload\n        /* \"#utility.yul\":29074:29096   */\n      swap1\n      pop\n        /* \"#utility.yul\":29005:29103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29109:29277   */\n    tag_368:\n        /* \"#utility.yul\":29192:29203   */\n      0x00\n        /* \"#utility.yul\":29226:29232   */\n      dup3\n        /* \"#utility.yul\":29221:29224   */\n      dup3\n        /* \"#utility.yul\":29214:29233   */\n      mstore\n        /* \"#utility.yul\":29266:29270   */\n      0x20\n        /* \"#utility.yul\":29261:29264   */\n      dup3\n        /* \"#utility.yul\":29257:29271   */\n      add\n        /* \"#utility.yul\":29242:29271   */\n      swap1\n      pop\n        /* \"#utility.yul\":29109:29277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29283:29656   */\n    tag_369:\n        /* \"#utility.yul\":29369:29372   */\n      0x00\n        /* \"#utility.yul\":29397:29435   */\n      tag_631\n        /* \"#utility.yul\":29429:29434   */\n      dup3\n        /* \"#utility.yul\":29397:29435   */\n      tag_367\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":29451:29521   */\n      tag_632\n        /* \"#utility.yul\":29514:29520   */\n      dup2\n        /* \"#utility.yul\":29509:29512   */\n      dup6\n        /* \"#utility.yul\":29451:29521   */\n      tag_368\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":29444:29521   */\n      swap4\n      pop\n        /* \"#utility.yul\":29530:29595   */\n      tag_633\n        /* \"#utility.yul\":29588:29594   */\n      dup2\n        /* \"#utility.yul\":29583:29586   */\n      dup6\n        /* \"#utility.yul\":29576:29580   */\n      0x20\n        /* \"#utility.yul\":29569:29574   */\n      dup7\n        /* \"#utility.yul\":29565:29581   */\n      add\n        /* \"#utility.yul\":29530:29595   */\n      tag_310\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":29620:29649   */\n      tag_634\n        /* \"#utility.yul\":29642:29648   */\n      dup2\n        /* \"#utility.yul\":29620:29649   */\n      tag_311\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":29615:29618   */\n      dup5\n        /* \"#utility.yul\":29611:29650   */\n      add\n        /* \"#utility.yul\":29604:29650   */\n      swap2\n      pop\n        /* \"#utility.yul\":29373:29656   */\n      pop\n        /* \"#utility.yul\":29283:29656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29662:30302   */\n    tag_260:\n        /* \"#utility.yul\":29857:29861   */\n      0x00\n        /* \"#utility.yul\":29895:29898   */\n      0x80\n        /* \"#utility.yul\":29884:29893   */\n      dup3\n        /* \"#utility.yul\":29880:29899   */\n      add\n        /* \"#utility.yul\":29872:29899   */\n      swap1\n      pop\n        /* \"#utility.yul\":29909:29980   */\n      tag_636\n        /* \"#utility.yul\":29977:29978   */\n      0x00\n        /* \"#utility.yul\":29966:29975   */\n      dup4\n        /* \"#utility.yul\":29962:29979   */\n      add\n        /* \"#utility.yul\":29953:29959   */\n      dup8\n        /* \"#utility.yul\":29909:29980   */\n      tag_318\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":29990:30062   */\n      tag_637\n        /* \"#utility.yul\":30058:30060   */\n      0x20\n        /* \"#utility.yul\":30047:30056   */\n      dup4\n        /* \"#utility.yul\":30043:30061   */\n      add\n        /* \"#utility.yul\":30034:30040   */\n      dup7\n        /* \"#utility.yul\":29990:30062   */\n      tag_318\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":30072:30144   */\n      tag_638\n        /* \"#utility.yul\":30140:30142   */\n      0x40\n        /* \"#utility.yul\":30129:30138   */\n      dup4\n        /* \"#utility.yul\":30125:30143   */\n      add\n        /* \"#utility.yul\":30116:30122   */\n      dup6\n        /* \"#utility.yul\":30072:30144   */\n      tag_321\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":30191:30200   */\n      dup2\n        /* \"#utility.yul\":30185:30189   */\n      dup2\n        /* \"#utility.yul\":30181:30201   */\n      sub\n        /* \"#utility.yul\":30176:30178   */\n      0x60\n        /* \"#utility.yul\":30165:30174   */\n      dup4\n        /* \"#utility.yul\":30161:30179   */\n      add\n        /* \"#utility.yul\":30154:30202   */\n      mstore\n        /* \"#utility.yul\":30219:30295   */\n      tag_639\n        /* \"#utility.yul\":30290:30294   */\n      dup2\n        /* \"#utility.yul\":30281:30287   */\n      dup5\n        /* \"#utility.yul\":30219:30295   */\n      tag_369\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":30211:30295   */\n      swap1\n      pop\n        /* \"#utility.yul\":29662:30302   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30308:30449   */\n    tag_370:\n        /* \"#utility.yul\":30364:30369   */\n      0x00\n        /* \"#utility.yul\":30395:30401   */\n      dup2\n        /* \"#utility.yul\":30389:30402   */\n      mload\n        /* \"#utility.yul\":30380:30402   */\n      swap1\n      pop\n        /* \"#utility.yul\":30411:30443   */\n      tag_641\n        /* \"#utility.yul\":30437:30442   */\n      dup2\n        /* \"#utility.yul\":30411:30443   */\n      tag_304\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":30308:30449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30455:30804   */\n    tag_263:\n        /* \"#utility.yul\":30524:30530   */\n      0x00\n        /* \"#utility.yul\":30573:30575   */\n      0x20\n        /* \"#utility.yul\":30561:30570   */\n      dup3\n        /* \"#utility.yul\":30552:30559   */\n      dup5\n        /* \"#utility.yul\":30548:30571   */\n      sub\n        /* \"#utility.yul\":30544:30576   */\n      slt\n        /* \"#utility.yul\":30541:30660   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":30579:30658   */\n      tag_644\n      tag_301\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":30541:30660   */\n    tag_643:\n        /* \"#utility.yul\":30699:30700   */\n      0x00\n        /* \"#utility.yul\":30724:30787   */\n      tag_645\n        /* \"#utility.yul\":30779:30786   */\n      dup5\n        /* \"#utility.yul\":30770:30776   */\n      dup3\n        /* \"#utility.yul\":30759:30768   */\n      dup6\n        /* \"#utility.yul\":30755:30777   */\n      add\n        /* \"#utility.yul\":30724:30787   */\n      tag_370\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":30714:30787   */\n      swap2\n      pop\n        /* \"#utility.yul\":30670:30797   */\n      pop\n        /* \"#utility.yul\":30455:30804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30810:30990   */\n    tag_371:\n        /* \"#utility.yul\":30858:30935   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30855:30856   */\n      0x00\n        /* \"#utility.yul\":30848:30936   */\n      mstore\n        /* \"#utility.yul\":30955:30959   */\n      0x12\n        /* \"#utility.yul\":30952:30953   */\n      0x04\n        /* \"#utility.yul\":30945:30960   */\n      mstore\n        /* \"#utility.yul\":30979:30983   */\n      0x24\n        /* \"#utility.yul\":30976:30977   */\n      0x00\n        /* \"#utility.yul\":30969:30984   */\n      revert\n        /* \"#utility.yul\":30996:31181   */\n    tag_282:\n        /* \"#utility.yul\":31036:31037   */\n      0x00\n        /* \"#utility.yul\":31053:31073   */\n      tag_648\n        /* \"#utility.yul\":31071:31072   */\n      dup3\n        /* \"#utility.yul\":31053:31073   */\n      tag_313\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":31048:31073   */\n      swap2\n      pop\n        /* \"#utility.yul\":31087:31107   */\n      tag_649\n        /* \"#utility.yul\":31105:31106   */\n      dup4\n        /* \"#utility.yul\":31087:31107   */\n      tag_313\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":31082:31107   */\n      swap3\n      pop\n        /* \"#utility.yul\":31126:31127   */\n      dup3\n        /* \"#utility.yul\":31116:31151   */\n      tag_650\n      jumpi\n        /* \"#utility.yul\":31131:31149   */\n      tag_651\n      tag_371\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":31116:31151   */\n    tag_650:\n        /* \"#utility.yul\":31173:31174   */\n      dup3\n        /* \"#utility.yul\":31170:31171   */\n      dup3\n        /* \"#utility.yul\":31166:31175   */\n      div\n        /* \"#utility.yul\":31161:31175   */\n      swap1\n      pop\n        /* \"#utility.yul\":30996:31181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31187:31363   */\n    tag_291:\n        /* \"#utility.yul\":31219:31220   */\n      0x00\n        /* \"#utility.yul\":31236:31256   */\n      tag_653\n        /* \"#utility.yul\":31254:31255   */\n      dup3\n        /* \"#utility.yul\":31236:31256   */\n      tag_313\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":31231:31256   */\n      swap2\n      pop\n        /* \"#utility.yul\":31270:31290   */\n      tag_654\n        /* \"#utility.yul\":31288:31289   */\n      dup4\n        /* \"#utility.yul\":31270:31290   */\n      tag_313\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":31265:31290   */\n      swap3\n      pop\n        /* \"#utility.yul\":31309:31310   */\n      dup3\n        /* \"#utility.yul\":31299:31334   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":31314:31332   */\n      tag_656\n      tag_371\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":31299:31334   */\n    tag_655:\n        /* \"#utility.yul\":31355:31356   */\n      dup3\n        /* \"#utility.yul\":31352:31353   */\n      dup3\n        /* \"#utility.yul\":31348:31357   */\n      mod\n        /* \"#utility.yul\":31343:31357   */\n      swap1\n      pop\n        /* \"#utility.yul\":31187:31363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31369:31549   */\n    tag_295:\n        /* \"#utility.yul\":31417:31494   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31414:31415   */\n      0x00\n        /* \"#utility.yul\":31407:31495   */\n      mstore\n        /* \"#utility.yul\":31514:31518   */\n      0x32\n        /* \"#utility.yul\":31511:31512   */\n      0x04\n        /* \"#utility.yul\":31504:31519   */\n      mstore\n        /* \"#utility.yul\":31538:31542   */\n      0x24\n        /* \"#utility.yul\":31535:31536   */\n      0x00\n        /* \"#utility.yul\":31528:31543   */\n      revert\n\n    auxdata: 0xa26469706673582212206ed07b44d9afa73dbd5f77018d634a0194aa5ac40977c82de73b33012a88732d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_858": {
									"entryPoint": null,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11404:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:10",
														"type": ""
													}
												],
												"src": "2677:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:10"
															},
															"nodeType": "YulIf",
															"src": "2813:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:10",
														"type": ""
													}
												],
												"src": "2760:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:10",
														"type": ""
													}
												],
												"src": "2888:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3185:1018:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3232:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3234:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3234:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3206:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:33:10"
															},
															"nodeType": "YulIf",
															"src": "3195:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3325:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3340:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3364:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3375:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3360:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3354:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3354:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3344:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3425:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3427:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3427:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3427:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3405:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3394:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3391:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3522:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3532:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3522:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3626:292:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3641:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3665:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3676:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3661:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3661:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3655:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3645:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3727:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3729:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3729:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3729:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3699:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3696:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3693:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3824:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3891:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3876:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3834:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3824:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3928:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3973:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4019:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4030:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4015:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4039:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3983:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3973:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4067:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4082:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4086:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4112:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4158:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4169:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4154:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4154:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4178:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4122:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4122:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4112:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3131:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3142:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3154:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3162:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3170:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3178:6:10",
														"type": ""
													}
												],
												"src": "3037:1166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4305:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4322:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4327:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4315:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4343:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4362:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4367:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4343:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4277:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4282:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4293:11:10",
														"type": ""
													}
												],
												"src": "4209:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4490:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4512:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4508:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20636f6c6c656374696f6e206d7573742068617665206120",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4524:34:10",
																		"type": "",
																		"value": "ERC721A: collection must have a "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4501:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4588:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:15:10"
																	},
																	{
																		"hexValue": "6e6f6e7a65726f20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4593:16:10",
																		"type": "",
																		"value": "nonzero supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4569:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4482:6:10",
														"type": ""
													}
												],
												"src": "4384:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4779:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4845:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4786:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4779:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4951:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																	"nodeType": "YulIdentifier",
																	"src": "4862:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4862:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4964:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4980:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4964:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4757:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4765:3:10",
														"type": ""
													}
												],
												"src": "4623:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5166:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5184:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5176:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5242:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5238:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5268:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5276:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5146:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5161:4:10",
														"type": ""
													}
												],
												"src": "4995:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5526:120:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5548:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5556:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206d61782062617463682073697a65206d75737420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5560:34:10",
																		"type": "",
																		"value": "ERC721A: max batch size must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5616:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5624:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5612:15:10"
																	},
																	{
																		"hexValue": "6e6f6e7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5629:9:10",
																		"type": "",
																		"value": "nonzero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5605:34:10"
														}
													]
												},
												"name": "store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5518:6:10",
														"type": ""
													}
												],
												"src": "5420:226:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5808:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5874:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5879:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5815:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5808:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5980:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																	"nodeType": "YulIdentifier",
																	"src": "5891:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5891:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5993:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6004:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5993:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5786:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5794:3:10",
														"type": ""
													}
												],
												"src": "5652:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6195:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6205:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6217:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6213:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6205:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6263:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6248:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6271:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6277:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6267:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6241:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6297:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6431:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6305:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6297:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6175:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6190:4:10",
														"type": ""
													}
												],
												"src": "6024:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6508:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6519:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6535:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6529:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6491:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6501:6:10",
														"type": ""
													}
												],
												"src": "6449:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6582:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6602:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6592:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6592:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6699:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6689:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6689:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6723:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6713:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6713:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6554:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6801:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6815:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6821:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6811:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6811:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6832:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6862:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6868:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6836:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6923:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6937:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6945:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6933:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6933:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6923:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6889:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:26:10"
															},
															"nodeType": "YulIf",
															"src": "6879:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7012:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7026:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7026:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7026:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6976:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6999:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7007:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6996:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6973:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6973:38:10"
															},
															"nodeType": "YulIf",
															"src": "6970:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6775:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6784:6:10",
														"type": ""
													}
												],
												"src": "6740:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7120:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7130:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7138:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7130:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7158:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7151:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7192:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7195:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7182:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7174:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7107:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7115:4:10",
														"type": ""
													}
												],
												"src": "7066:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7257:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7267:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7285:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7292:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7281:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7267:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7240:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7250:6:10",
														"type": ""
													}
												],
												"src": "7213:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7365:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7375:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7400:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7406:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7375:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7340:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7346:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7356:8:10",
														"type": ""
													}
												],
												"src": "7312:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7501:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7511:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "7532:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7544:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "7515:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7555:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7586:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7597:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7567:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7559:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7673:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "7704:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "7715:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7685:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "7673:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7733:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7746:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7757:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7753:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7753:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7742:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7742:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7733:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7772:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7785:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "7796:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7806:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7782:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7462:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "7469:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "7481:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7494:6:10",
														"type": ""
													}
												],
												"src": "7425:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7856:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7866:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7873:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7842:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7852:3:10",
														"type": ""
													}
												],
												"src": "7824:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7950:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7960:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8018:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8000:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8000:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7991:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7991:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7973:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7960:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7930:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7940:9:10",
														"type": ""
													}
												],
												"src": "7890:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8095:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8102:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8071:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8081:3:10",
														"type": ""
													}
												],
												"src": "8038:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8195:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8205:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "8260:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8229:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "8209:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8284:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "8324:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "8318:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8318:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8331:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "8363:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8339:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8339:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "8290:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8290:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "8277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8277:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8277:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8172:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8178:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "8186:7:10",
														"type": ""
													}
												],
												"src": "8119:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8443:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8453:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8460:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8439:3:10",
														"type": ""
													}
												],
												"src": "8394:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8526:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8536:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8550:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "8540:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8635:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8641:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "8649:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8591:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8591:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8512:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8518:6:10",
														"type": ""
													}
												],
												"src": "8473:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8718:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8785:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8829:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8836:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "8799:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8799:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8799:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "8738:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8745:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8735:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8750:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8752:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "8765:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8772:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8761:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8761:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "8752:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8732:2:10",
																"statements": []
															},
															"src": "8728:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "8706:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8713:3:10",
														"type": ""
													}
												],
												"src": "8668:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8939:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8965:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8979:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "9027:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "8995:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8995:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "8983:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9046:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "9069:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "9097:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "9079:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9079:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9065:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9065:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "9050:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9266:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9268:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "9283:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "9268:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "9250:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9262:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9247:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "9244:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "9335:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "9352:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9380:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "9362:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9362:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9348:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9348:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "9306:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9306:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9306:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "8956:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8961:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8953:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:11:10"
															},
															"nodeType": "YulIf",
															"src": "8950:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8915:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "8922:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "8927:10:10",
														"type": ""
													}
												],
												"src": "8860:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9472:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9482:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "9507:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9513:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9503:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9482:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "9447:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9453:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9463:8:10",
														"type": ""
													}
												],
												"src": "9409:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9583:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9593:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9642:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "9645:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "9638:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9638:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9657:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9653:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9653:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "9609:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9609:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "9605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9597:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9670:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9684:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "9690:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9560:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "9566:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9576:6:10",
														"type": ""
													}
												],
												"src": "9532:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9787:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9920:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9947:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9953:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9928:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9928:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9920:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9966:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9977:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9987:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "9990:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9983:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9974:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "9966:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9768:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9774:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "9782:4:10",
														"type": ""
													}
												],
												"src": "9706:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10098:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10109:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10156:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10123:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "10113:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10245:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10247:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10247:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10247:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10217:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10225:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10214:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10214:30:10"
															},
															"nodeType": "YulIf",
															"src": "10211:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10277:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "10323:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "10317:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10317:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "10291:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "10281:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10422:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "10428:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10436:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "10376:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10376:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10453:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10470:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "10457:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10481:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10494:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "10481:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10545:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10559:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10578:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10590:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10586:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10586:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10574:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10574:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "10563:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10610:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10656:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "10624:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10624:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "10614:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10674:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10683:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10678:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10742:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10767:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10785:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10790:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10781:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10781:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10775:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10775:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10760:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10760:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10760:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10819:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10833:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10841:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10829:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10829:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "10819:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10860:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "10877:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10888:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10873:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10873:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "10860:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10708:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10711:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10705:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10705:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10720:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10722:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10731:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10734:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10727:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10727:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10722:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10701:3:10",
																					"statements": []
																				},
																				"src": "10697:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10941:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "10959:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "10986:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "10991:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10982:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10982:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10976:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10976:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "10963:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11026:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "11053:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "11068:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "11076:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "11064:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11064:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "11034:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11034:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "11019:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11019:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11019:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10924:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10933:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10921:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10921:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "10918:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11117:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "11131:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "11139:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "11127:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "11127:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11143:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11123:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11123:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11110:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11110:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11110:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10538:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10543:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11173:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11187:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11200:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "11191:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11224:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11242:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "11261:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "11266:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "11257:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11257:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11251:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11251:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11242:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "11217:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "11214:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11311:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11370:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "11377:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "11317:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11317:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11304:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11304:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11304:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11165:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10518:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10526:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10515:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10515:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "10508:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10087:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10093:3:10",
														"type": ""
													}
												],
												"src": "10006:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: collection must have a \")\n\n        mstore(add(memPtr, 32), \"nonzero supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: max batch size must be \")\n\n        mstore(add(memPtr, 32), \"nonzero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052600160005560006007553480156200001b57600080fd5b5060405162003527380380620035278339818101604052810190620000419190620002d9565b6000811162000087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007e9062000410565b60405180910390fd5b60008211620000cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c490620004a8565b60405180910390fd5b8360019081620000de91906200070b565b508260029081620000f091906200070b565b508160a08181525050806080818152505050505050620007f2565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001748262000129565b810181811067ffffffffffffffff821117156200019657620001956200013a565b5b80604052505050565b6000620001ab6200010b565b9050620001b9828262000169565b919050565b600067ffffffffffffffff821115620001dc57620001db6200013a565b5b620001e78262000129565b9050602081019050919050565b60005b8381101562000214578082015181840152602081019050620001f7565b60008484015250505050565b6000620002376200023184620001be565b6200019f565b90508281526020810184848401111562000256576200025562000124565b5b62000263848285620001f4565b509392505050565b600082601f8301126200028357620002826200011f565b5b81516200029584826020860162000220565b91505092915050565b6000819050919050565b620002b3816200029e565b8114620002bf57600080fd5b50565b600081519050620002d381620002a8565b92915050565b60008060008060808587031215620002f657620002f562000115565b5b600085015167ffffffffffffffff8111156200031757620003166200011a565b5b62000325878288016200026b565b945050602085015167ffffffffffffffff8111156200034957620003486200011a565b5b62000357878288016200026b565b93505060406200036a87828801620002c2565b92505060606200037d87828801620002c2565b91505092959194509250565b600082825260208201905092915050565b7f455243373231413a20636f6c6c656374696f6e206d757374206861766520612060008201527f6e6f6e7a65726f20737570706c79000000000000000000000000000000000000602082015250565b6000620003f8602e8362000389565b915062000405826200039a565b604082019050919050565b600060208201905081810360008301526200042b81620003e9565b9050919050565b7f455243373231413a206d61782062617463682073697a65206d7573742062652060008201527f6e6f6e7a65726f00000000000000000000000000000000000000000000000000602082015250565b60006200049060278362000389565b91506200049d8262000432565b604082019050919050565b60006020820190508181036000830152620004c38162000481565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200051d57607f821691505b602082108103620005335762000532620004d5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200059d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200055e565b620005a986836200055e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005ec620005e6620005e0846200029e565b620005c1565b6200029e565b9050919050565b6000819050919050565b6200060883620005cb565b620006206200061782620005f3565b8484546200056b565b825550505050565b600090565b6200063762000628565b62000644818484620005fd565b505050565b5b818110156200066c57620006606000826200062d565b6001810190506200064a565b5050565b601f821115620006bb57620006858162000539565b62000690846200054e565b81016020851015620006a0578190505b620006b8620006af856200054e565b83018262000649565b50505b505050565b600082821c905092915050565b6000620006e060001984600802620006c0565b1980831691505092915050565b6000620006fb8383620006cd565b9150826002028217905092915050565b6200071682620004ca565b67ffffffffffffffff8111156200073257620007316200013a565b5b6200073e825462000504565b6200074b82828562000670565b600060209050601f8311600181146200078357600084156200076e578287015190505b6200077a8582620006ed565b865550620007ea565b601f198416620007938662000539565b60005b82811015620007bd5784890151825560018201915060208501945060208101905062000796565b86831015620007dd5784890151620007d9601f891682620006cd565b8355505b6001600288020188555050505b505050505050565b60805160a051612d0b6200081c6000396000818161158e01526115b7015260005050612d0b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb465146102de578063b88d4fde146102fa578063c87b56dd14610316578063d7224ba014610346578063e985e9c5146103645761010b565b80634f6ccce7146102305780636352211e1461026057806370a082311461029057806395d89b41146102c05761010b565b806318160ddd116100de57806318160ddd146101aa57806323b872dd146101c85780632f745c59146101e457806342842e0e146102145761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b10565b610394565b6040516101379190611b58565b60405180910390f35b6101486104de565b6040516101559190611c03565b60405180910390f35b61017860048036038101906101739190611c5b565b610570565b6040516101859190611cc9565b60405180910390f35b6101a860048036038101906101a39190611d10565b6105f5565b005b6101b261070d565b6040516101bf9190611d5f565b60405180910390f35b6101e260048036038101906101dd9190611d7a565b610723565b005b6101fe60048036038101906101f99190611d10565b610733565b60405161020b9190611d5f565b60405180910390f35b61022e60048036038101906102299190611d7a565b610932565b005b61024a60048036038101906102459190611c5b565b610952565b6040516102579190611d5f565b60405180910390f35b61027a60048036038101906102759190611c5b565b6109a5565b6040516102879190611cc9565b60405180910390f35b6102aa60048036038101906102a59190611dcd565b6109bb565b6040516102b79190611d5f565b60405180910390f35b6102c8610aa3565b6040516102d59190611c03565b60405180910390f35b6102f860048036038101906102f39190611e26565b610b35565b005b610314600480360381019061030f9190611f9b565b610cb5565b005b610330600480360381019061032b9190611c5b565b610d11565b60405161033d9190611c03565b60405180910390f35b61034e610db8565b60405161035b9190611d5f565b60405180910390f35b61037e6004803603810190610379919061201e565b610dbe565b60405161038b9190611b58565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c757507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d757506104d682610e52565b5b9050919050565b6060600180546104ed9061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546105199061208d565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905090565b600061057b82610ebc565b6105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190612130565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610600826109a5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610670576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610667906121c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661068f610ec9565b73ffffffffffffffffffffffffffffffffffffffff1614806106be57506106bd816106b8610ec9565b610dbe565b5b6106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490612254565b60405180910390fd5b610708838383610ed1565b505050565b6000600160005461071e91906122a3565b905090565b61072e838383610f83565b505050565b600061073e836109bb565b821061077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690612349565b60405180910390fd5b600061078961070d565b90506000806000600190505b8381116108f0576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461088657806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108dc578684036108cd57819550505050505061092c565b83806108d890612369565b9450505b5080806108e890612369565b915050610795565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390612423565b60405180910390fd5b92915050565b61094d83838360405180602001604052806000815250610cb5565b505050565b600061095c61070d565b821061099d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610994906124b5565b60405180910390fd5b819050919050565b60006109b08261153a565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290612547565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610ab29061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ade9061208d565b8015610b2b5780601f10610b0057610100808354040283529160200191610b2b565b820191906000526020600020905b815481529060010190602001808311610b0e57829003601f168201915b5050505050905090565b610b3d610ec9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba1906125b3565b60405180910390fd5b8060066000610bb7610ec9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c64610ec9565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca99190611b58565b60405180910390a35050565b610cc0848484610f83565b610ccc8484848461173d565b610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0290612645565b60405180910390fd5b50505050565b6060610d1c82610ebc565b610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d52906126d7565b60405180910390fd5b6000610d656118c4565b90506000815111610d855760405180602001604052806000815250610db0565b80610d8f846118db565b604051602001610da0929190612733565b6040516020818303038152906040525b915050919050565b60075481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f8e8261153a565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610fb5610ec9565b73ffffffffffffffffffffffffffffffffffffffff1614806110115750610fda610ec9565b73ffffffffffffffffffffffffffffffffffffffff16610ff984610570565b73ffffffffffffffffffffffffffffffffffffffff16145b8061102d575061102c8260000151611027610ec9565b610dbe565b5b90508061106f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611066906127c9565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16146110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d89061285b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611150576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611147906128ed565b60405180910390fd5b61115d8585856001611a3b565b61116d6000848460000151610ed1565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166111db9190612929565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661127f919061296d565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff168152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050600060018461138591906129b1565b9050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114ca576113fa81610ebc565b156114c9576040518060400160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015167ffffffffffffffff168152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115328686866001611a41565b505050505050565b611542611a6a565b61154b82610ebc565b61158a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158190612a57565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000083106115ee5760017f0000000000000000000000000000000000000000000000000000000000000000846115e191906122a3565b6115eb91906129b1565b90505b60008390505b8181106116fc576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146116e857809350505050611738565b5080806116f490612a77565b9150506115f4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90612b12565b60405180910390fd5b919050565b600061175e8473ffffffffffffffffffffffffffffffffffffffff16611a47565b156118b7578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611787610ec9565b8786866040518563ffffffff1660e01b81526004016117a99493929190612b87565b6020604051808303816000875af19250505080156117e557506040513d601f19601f820116820180604052508101906117e29190612be8565b60015b611867573d8060008114611815576040519150601f19603f3d011682016040523d82523d6000602084013e61181a565b606091505b50600081510361185f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185690612645565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506118bc565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008203611922576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611a36565b600082905060005b6000821461195457808061193d90612369565b915050600a8261194d9190612c44565b915061192a565b60008167ffffffffffffffff8111156119705761196f611e70565b5b6040519080825280601f01601f1916602001820160405280156119a25781602001600182028036833780820191505090505b5090505b60008514611a2f576001826119bb91906122a3565b9150600a856119ca9190612c75565b60306119d691906129b1565b60f81b8183815181106119ec576119eb612ca6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611a289190612c44565b94506119a6565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611aed81611ab8565b8114611af857600080fd5b50565b600081359050611b0a81611ae4565b92915050565b600060208284031215611b2657611b25611aae565b5b6000611b3484828501611afb565b91505092915050565b60008115159050919050565b611b5281611b3d565b82525050565b6000602082019050611b6d6000830184611b49565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bad578082015181840152602081019050611b92565b60008484015250505050565b6000601f19601f8301169050919050565b6000611bd582611b73565b611bdf8185611b7e565b9350611bef818560208601611b8f565b611bf881611bb9565b840191505092915050565b60006020820190508181036000830152611c1d8184611bca565b905092915050565b6000819050919050565b611c3881611c25565b8114611c4357600080fd5b50565b600081359050611c5581611c2f565b92915050565b600060208284031215611c7157611c70611aae565b5b6000611c7f84828501611c46565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cb382611c88565b9050919050565b611cc381611ca8565b82525050565b6000602082019050611cde6000830184611cba565b92915050565b611ced81611ca8565b8114611cf857600080fd5b50565b600081359050611d0a81611ce4565b92915050565b60008060408385031215611d2757611d26611aae565b5b6000611d3585828601611cfb565b9250506020611d4685828601611c46565b9150509250929050565b611d5981611c25565b82525050565b6000602082019050611d746000830184611d50565b92915050565b600080600060608486031215611d9357611d92611aae565b5b6000611da186828701611cfb565b9350506020611db286828701611cfb565b9250506040611dc386828701611c46565b9150509250925092565b600060208284031215611de357611de2611aae565b5b6000611df184828501611cfb565b91505092915050565b611e0381611b3d565b8114611e0e57600080fd5b50565b600081359050611e2081611dfa565b92915050565b60008060408385031215611e3d57611e3c611aae565b5b6000611e4b85828601611cfb565b9250506020611e5c85828601611e11565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ea882611bb9565b810181811067ffffffffffffffff82111715611ec757611ec6611e70565b5b80604052505050565b6000611eda611aa4565b9050611ee68282611e9f565b919050565b600067ffffffffffffffff821115611f0657611f05611e70565b5b611f0f82611bb9565b9050602081019050919050565b82818337600083830152505050565b6000611f3e611f3984611eeb565b611ed0565b905082815260208101848484011115611f5a57611f59611e6b565b5b611f65848285611f1c565b509392505050565b600082601f830112611f8257611f81611e66565b5b8135611f92848260208601611f2b565b91505092915050565b60008060008060808587031215611fb557611fb4611aae565b5b6000611fc387828801611cfb565b9450506020611fd487828801611cfb565b9350506040611fe587828801611c46565b925050606085013567ffffffffffffffff81111561200657612005611ab3565b5b61201287828801611f6d565b91505092959194509250565b6000806040838503121561203557612034611aae565b5b600061204385828601611cfb565b925050602061205485828601611cfb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120a557607f821691505b6020821081036120b8576120b761205e565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b600061211a602d83611b7e565b9150612125826120be565b604082019050919050565b600060208201905081810360008301526121498161210d565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006121ac602283611b7e565b91506121b782612150565b604082019050919050565b600060208201905081810360008301526121db8161219f565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b600061223e603983611b7e565b9150612249826121e2565b604082019050919050565b6000602082019050818103600083015261226d81612231565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122ae82611c25565b91506122b983611c25565b92508282039050818111156122d1576122d0612274565b5b92915050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612333602283611b7e565b915061233e826122d7565b604082019050919050565b6000602082019050818103600083015261236281612326565b9050919050565b600061237482611c25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123a6576123a5612274565b5b600182019050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b600061240d602e83611b7e565b9150612418826123b1565b604082019050919050565b6000602082019050818103600083015261243c81612400565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b600061249f602383611b7e565b91506124aa82612443565b604082019050919050565b600060208201905081810360008301526124ce81612492565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000612531602b83611b7e565b915061253c826124d5565b604082019050919050565b6000602082019050818103600083015261256081612524565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b600061259d601a83611b7e565b91506125a882612567565b602082019050919050565b600060208201905081810360008301526125cc81612590565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061262f603383611b7e565b915061263a826125d3565b604082019050919050565b6000602082019050818103600083015261265e81612622565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006126c1602f83611b7e565b91506126cc82612665565b604082019050919050565b600060208201905081810360008301526126f0816126b4565b9050919050565b600081905092915050565b600061270d82611b73565b61271781856126f7565b9350612727818560208601611b8f565b80840191505092915050565b600061273f8285612702565b915061274b8284612702565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006127b3603283611b7e565b91506127be82612757565b604082019050919050565b600060208201905081810360008301526127e2816127a6565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612845602683611b7e565b9150612850826127e9565b604082019050919050565b6000602082019050818103600083015261287481612838565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006128d7602583611b7e565b91506128e28261287b565b604082019050919050565b60006020820190508181036000830152612906816128ca565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b60006129348261290d565b915061293f8361290d565b925082820390506fffffffffffffffffffffffffffffffff81111561296757612966612274565b5b92915050565b60006129788261290d565b91506129838361290d565b925082820190506fffffffffffffffffffffffffffffffff8111156129ab576129aa612274565b5b92915050565b60006129bc82611c25565b91506129c783611c25565b92508282019050808211156129df576129de612274565b5b92915050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b6000612a41602a83611b7e565b9150612a4c826129e5565b604082019050919050565b60006020820190508181036000830152612a7081612a34565b9050919050565b6000612a8282611c25565b915060008203612a9557612a94612274565b5b600182039050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612afc602f83611b7e565b9150612b0782612aa0565b604082019050919050565b60006020820190508181036000830152612b2b81612aef565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612b5982612b32565b612b638185612b3d565b9350612b73818560208601611b8f565b612b7c81611bb9565b840191505092915050565b6000608082019050612b9c6000830187611cba565b612ba96020830186611cba565b612bb66040830185611d50565b8181036060830152612bc88184612b4e565b905095945050505050565b600081519050612be281611ae4565b92915050565b600060208284031215612bfe57612bfd611aae565b5b6000612c0c84828501612bd3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c4f82611c25565b9150612c5a83611c25565b925082612c6a57612c69612c15565b5b828204905092915050565b6000612c8082611c25565b9150612c8b83611c25565b925082612c9b57612c9a612c15565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212206ed07b44d9afa73dbd5f77018d634a0194aa5ac40977c82de73b33012a88732d64736f6c63430008110033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3527 CODESIZE SUB DUP1 PUSH3 0x3527 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7E SWAP1 PUSH3 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0xCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC4 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x70B JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xF0 SWAP2 SWAP1 PUSH3 0x70B JUMP JUMPDEST POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP POP POP POP PUSH3 0x7F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x174 DUP3 PUSH3 0x129 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x196 JUMPI PUSH3 0x195 PUSH3 0x13A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AB PUSH3 0x10B JUMP JUMPDEST SWAP1 POP PUSH3 0x1B9 DUP3 DUP3 PUSH3 0x169 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1DC JUMPI PUSH3 0x1DB PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x1E7 DUP3 PUSH3 0x129 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x214 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1F7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x237 PUSH3 0x231 DUP5 PUSH3 0x1BE JUMP JUMPDEST PUSH3 0x19F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x256 JUMPI PUSH3 0x255 PUSH3 0x124 JUMP JUMPDEST JUMPDEST PUSH3 0x263 DUP5 DUP3 DUP6 PUSH3 0x1F4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x11F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x295 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x220 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B3 DUP2 PUSH3 0x29E JUMP JUMPDEST DUP2 EQ PUSH3 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D3 DUP2 PUSH3 0x2A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2F6 JUMPI PUSH3 0x2F5 PUSH3 0x115 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x317 JUMPI PUSH3 0x316 PUSH3 0x11A JUMP JUMPDEST JUMPDEST PUSH3 0x325 DUP8 DUP3 DUP9 ADD PUSH3 0x26B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x349 JUMPI PUSH3 0x348 PUSH3 0x11A JUMP JUMPDEST JUMPDEST PUSH3 0x357 DUP8 DUP3 DUP9 ADD PUSH3 0x26B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x36A DUP8 DUP3 DUP9 ADD PUSH3 0x2C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x37D DUP8 DUP3 DUP9 ADD PUSH3 0x2C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243373231413A20636F6C6C656374696F6E206D7573742068617665206120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E7A65726F20737570706C79000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F8 PUSH1 0x2E DUP4 PUSH3 0x389 JUMP JUMPDEST SWAP2 POP PUSH3 0x405 DUP3 PUSH3 0x39A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x42B DUP2 PUSH3 0x3E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A206D61782062617463682073697A65206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E7A65726F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x490 PUSH1 0x27 DUP4 PUSH3 0x389 JUMP JUMPDEST SWAP2 POP PUSH3 0x49D DUP3 PUSH3 0x432 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4C3 DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x51D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x533 JUMPI PUSH3 0x532 PUSH3 0x4D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x59D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x55E JUMP JUMPDEST PUSH3 0x5A9 DUP7 DUP4 PUSH3 0x55E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EC PUSH3 0x5E6 PUSH3 0x5E0 DUP5 PUSH3 0x29E JUMP JUMPDEST PUSH3 0x5C1 JUMP JUMPDEST PUSH3 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x608 DUP4 PUSH3 0x5CB JUMP JUMPDEST PUSH3 0x620 PUSH3 0x617 DUP3 PUSH3 0x5F3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x56B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x637 PUSH3 0x628 JUMP JUMPDEST PUSH3 0x644 DUP2 DUP5 DUP5 PUSH3 0x5FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x66C JUMPI PUSH3 0x660 PUSH1 0x0 DUP3 PUSH3 0x62D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x64A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6BB JUMPI PUSH3 0x685 DUP2 PUSH3 0x539 JUMP JUMPDEST PUSH3 0x690 DUP5 PUSH3 0x54E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6B8 PUSH3 0x6AF DUP6 PUSH3 0x54E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x649 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6E0 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6C0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6FB DUP4 DUP4 PUSH3 0x6CD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x716 DUP3 PUSH3 0x4CA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x732 JUMPI PUSH3 0x731 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x73E DUP3 SLOAD PUSH3 0x504 JUMP JUMPDEST PUSH3 0x74B DUP3 DUP3 DUP6 PUSH3 0x670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x783 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x76E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x77A DUP6 DUP3 PUSH3 0x6ED JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7EA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x793 DUP7 PUSH3 0x539 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7BD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x796 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7DD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7D9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6CD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2D0B PUSH3 0x81C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x158E ADD MSTORE PUSH2 0x15B7 ADD MSTORE PUSH1 0x0 POP POP PUSH2 0x2D0B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD7224BA0 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x214 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH2 0x4D6 DUP3 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x566 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x566 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x549 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP1 PUSH2 0x2130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x68F PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6BE JUMPI POP PUSH2 0x6BD DUP2 PUSH2 0x6B8 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP4 DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x72E DUP4 DUP4 DUP4 PUSH2 0xF83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP4 PUSH2 0x9BB JUMP JUMPDEST DUP3 LT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x789 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x8F0 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x886 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DC JUMPI DUP7 DUP5 SUB PUSH2 0x8CD JUMPI DUP2 SWAP6 POP POP POP POP POP POP PUSH2 0x92C JUMP JUMPDEST DUP4 DUP1 PUSH2 0x8D8 SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8E8 SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x795 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95C PUSH2 0x70D JUMP JUMPDEST DUP3 LT PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x994 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B0 DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAB2 SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADE SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0xBB7 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC64 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC0 DUP5 DUP5 DUP5 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xCCC DUP5 DUP5 DUP5 DUP5 PUSH2 0x173D JUMP JUMPDEST PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD1C DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD52 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDB0 JUMP JUMPDEST DUP1 PUSH2 0xD8F DUP5 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA0 SWAP3 SWAP2 SWAP1 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFB5 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1011 JUMPI POP PUSH2 0xFDA PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF9 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x102D JUMPI POP PUSH2 0x102C DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1027 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D8 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1147 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115D DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x116D PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DB SWAP2 SWAP1 PUSH2 0x2929 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x296D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1385 SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CA JUMPI PUSH2 0x13FA DUP2 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1532 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1A41 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1542 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x154B DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 LT PUSH2 0x15EE JUMPI PUSH1 0x1 PUSH32 0x0 DUP5 PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x16FC JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E8 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x1738 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x16F4 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172F SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A47 JUMP JUMPDEST ISZERO PUSH2 0x18B7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1787 PUSH2 0xEC9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17E5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17E2 SWAP2 SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1867 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1815 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x185F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1856 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1954 JUMPI DUP1 DUP1 PUSH2 0x193D SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1A2F JUMPI PUSH1 0x1 DUP3 PUSH2 0x19BB SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x19CA SWAP2 SWAP1 PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP5 POP PUSH2 0x19A6 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AED DUP2 PUSH2 0x1AB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B0A DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B34 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B52 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x1BDF DUP2 DUP6 PUSH2 0x1B7E JUMP JUMPDEST SWAP4 POP PUSH2 0x1BEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1BF8 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 DUP5 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C38 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C55 DUP2 PUSH2 0x1C2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C71 JUMPI PUSH2 0x1C70 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7F DUP5 DUP3 DUP6 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 DUP3 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC3 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CED DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0A DUP2 PUSH2 0x1CE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D35 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D46 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D92 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA1 DUP7 DUP3 DUP8 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DB2 DUP7 DUP3 DUP8 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E03 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E20 DUP2 PUSH2 0x1DFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3C PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E4B DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5C DUP6 DUP3 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EA8 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EC7 JUMPI PUSH2 0x1EC6 PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDA PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE6 DUP3 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST PUSH2 0x1F0F DUP3 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH2 0x1F39 DUP5 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x1ED0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1E6B JUMP JUMPDEST JUMPDEST PUSH2 0x1F65 DUP5 DUP3 DUP6 PUSH2 0x1F1C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F82 JUMPI PUSH2 0x1F81 PUSH2 0x1E66 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F92 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1FB4 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP8 DUP3 DUP9 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP8 DUP3 DUP9 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1FE5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x1AB3 JUMP JUMPDEST JUMPDEST PUSH2 0x2012 DUP8 DUP3 DUP9 ADD PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2054 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x205E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211A PUSH1 0x2D DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2125 DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AC PUSH1 0x22 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x21B7 DUP3 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DB DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223E PUSH1 0x39 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2249 DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226D DUP2 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B9 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2333 PUSH1 0x22 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x233E DUP3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2362 DUP2 PUSH2 0x2326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E657220627920696E646578000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240D PUSH1 0x2E DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2418 DUP3 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243C DUP2 PUSH2 0x2400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E64730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249F PUSH1 0x23 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x24AA DUP3 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 PUSH1 0x2B DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x253C DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2560 DUP2 PUSH2 0x2524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259D PUSH1 0x1A DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x25A8 DUP3 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CC DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262F PUSH1 0x33 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x263A DUP3 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x265E DUP2 PUSH2 0x2622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C1 PUSH1 0x2F DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x26CC DUP3 PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F0 DUP2 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270D DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x2717 DUP2 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2727 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP3 DUP6 PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP PUSH2 0x274B DUP3 DUP5 PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B3 PUSH1 0x32 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x27BE DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E2 DUP2 PUSH2 0x27A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2845 PUSH1 0x26 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP3 PUSH2 0x27E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2874 DUP2 PUSH2 0x2838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D7 PUSH1 0x25 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E2 DUP3 PUSH2 0x287B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2906 DUP2 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2934 DUP3 PUSH2 0x290D JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP4 PUSH2 0x290D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2967 JUMPI PUSH2 0x2966 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 DUP3 PUSH2 0x290D JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP4 PUSH2 0x290D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29AB JUMPI PUSH2 0x29AA PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BC DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C7 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A41 PUSH1 0x2A DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4C DUP3 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A70 DUP2 PUSH2 0x2A34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A82 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2A95 JUMPI PUSH2 0x2A94 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFC PUSH1 0x2F DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2B07 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B2B DUP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B59 DUP3 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x2B63 DUP2 DUP6 PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP PUSH2 0x2B73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x1BB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B9C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x2BA9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x2BB6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2BC8 DUP2 DUP5 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BE2 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFE JUMPI PUSH2 0x2BFD PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0C DUP5 DUP3 DUP6 ADD PUSH2 0x2BD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4F DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5A DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C6A JUMPI PUSH2 0x2C69 PUSH2 0x2C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C80 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C8B DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C9B JUMPI PUSH2 0x2C9A PUSH2 0x2C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xD07B44D9AFA73DBD5F77018D634A01 SWAP5 0xAA GAS 0xC4 MULMOD PUSH24 0xC82DE73B33012A88732D64736F6C63430008110033000000 ",
							"sourceMap": "1728:15117:9:-:0;;;2064:1;2033:32;;13626:1;13584:43;;3016:420;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3179:1;3161:15;:19;3146:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;3272:1;3256:13;:17;3248:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3331:5;3323;:13;;;;;;:::i;:::-;;3352:7;3342;:17;;;;;;:::i;:::-;;3380:13;3365:28;;;;;;3416:15;3399:32;;;;;;3016:420;;;;1728:15117;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1166::-;3154:6;3162;3170;3178;3227:3;3215:9;3206:7;3202:23;3198:33;3195:120;;;3234:79;;:::i;:::-;3195:120;3375:1;3364:9;3360:17;3354:24;3405:18;3397:6;3394:30;3391:117;;;3427:79;;:::i;:::-;3391:117;3532:74;3598:7;3589:6;3578:9;3574:22;3532:74;:::i;:::-;3522:84;;3325:291;3676:2;3665:9;3661:18;3655:25;3707:18;3699:6;3696:30;3693:117;;;3729:79;;:::i;:::-;3693:117;3834:74;3900:7;3891:6;3880:9;3876:22;3834:74;:::i;:::-;3824:84;;3626:292;3957:2;3983:64;4039:7;4030:6;4019:9;4015:22;3983:64;:::i;:::-;3973:74;;3928:129;4096:2;4122:64;4178:7;4169:6;4158:9;4154:22;4122:64;:::i;:::-;4112:74;;4067:129;3037:1166;;;;;;;:::o;4209:169::-;4293:11;4327:6;4322:3;4315:19;4367:4;4362:3;4358:14;4343:29;;4209:169;;;;:::o;4384:233::-;4524:34;4520:1;4512:6;4508:14;4501:58;4593:16;4588:2;4580:6;4576:15;4569:41;4384:233;:::o;4623:366::-;4765:3;4786:67;4850:2;4845:3;4786:67;:::i;:::-;4779:74;;4862:93;4951:3;4862:93;:::i;:::-;4980:2;4975:3;4971:12;4964:19;;4623:366;;;:::o;4995:419::-;5161:4;5199:2;5188:9;5184:18;5176:26;;5248:9;5242:4;5238:20;5234:1;5223:9;5219:17;5212:47;5276:131;5402:4;5276:131;:::i;:::-;5268:139;;4995:419;;;:::o;5420:226::-;5560:34;5556:1;5548:6;5544:14;5537:58;5629:9;5624:2;5616:6;5612:15;5605:34;5420:226;:::o;5652:366::-;5794:3;5815:67;5879:2;5874:3;5815:67;:::i;:::-;5808:74;;5891:93;5980:3;5891:93;:::i;:::-;6009:2;6004:3;6000:12;5993:19;;5652:366;;;:::o;6024:419::-;6190:4;6228:2;6217:9;6213:18;6205:26;;6277:9;6271:4;6267:20;6263:1;6252:9;6248:17;6241:47;6305:131;6431:4;6305:131;:::i;:::-;6297:139;;6024:419;;;:::o;6449:99::-;6501:6;6535:5;6529:12;6519:22;;6449:99;;;:::o;6554:180::-;6602:77;6599:1;6592:88;6699:4;6696:1;6689:15;6723:4;6720:1;6713:15;6740:320;6784:6;6821:1;6815:4;6811:12;6801:22;;6868:1;6862:4;6858:12;6889:18;6879:81;;6945:4;6937:6;6933:17;6923:27;;6879:81;7007:2;6999:6;6996:14;6976:18;6973:38;6970:84;;7026:18;;:::i;:::-;6970:84;6791:269;6740:320;;;:::o;7066:141::-;7115:4;7138:3;7130:11;;7161:3;7158:1;7151:14;7195:4;7192:1;7182:18;7174:26;;7066:141;;;:::o;7213:93::-;7250:6;7297:2;7292;7285:5;7281:14;7277:23;7267:33;;7213:93;;;:::o;7312:107::-;7356:8;7406:5;7400:4;7396:16;7375:37;;7312:107;;;;:::o;7425:393::-;7494:6;7544:1;7532:10;7528:18;7567:97;7597:66;7586:9;7567:97;:::i;:::-;7685:39;7715:8;7704:9;7685:39;:::i;:::-;7673:51;;7757:4;7753:9;7746:5;7742:21;7733:30;;7806:4;7796:8;7792:19;7785:5;7782:30;7772:40;;7501:317;;7425:393;;;;;:::o;7824:60::-;7852:3;7873:5;7866:12;;7824:60;;;:::o;7890:142::-;7940:9;7973:53;7991:34;8000:24;8018:5;8000:24;:::i;:::-;7991:34;:::i;:::-;7973:53;:::i;:::-;7960:66;;7890:142;;;:::o;8038:75::-;8081:3;8102:5;8095:12;;8038:75;;;:::o;8119:269::-;8229:39;8260:7;8229:39;:::i;:::-;8290:91;8339:41;8363:16;8339:41;:::i;:::-;8331:6;8324:4;8318:11;8290:91;:::i;:::-;8284:4;8277:105;8195:193;8119:269;;;:::o;8394:73::-;8439:3;8394:73;:::o;8473:189::-;8550:32;;:::i;:::-;8591:65;8649:6;8641;8635:4;8591:65;:::i;:::-;8526:136;8473:189;;:::o;8668:186::-;8728:120;8745:3;8738:5;8735:14;8728:120;;;8799:39;8836:1;8829:5;8799:39;:::i;:::-;8772:1;8765:5;8761:13;8752:22;;8728:120;;;8668:186;;:::o;8860:543::-;8961:2;8956:3;8953:11;8950:446;;;8995:38;9027:5;8995:38;:::i;:::-;9079:29;9097:10;9079:29;:::i;:::-;9069:8;9065:44;9262:2;9250:10;9247:18;9244:49;;;9283:8;9268:23;;9244:49;9306:80;9362:22;9380:3;9362:22;:::i;:::-;9352:8;9348:37;9335:11;9306:80;:::i;:::-;8965:431;;8950:446;8860:543;;;:::o;9409:117::-;9463:8;9513:5;9507:4;9503:16;9482:37;;9409:117;;;;:::o;9532:169::-;9576:6;9609:51;9657:1;9653:6;9645:5;9642:1;9638:13;9609:51;:::i;:::-;9605:56;9690:4;9684;9680:15;9670:25;;9583:118;9532:169;;;;:::o;9706:295::-;9782:4;9928:29;9953:3;9947:4;9928:29;:::i;:::-;9920:37;;9990:3;9987:1;9983:11;9977:4;9974:21;9966:29;;9706:295;;;;:::o;10006:1395::-;10123:37;10156:3;10123:37;:::i;:::-;10225:18;10217:6;10214:30;10211:56;;;10247:18;;:::i;:::-;10211:56;10291:38;10323:4;10317:11;10291:38;:::i;:::-;10376:67;10436:6;10428;10422:4;10376:67;:::i;:::-;10470:1;10494:4;10481:17;;10526:2;10518:6;10515:14;10543:1;10538:618;;;;11200:1;11217:6;11214:77;;;11266:9;11261:3;11257:19;11251:26;11242:35;;11214:77;11317:67;11377:6;11370:5;11317:67;:::i;:::-;11311:4;11304:81;11173:222;10508:887;;10538:618;10590:4;10586:9;10578:6;10574:22;10624:37;10656:4;10624:37;:::i;:::-;10683:1;10697:208;10711:7;10708:1;10705:14;10697:208;;;10790:9;10785:3;10781:19;10775:26;10767:6;10760:42;10841:1;10833:6;10829:14;10819:24;;10888:2;10877:9;10873:18;10860:31;;10734:4;10731:1;10727:12;10722:17;;10697:208;;;10933:6;10924:7;10921:19;10918:179;;;10991:9;10986:3;10982:19;10976:26;11034:48;11076:4;11068:6;11064:17;11053:9;11034:48;:::i;:::-;11026:6;11019:64;10941:156;10918:179;11143:1;11139;11131:6;11127:14;11123:22;11117:4;11110:36;10545:611;;;10508:887;;10098:1303;;;10006:1395;;:::o;1728:15117:9:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1943": {
									"entryPoint": 6721,
									"id": 1943,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1757": {
									"entryPoint": 3793,
									"id": 1757,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1223": {
									"entryPoint": 6340,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1930": {
									"entryPoint": 6715,
									"id": 1930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1917": {
									"entryPoint": 5949,
									"id": 1917,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1420": {
									"entryPoint": 3772,
									"id": 1420,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_498": {
									"entryPoint": 3785,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1734": {
									"entryPoint": 3971,
									"id": 1734,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1267": {
									"entryPoint": 1525,
									"id": 1267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1045": {
									"entryPoint": 2491,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1288": {
									"entryPoint": 1392,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1340": {
									"entryPoint": 3518,
									"id": 1340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_209": {
									"entryPoint": 6727,
									"id": 209,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1162": {
									"entryPoint": 1246,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextOwnerToExplicitlySet_1760": {
									"entryPoint": 3512,
									"id": 1760,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_1152": {
									"entryPoint": 2469,
									"id": 1152,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownershipOf_1137": {
									"entryPoint": 5434,
									"id": 1137,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1377": {
									"entryPoint": 2354,
									"id": 1377,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1407": {
									"entryPoint": 3253,
									"id": 1407,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1322": {
									"entryPoint": 2869,
									"id": 1322,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1017": {
									"entryPoint": 916,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_734": {
									"entryPoint": 3666,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1172": {
									"entryPoint": 2723,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_593": {
									"entryPoint": 6363,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_890": {
									"entryPoint": 2386,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_979": {
									"entryPoint": 1843,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1214": {
									"entryPoint": 3345,
									"id": 1214,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_870": {
									"entryPoint": 1805,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1358": {
									"entryPoint": 1827,
									"id": 1358,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11143,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 10605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint128": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 10509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7964,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 11381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3": {
									"entryPoint": 8919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79": {
									"entryPoint": 10725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a": {
									"entryPoint": 9283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b": {
									"entryPoint": 10363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 9829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57": {
									"entryPoint": 9575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c": {
									"entryPoint": 10071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c": {
									"entryPoint": 9137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040": {
									"entryPoint": 10912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31552:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"src": "1518:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:10",
														"type": ""
													}
												],
												"src": "1623:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:10",
																"statements": []
															},
															"src": "1889:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:10",
														"type": ""
													}
												],
												"src": "1798:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:10",
														"type": ""
													}
												],
												"src": "2050:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:10",
														"type": ""
													}
												],
												"src": "2158:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:10",
														"type": ""
													}
												],
												"src": "2541:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:10",
														"type": ""
													}
												],
												"src": "2860:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:10"
															},
															"nodeType": "YulIf",
															"src": "2996:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:10",
														"type": ""
													}
												],
												"src": "2943:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:10",
														"type": ""
													}
												],
												"src": "3071:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:10"
															},
															"nodeType": "YulIf",
															"src": "3292:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:10",
														"type": ""
													}
												],
												"src": "3216:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:10",
														"type": ""
													}
												],
												"src": "3551:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:10",
														"type": ""
													}
												],
												"src": "3683:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:10",
														"type": ""
													}
												],
												"src": "3785:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:10",
														"type": ""
													}
												],
												"src": "3909:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:10"
															},
															"nodeType": "YulIf",
															"src": "4190:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:10",
														"type": ""
													}
												],
												"src": "4137:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:10",
														"type": ""
													}
												],
												"src": "4265:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:10"
															},
															"nodeType": "YulIf",
															"src": "4503:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:10",
														"type": ""
													}
												],
												"src": "4410:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:10",
														"type": ""
													}
												],
												"src": "4890:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:10",
														"type": ""
													}
												],
												"src": "5014:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:10"
															},
															"nodeType": "YulIf",
															"src": "5352:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:10",
														"type": ""
													}
												],
												"src": "5242:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:10"
															},
															"nodeType": "YulIf",
															"src": "5943:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:10",
														"type": ""
													}
												],
												"src": "5867:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:10"
															},
															"nodeType": "YulIf",
															"src": "6252:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:10",
														"type": ""
													}
												],
												"src": "6202:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:10",
														"type": ""
													}
												],
												"src": "6324:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:10"
															},
															"nodeType": "YulIf",
															"src": "6553:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:10",
														"type": ""
													}
												],
												"src": "6463:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:10"
															},
															"nodeType": "YulIf",
															"src": "7525:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:10",
														"type": ""
													}
												],
												"src": "7369:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:10",
														"type": ""
													}
												],
												"src": "7656:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:10"
															},
															"nodeType": "YulIf",
															"src": "7928:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:10",
														"type": ""
													}
												],
												"src": "7791:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:10",
														"type": ""
													}
												],
												"src": "8104:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:10"
															},
															"nodeType": "YulIf",
															"src": "8498:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:10",
														"type": ""
													}
												],
												"src": "8256:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:10"
															},
															"nodeType": "YulIf",
															"src": "8769:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:10",
														"type": ""
													}
												],
												"src": "8698:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:10"
															},
															"nodeType": "YulIf",
															"src": "9178:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:10",
														"type": ""
													}
												],
												"src": "9042:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:10"
															},
															"nodeType": "YulIf",
															"src": "10084:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:10",
														"type": ""
													}
												],
												"src": "9991:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:10"
															},
															"nodeType": "YulIf",
															"src": "10796:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:10"
															},
															"nodeType": "YulIf",
															"src": "10887:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:10",
														"type": ""
													}
												],
												"src": "10657:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:10",
																		"type": "",
																		"value": "ERC721A: approved query for none"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:10"
																	},
																	{
																		"hexValue": "78697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:15:10",
																		"type": "",
																		"value": "xistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:10",
														"type": ""
													}
												],
												"src": "10983:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11377:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11448:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11384:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11384:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11377:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11549:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																	"nodeType": "YulIdentifier",
																	"src": "11460:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11460:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11460:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11562:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11355:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11363:3:10",
														"type": ""
													}
												],
												"src": "11221:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11764:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11774:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11786:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11797:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11782:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11782:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11774:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11821:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11832:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11817:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11840:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11846:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11836:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11836:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11810:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11810:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11866:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12000:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11874:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11866:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11744:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11759:4:10",
														"type": ""
													}
												],
												"src": "11593:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12124:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12146:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12154:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12142:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12158:34:10",
																		"type": "",
																		"value": "ERC721A: approval to current own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12135:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12214:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12222:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:15:10"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12227:4:10",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12116:6:10",
														"type": ""
													}
												],
												"src": "12018:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12391:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12401:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12467:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12472:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12408:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12408:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12401:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																	"nodeType": "YulIdentifier",
																	"src": "12484:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12484:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12586:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12597:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12602:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12586:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12379:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12387:3:10",
														"type": ""
													}
												],
												"src": "12245:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12788:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12798:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12810:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12821:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12806:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12806:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12798:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12845:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12856:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12841:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12841:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12864:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12870:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12860:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12834:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12834:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12890:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13024:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12898:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12898:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12890:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12768:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12783:4:10",
														"type": ""
													}
												],
												"src": "12617:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13148:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13170:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13178:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13166:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13182:34:10",
																		"type": "",
																		"value": "ERC721A: approve caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13159:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13159:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13238:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13246:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13234:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13234:15:10"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13251:27:10",
																		"type": "",
																		"value": "wner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13227:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13140:6:10",
														"type": ""
													}
												],
												"src": "13042:244:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13438:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13448:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13514:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13519:2:10",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13455:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13448:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13620:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																	"nodeType": "YulIdentifier",
																	"src": "13531:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13531:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13531:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13633:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13644:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13649:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13633:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13426:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13434:3:10",
														"type": ""
													}
												],
												"src": "13292:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13835:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13845:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13857:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13868:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13853:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13853:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13845:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13892:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13903:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13888:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13888:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13911:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13917:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13907:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13881:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13881:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13937:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14071:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13945:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13945:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13937:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13815:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13830:4:10",
														"type": ""
													}
												],
												"src": "13664:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14134:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14137:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14127:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14231:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14224:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14224:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14255:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14258:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14248:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14248:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14248:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14089:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14320:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14330:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14353:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14335:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14335:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14330:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14364:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14387:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14369:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14369:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14364:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14398:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14410:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14413:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14406:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14406:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14398:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14440:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14442:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14442:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14442:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14431:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14437:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14428:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:11:10"
															},
															"nodeType": "YulIf",
															"src": "14425:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14306:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14309:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14315:4:10",
														"type": ""
													}
												],
												"src": "14275:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14581:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14603:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14611:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14599:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14615:34:10",
																		"type": "",
																		"value": "ERC721A: owner index out of boun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14592:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14592:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14671:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14679:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14667:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14667:15:10"
																	},
																	{
																		"hexValue": "6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14684:4:10",
																		"type": "",
																		"value": "ds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14660:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14660:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14573:6:10",
														"type": ""
													}
												],
												"src": "14475:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14848:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14858:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14924:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14929:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14865:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14865:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14858:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15030:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																	"nodeType": "YulIdentifier",
																	"src": "14941:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14941:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14941:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15043:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15054:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15059:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15050:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15050:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15043:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14836:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14844:3:10",
														"type": ""
													}
												],
												"src": "14702:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15245:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15255:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15267:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15278:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15263:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15255:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15302:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15313:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15298:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15321:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15327:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15317:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15291:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15347:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15481:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15355:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15355:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15347:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15225:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15240:4:10",
														"type": ""
													}
												],
												"src": "15074:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15542:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15552:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15579:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15561:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15561:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15552:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15675:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15677:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15677:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15677:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15600:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15607:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15597:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15597:77:10"
															},
															"nodeType": "YulIf",
															"src": "15594:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15706:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15717:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15724:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15713:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15706:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15528:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15538:3:10",
														"type": ""
													}
												],
												"src": "15499:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15844:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15866:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15874:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15862:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f6620",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15878:34:10",
																		"type": "",
																		"value": "ERC721A: unable to get token of "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15855:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15855:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15855:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15934:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15942:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15930:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15930:15:10"
																	},
																	{
																		"hexValue": "6f776e657220627920696e646578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15947:16:10",
																		"type": "",
																		"value": "owner by index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15923:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15923:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15923:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15836:6:10",
														"type": ""
													}
												],
												"src": "15738:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16123:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16133:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16199:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16204:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16140:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16140:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16133:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16305:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																	"nodeType": "YulIdentifier",
																	"src": "16216:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16216:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16216:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16318:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16329:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16334:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16325:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16318:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16111:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16119:3:10",
														"type": ""
													}
												],
												"src": "15977:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16520:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16542:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16553:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16538:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16530:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16577:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16588:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16573:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16596:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16602:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16592:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16566:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16566:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16622:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16756:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16630:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16630:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16622:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16500:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16515:4:10",
														"type": ""
													}
												],
												"src": "16349:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16880:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16902:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16910:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16898:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16914:34:10",
																		"type": "",
																		"value": "ERC721A: global index out of bou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16891:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16891:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16970:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16978:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16966:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16966:15:10"
																	},
																	{
																		"hexValue": "6e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16983:5:10",
																		"type": "",
																		"value": "nds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16959:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16959:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16959:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16872:6:10",
														"type": ""
													}
												],
												"src": "16774:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17148:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17158:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17224:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17229:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17165:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17165:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17158:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17330:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																	"nodeType": "YulIdentifier",
																	"src": "17241:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17241:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17241:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17343:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17354:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17359:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17350:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17350:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17343:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17136:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17144:3:10",
														"type": ""
													}
												],
												"src": "17002:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17545:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17555:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17567:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17578:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17563:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17563:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17555:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17602:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17613:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17598:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17598:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17621:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17627:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17617:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17591:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17591:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17647:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17781:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17655:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17655:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17647:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17525:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17540:4:10",
														"type": ""
													}
												],
												"src": "17374:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17905:124:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17927:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17935:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17923:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17923:14:10"
																	},
																	{
																		"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17939:34:10",
																		"type": "",
																		"value": "ERC721A: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17916:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17916:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17916:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17995:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18003:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17991:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17991:15:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18008:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17984:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17984:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17984:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17897:6:10",
														"type": ""
													}
												],
												"src": "17799:230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18181:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18191:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18257:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18262:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18198:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18198:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18363:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																	"nodeType": "YulIdentifier",
																	"src": "18274:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18274:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18274:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18376:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18387:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18392:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18383:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18383:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18376:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18177:3:10",
														"type": ""
													}
												],
												"src": "18035:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18578:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18588:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18600:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18611:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18596:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18596:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18588:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18635:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18646:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18631:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18654:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18660:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18650:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18650:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18624:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18624:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18680:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18814:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18688:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18688:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18680:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18558:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18573:4:10",
														"type": ""
													}
												],
												"src": "18407:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18938:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18960:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18968:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18956:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18972:28:10",
																		"type": "",
																		"value": "ERC721A: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18949:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18949:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18949:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18930:6:10",
														"type": ""
													}
												],
												"src": "18832:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19160:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19170:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19236:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19241:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19177:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19177:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19170:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19342:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																	"nodeType": "YulIdentifier",
																	"src": "19253:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19253:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19253:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19355:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19366:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19371:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19362:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19362:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19355:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19148:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19156:3:10",
														"type": ""
													}
												],
												"src": "19014:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19557:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19567:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19579:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19590:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19575:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19567:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19614:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19625:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19610:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19610:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19633:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19639:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19629:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19629:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19603:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19603:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19659:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19793:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19667:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19667:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19659:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19537:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19552:4:10",
														"type": ""
													}
												],
												"src": "19386:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19917:132:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19939:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19947:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19935:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19935:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e2045524337323152",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19951:34:10",
																		"type": "",
																		"value": "ERC721A: transfer to non ERC721R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19928:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19928:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19928:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20007:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20015:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20003:15:10"
																	},
																	{
																		"hexValue": "6563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20020:21:10",
																		"type": "",
																		"value": "eceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19996:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19996:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19909:6:10",
														"type": ""
													}
												],
												"src": "19811:238:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20201:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20211:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20277:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20282:2:10",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20218:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20218:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20211:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20383:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																	"nodeType": "YulIdentifier",
																	"src": "20294:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20294:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20294:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20396:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20407:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20412:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20403:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20403:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20396:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20189:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20197:3:10",
														"type": ""
													}
												],
												"src": "20055:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20598:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20608:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20620:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20631:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20616:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20616:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20608:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20655:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20666:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20651:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20674:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20680:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20670:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20644:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20644:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20644:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20700:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20834:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20708:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20708:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20700:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20578:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20593:4:10",
														"type": ""
													}
												],
												"src": "20427:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20958:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20980:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20988:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20976:14:10"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20992:34:10",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20969:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20969:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21048:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21056:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21044:15:10"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21061:17:10",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21037:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21037:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20950:6:10",
														"type": ""
													}
												],
												"src": "20852:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21238:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21248:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21314:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21319:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21255:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21255:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21248:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21420:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nodeType": "YulIdentifier",
																	"src": "21331:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21331:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21331:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21433:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21444:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21449:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21440:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21440:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21433:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21226:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21234:3:10",
														"type": ""
													}
												],
												"src": "21092:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21635:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21645:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21657:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21668:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21653:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21645:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21692:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21703:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21688:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21688:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21711:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21717:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21707:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21707:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21681:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21681:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21737:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21871:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21745:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21745:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21737:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21615:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21630:4:10",
														"type": ""
													}
												],
												"src": "21464:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22003:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22013:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22028:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22013:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21975:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21980:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21991:11:10",
														"type": ""
													}
												],
												"src": "21889:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22153:280:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22163:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22210:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22177:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22177:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22167:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22225:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22309:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22314:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22232:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22232:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22225:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22369:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22376:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22365:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22383:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22388:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22330:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22330:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22330:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22404:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22415:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22420:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22411:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22411:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22404:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22134:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22141:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22149:3:10",
														"type": ""
													}
												],
												"src": "22043:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22623:251:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22634:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22723:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22732:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22641:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22641:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22634:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22746:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22835:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22844:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22753:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22753:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22746:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22858:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22865:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22858:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22594:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22600:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22608:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22619:3:10",
														"type": ""
													}
												],
												"src": "22439:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22986:131:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23008:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23016:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23004:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23020:34:10",
																		"type": "",
																		"value": "ERC721A: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22997:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22997:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23076:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23084:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23072:15:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23089:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23065:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23065:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22978:6:10",
														"type": ""
													}
												],
												"src": "22880:237:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23269:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23279:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23345:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23350:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23286:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23286:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23279:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23451:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																	"nodeType": "YulIdentifier",
																	"src": "23362:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23362:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23362:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23464:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23475:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23480:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23471:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23464:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23257:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23265:3:10",
														"type": ""
													}
												],
												"src": "23123:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23666:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23676:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23688:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23699:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23684:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23684:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23676:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23723:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23734:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23719:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23742:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23748:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23738:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23712:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23712:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23712:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23768:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23902:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23776:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23776:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23768:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23646:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23661:4:10",
														"type": ""
													}
												],
												"src": "23495:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24026:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24048:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24056:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24044:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24044:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24060:34:10",
																		"type": "",
																		"value": "ERC721A: transfer from incorrect"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24037:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24037:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24116:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24124:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24112:15:10"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24129:8:10",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24105:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24105:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24018:6:10",
														"type": ""
													}
												],
												"src": "23920:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24297:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24307:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24373:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24378:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24314:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24314:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24307:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24479:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																	"nodeType": "YulIdentifier",
																	"src": "24390:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24390:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24390:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24492:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24503:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24499:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24499:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24492:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24285:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24293:3:10",
														"type": ""
													}
												],
												"src": "24151:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24694:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24704:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24716:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24727:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24712:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24712:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24704:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24751:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24762:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24747:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24747:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24770:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24776:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24766:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24740:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24740:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24740:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24796:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24930:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24804:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24804:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24796:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24674:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24689:4:10",
														"type": ""
													}
												],
												"src": "24523:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25054:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25076:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25084:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25072:14:10"
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25088:34:10",
																		"type": "",
																		"value": "ERC721A: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25065:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25065:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25144:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25152:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25140:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25157:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25133:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25133:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25133:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25046:6:10",
														"type": ""
													}
												],
												"src": "24948:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25324:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25334:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25400:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25405:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25341:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25341:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25334:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25506:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																	"nodeType": "YulIdentifier",
																	"src": "25417:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25417:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25417:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25519:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25530:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25535:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25526:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25526:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25519:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25312:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25320:3:10",
														"type": ""
													}
												],
												"src": "25178:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25721:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25731:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25754:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25739:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25739:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25731:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25778:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25789:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25774:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25774:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25797:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25803:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25793:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25767:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25767:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25767:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25823:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25957:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25831:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25831:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25823:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25701:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25716:4:10",
														"type": ""
													}
												],
												"src": "25550:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26020:73:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26030:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26045:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26052:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26041:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26041:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26030:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26002:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26012:7:10",
														"type": ""
													}
												],
												"src": "25975:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26144:182:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26154:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26177:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "26159:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26159:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26154:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26188:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26211:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "26193:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26193:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26188:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26222:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26234:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26237:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26230:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26230:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26222:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26297:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26299:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26299:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26299:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "26255:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26261:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26252:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26252:44:10"
															},
															"nodeType": "YulIf",
															"src": "26249:70:10"
														}
													]
												},
												"name": "checked_sub_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26130:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26133:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "26139:4:10",
														"type": ""
													}
												],
												"src": "26099:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26376:180:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26386:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26409:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "26391:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26391:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26386:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26420:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26443:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "26425:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26425:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26420:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26454:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26465:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26468:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26461:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26461:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "26454:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26527:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26529:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26529:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26529:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "26486:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26491:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26483:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26483:43:10"
															},
															"nodeType": "YulIf",
															"src": "26480:69:10"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26363:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26366:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "26372:3:10",
														"type": ""
													}
												],
												"src": "26332:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26606:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26616:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26639:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26621:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26621:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26616:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26650:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26673:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26655:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26655:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26650:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26684:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26695:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26698:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26691:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26691:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "26684:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26724:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26726:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26726:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26726:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26716:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "26719:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26713:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26713:10:10"
															},
															"nodeType": "YulIf",
															"src": "26710:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26593:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26596:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "26602:3:10",
														"type": ""
													}
												],
												"src": "26562:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26865:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26887:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26895:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26883:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26883:14:10"
																	},
																	{
																		"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e65786973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26899:34:10",
																		"type": "",
																		"value": "ERC721A: owner query for nonexis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26876:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26876:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26955:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26963:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26951:15:10"
																	},
																	{
																		"hexValue": "74656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26968:12:10",
																		"type": "",
																		"value": "tent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26944:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26944:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26944:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26857:6:10",
														"type": ""
													}
												],
												"src": "26759:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27140:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27150:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27216:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27221:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27157:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27157:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27150:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27322:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																	"nodeType": "YulIdentifier",
																	"src": "27233:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27233:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27233:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27335:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27346:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27351:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27342:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27342:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27335:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27128:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27136:3:10",
														"type": ""
													}
												],
												"src": "26994:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27537:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27547:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27559:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27555:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27555:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27547:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27594:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27605:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27590:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27613:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27619:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27609:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27583:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27583:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27583:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27639:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27773:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27647:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27647:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27639:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27517:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27532:4:10",
														"type": ""
													}
												],
												"src": "27366:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27834:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27844:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27871:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27853:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27853:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27844:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27905:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27907:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27907:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27907:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27892:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27899:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27889:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27889:15:10"
															},
															"nodeType": "YulIf",
															"src": "27886:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27936:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27947:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27954:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "27943:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27943:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "27936:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27820:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "27830:3:10",
														"type": ""
													}
												],
												"src": "27791:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28074:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28096:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28104:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28092:14:10"
																	},
																	{
																		"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28108:34:10",
																		"type": "",
																		"value": "ERC721A: unable to determine the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28085:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28085:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28085:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28164:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28172:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28160:15:10"
																	},
																	{
																		"hexValue": "206f776e6572206f6620746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28177:17:10",
																		"type": "",
																		"value": " owner of token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28153:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28153:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28066:6:10",
														"type": ""
													}
												],
												"src": "27968:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28354:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28364:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28430:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28435:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28371:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28371:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28364:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28536:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																	"nodeType": "YulIdentifier",
																	"src": "28447:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28447:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28447:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28549:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28560:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28565:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28556:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28549:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28342:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28350:3:10",
														"type": ""
													}
												],
												"src": "28208:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28751:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28761:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28773:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28784:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28769:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28769:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28761:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28808:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28819:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28804:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28804:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28827:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28833:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28823:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28797:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28797:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28797:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28853:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28987:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28861:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28861:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28853:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28731:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28746:4:10",
														"type": ""
													}
												],
												"src": "28580:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29063:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29074:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29090:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29084:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29084:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "29074:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29046:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29056:6:10",
														"type": ""
													}
												],
												"src": "29005:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29204:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29221:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29226:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29214:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29214:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29214:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29242:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29261:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29266:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29257:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29257:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "29242:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29176:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29181:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "29192:11:10",
														"type": ""
													}
												],
												"src": "29109:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29373:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29383:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29429:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "29397:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29397:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29387:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29444:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29509:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29514:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29451:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29451:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29444:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29569:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29576:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29565:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29583:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29588:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "29530:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29530:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29530:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29604:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29615:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "29642:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "29620:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29620:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29611:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29611:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29604:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29354:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29361:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29369:3:10",
														"type": ""
													}
												],
												"src": "29283:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29862:440:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29872:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29884:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29895:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29880:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29880:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29872:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29953:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29966:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29977:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29962:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29909:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29909:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29909:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30034:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30047:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30058:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30043:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29990:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29990:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29990:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30116:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30129:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30140:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30125:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30125:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30072:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30072:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30072:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30165:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30176:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30161:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30185:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30191:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30181:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30181:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30154:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30154:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30211:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "30281:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30290:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30219:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30219:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30211:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29810:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "29822:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29830:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29838:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29846:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29857:4:10",
														"type": ""
													}
												],
												"src": "29662:640:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30370:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30380:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30395:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30389:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30389:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "30380:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30437:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "30411:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30411:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30411:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "30348:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30356:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30364:5:10",
														"type": ""
													}
												],
												"src": "30308:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30531:273:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30577:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "30579:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30579:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30579:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30552:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30561:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30548:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30548:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30573:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "30544:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30544:32:10"
															},
															"nodeType": "YulIf",
															"src": "30541:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "30670:127:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30685:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30699:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30689:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "30714:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30759:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30770:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30755:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30755:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30779:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "30724:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30724:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "30714:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30501:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "30512:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30524:6:10",
														"type": ""
													}
												],
												"src": "30455:349:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30838:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30855:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30858:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30848:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30848:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30952:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30955:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30945:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30945:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30945:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30976:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30979:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "30969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30969:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30969:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "30810:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31038:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31048:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31071:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31053:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31053:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31048:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31082:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31105:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31087:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31087:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31082:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31129:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "31131:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31131:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31131:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31126:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31119:9:10"
															},
															"nodeType": "YulIf",
															"src": "31116:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31161:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31170:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31173:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "31166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31166:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "31161:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31027:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31030:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "31036:1:10",
														"type": ""
													}
												],
												"src": "30996:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31221:142:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31231:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31254:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31236:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31236:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31231:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31265:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31288:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31270:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31270:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31265:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31312:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "31314:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31314:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31314:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31309:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31302:9:10"
															},
															"nodeType": "YulIf",
															"src": "31299:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31343:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31352:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31355:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "31348:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31348:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "31343:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31210:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31213:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "31219:1:10",
														"type": ""
													}
												],
												"src": "31187:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31397:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31417:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31407:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31407:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31407:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31511:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31514:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31504:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31504:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31504:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31535:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31538:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31528:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31528:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31528:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "31369:180:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approved query for none\")\n\n        mstore(add(memPtr, 32), \"xistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approval to current own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner index out of boun\")\n\n        mstore(add(memPtr, 32), \"ds\")\n\n    }\n\n    function abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to get token of \")\n\n        mstore(add(memPtr, 32), \"owner by index\")\n\n    }\n\n    function abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: global index out of bou\")\n\n        mstore(add(memPtr, 32), \"nds\")\n\n    }\n\n    function abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to non ERC721R\")\n\n        mstore(add(memPtr, 32), \"eceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer from incorrect\")\n\n        mstore(add(memPtr, 32), \" owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function checked_sub_t_uint128(x, y) -> diff {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: owner query for nonexis\")\n\n        mstore(add(memPtr, 32), \"tent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721A: unable to determine the\")\n\n        mstore(add(memPtr, 32), \" owner of token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 5518
									},
									{
										"length": 32,
										"start": 5559
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb465146102de578063b88d4fde146102fa578063c87b56dd14610316578063d7224ba014610346578063e985e9c5146103645761010b565b80634f6ccce7146102305780636352211e1461026057806370a082311461029057806395d89b41146102c05761010b565b806318160ddd116100de57806318160ddd146101aa57806323b872dd146101c85780632f745c59146101e457806342842e0e146102145761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b10565b610394565b6040516101379190611b58565b60405180910390f35b6101486104de565b6040516101559190611c03565b60405180910390f35b61017860048036038101906101739190611c5b565b610570565b6040516101859190611cc9565b60405180910390f35b6101a860048036038101906101a39190611d10565b6105f5565b005b6101b261070d565b6040516101bf9190611d5f565b60405180910390f35b6101e260048036038101906101dd9190611d7a565b610723565b005b6101fe60048036038101906101f99190611d10565b610733565b60405161020b9190611d5f565b60405180910390f35b61022e60048036038101906102299190611d7a565b610932565b005b61024a60048036038101906102459190611c5b565b610952565b6040516102579190611d5f565b60405180910390f35b61027a60048036038101906102759190611c5b565b6109a5565b6040516102879190611cc9565b60405180910390f35b6102aa60048036038101906102a59190611dcd565b6109bb565b6040516102b79190611d5f565b60405180910390f35b6102c8610aa3565b6040516102d59190611c03565b60405180910390f35b6102f860048036038101906102f39190611e26565b610b35565b005b610314600480360381019061030f9190611f9b565b610cb5565b005b610330600480360381019061032b9190611c5b565b610d11565b60405161033d9190611c03565b60405180910390f35b61034e610db8565b60405161035b9190611d5f565b60405180910390f35b61037e6004803603810190610379919061201e565b610dbe565b60405161038b9190611b58565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c757507f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d757506104d682610e52565b5b9050919050565b6060600180546104ed9061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546105199061208d565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905090565b600061057b82610ebc565b6105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190612130565b60405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610600826109a5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610670576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610667906121c2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661068f610ec9565b73ffffffffffffffffffffffffffffffffffffffff1614806106be57506106bd816106b8610ec9565b610dbe565b5b6106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490612254565b60405180910390fd5b610708838383610ed1565b505050565b6000600160005461071e91906122a3565b905090565b61072e838383610f83565b505050565b600061073e836109bb565b821061077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690612349565b60405180910390fd5b600061078961070d565b90506000806000600190505b8381116108f0576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461088657806000015192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108dc578684036108cd57819550505050505061092c565b83806108d890612369565b9450505b5080806108e890612369565b915050610795565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390612423565b60405180910390fd5b92915050565b61094d83838360405180602001604052806000815250610cb5565b505050565b600061095c61070d565b821061099d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610994906124b5565b60405180910390fd5b819050919050565b60006109b08261153a565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290612547565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050919050565b606060028054610ab29061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ade9061208d565b8015610b2b5780601f10610b0057610100808354040283529160200191610b2b565b820191906000526020600020905b815481529060010190602001808311610b0e57829003601f168201915b5050505050905090565b610b3d610ec9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba1906125b3565b60405180910390fd5b8060066000610bb7610ec9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c64610ec9565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca99190611b58565b60405180910390a35050565b610cc0848484610f83565b610ccc8484848461173d565b610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0290612645565b60405180910390fd5b50505050565b6060610d1c82610ebc565b610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d52906126d7565b60405180910390fd5b6000610d656118c4565b90506000815111610d855760405180602001604052806000815250610db0565b80610d8f846118db565b604051602001610da0929190612733565b6040516020818303038152906040525b915050919050565b60075481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000805482109050919050565b600033905090565b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610f8e8261153a565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff16610fb5610ec9565b73ffffffffffffffffffffffffffffffffffffffff1614806110115750610fda610ec9565b73ffffffffffffffffffffffffffffffffffffffff16610ff984610570565b73ffffffffffffffffffffffffffffffffffffffff16145b8061102d575061102c8260000151611027610ec9565b610dbe565b5b90508061106f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611066906127c9565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16146110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d89061285b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611150576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611147906128ed565b60405180910390fd5b61115d8585856001611a3b565b61116d6000848460000151610ed1565b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff166111db9190612929565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661127f919061296d565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff168152506003600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050600060018461138591906129b1565b9050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114ca576113fa81610ebc565b156114c9576040518060400160405280846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015167ffffffffffffffff168152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050505b5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115328686866001611a41565b505050505050565b611542611a6a565b61154b82610ebc565b61158a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158190612a57565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000083106115ee5760017f0000000000000000000000000000000000000000000000000000000000000000846115e191906122a3565b6115eb91906129b1565b90505b60008390505b8181106116fc576000600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146116e857809350505050611738565b5080806116f490612a77565b9150506115f4565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90612b12565b60405180910390fd5b919050565b600061175e8473ffffffffffffffffffffffffffffffffffffffff16611a47565b156118b7578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611787610ec9565b8786866040518563ffffffff1660e01b81526004016117a99493929190612b87565b6020604051808303816000875af19250505080156117e557506040513d601f19601f820116820180604052508101906117e29190612be8565b60015b611867573d8060008114611815576040519150601f19603f3d011682016040523d82523d6000602084013e61181a565b606091505b50600081510361185f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185690612645565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506118bc565b600190505b949350505050565b606060405180602001604052806000815250905090565b606060008203611922576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611a36565b600082905060005b6000821461195457808061193d90612369565b915050600a8261194d9190612c44565b915061192a565b60008167ffffffffffffffff8111156119705761196f611e70565b5b6040519080825280601f01601f1916602001820160405280156119a25781602001600182028036833780820191505090505b5090505b60008514611a2f576001826119bb91906122a3565b9150600a856119ca9190612c75565b60306119d691906129b1565b60f81b8183815181106119ec576119eb612ca6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611a289190612c44565b94506119a6565b8093505050505b919050565b50505050565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611aed81611ab8565b8114611af857600080fd5b50565b600081359050611b0a81611ae4565b92915050565b600060208284031215611b2657611b25611aae565b5b6000611b3484828501611afb565b91505092915050565b60008115159050919050565b611b5281611b3d565b82525050565b6000602082019050611b6d6000830184611b49565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bad578082015181840152602081019050611b92565b60008484015250505050565b6000601f19601f8301169050919050565b6000611bd582611b73565b611bdf8185611b7e565b9350611bef818560208601611b8f565b611bf881611bb9565b840191505092915050565b60006020820190508181036000830152611c1d8184611bca565b905092915050565b6000819050919050565b611c3881611c25565b8114611c4357600080fd5b50565b600081359050611c5581611c2f565b92915050565b600060208284031215611c7157611c70611aae565b5b6000611c7f84828501611c46565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cb382611c88565b9050919050565b611cc381611ca8565b82525050565b6000602082019050611cde6000830184611cba565b92915050565b611ced81611ca8565b8114611cf857600080fd5b50565b600081359050611d0a81611ce4565b92915050565b60008060408385031215611d2757611d26611aae565b5b6000611d3585828601611cfb565b9250506020611d4685828601611c46565b9150509250929050565b611d5981611c25565b82525050565b6000602082019050611d746000830184611d50565b92915050565b600080600060608486031215611d9357611d92611aae565b5b6000611da186828701611cfb565b9350506020611db286828701611cfb565b9250506040611dc386828701611c46565b9150509250925092565b600060208284031215611de357611de2611aae565b5b6000611df184828501611cfb565b91505092915050565b611e0381611b3d565b8114611e0e57600080fd5b50565b600081359050611e2081611dfa565b92915050565b60008060408385031215611e3d57611e3c611aae565b5b6000611e4b85828601611cfb565b9250506020611e5c85828601611e11565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ea882611bb9565b810181811067ffffffffffffffff82111715611ec757611ec6611e70565b5b80604052505050565b6000611eda611aa4565b9050611ee68282611e9f565b919050565b600067ffffffffffffffff821115611f0657611f05611e70565b5b611f0f82611bb9565b9050602081019050919050565b82818337600083830152505050565b6000611f3e611f3984611eeb565b611ed0565b905082815260208101848484011115611f5a57611f59611e6b565b5b611f65848285611f1c565b509392505050565b600082601f830112611f8257611f81611e66565b5b8135611f92848260208601611f2b565b91505092915050565b60008060008060808587031215611fb557611fb4611aae565b5b6000611fc387828801611cfb565b9450506020611fd487828801611cfb565b9350506040611fe587828801611c46565b925050606085013567ffffffffffffffff81111561200657612005611ab3565b5b61201287828801611f6d565b91505092959194509250565b6000806040838503121561203557612034611aae565b5b600061204385828601611cfb565b925050602061205485828601611cfb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120a557607f821691505b6020821081036120b8576120b761205e565b5b50919050565b7f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560008201527f78697374656e7420746f6b656e00000000000000000000000000000000000000602082015250565b600061211a602d83611b7e565b9150612125826120be565b604082019050919050565b600060208201905081810360008301526121498161210d565b9050919050565b7f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006121ac602283611b7e565b91506121b782612150565b604082019050919050565b600060208201905081810360008301526121db8161219f565b9050919050565b7f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f76656420666f7220616c6c00000000000000602082015250565b600061223e603983611b7e565b9150612249826121e2565b604082019050919050565b6000602082019050818103600083015261226d81612231565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122ae82611c25565b91506122b983611c25565b92508282039050818111156122d1576122d0612274565b5b92915050565b7f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612333602283611b7e565b915061233e826122d7565b604082019050919050565b6000602082019050818103600083015261236281612326565b9050919050565b600061237482611c25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123a6576123a5612274565b5b600182019050919050565b7f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060008201527f6f776e657220627920696e646578000000000000000000000000000000000000602082015250565b600061240d602e83611b7e565b9150612418826123b1565b604082019050919050565b6000602082019050818103600083015261243c81612400565b9050919050565b7f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560008201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b600061249f602383611b7e565b91506124aa82612443565b604082019050919050565b600060208201905081810360008301526124ce81612492565b9050919050565b7f455243373231413a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000612531602b83611b7e565b915061253c826124d5565b604082019050919050565b6000602082019050818103600083015261256081612524565b9050919050565b7f455243373231413a20617070726f766520746f2063616c6c6572000000000000600082015250565b600061259d601a83611b7e565b91506125a882612567565b602082019050919050565b600060208201905081810360008301526125cc81612590565b9050919050565b7f455243373231413a207472616e7366657220746f206e6f6e204552433732315260008201527f6563656976657220696d706c656d656e74657200000000000000000000000000602082015250565b600061262f603383611b7e565b915061263a826125d3565b604082019050919050565b6000602082019050818103600083015261265e81612622565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b60006126c1602f83611b7e565b91506126cc82612665565b604082019050919050565b600060208201905081810360008301526126f0816126b4565b9050919050565b600081905092915050565b600061270d82611b73565b61271781856126f7565b9350612727818560208601611b8f565b80840191505092915050565b600061273f8285612702565b915061274b8284612702565b91508190509392505050565b7f455243373231413a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b60006127b3603283611b7e565b91506127be82612757565b604082019050919050565b600060208201905081810360008301526127e2816127a6565b9050919050565b7f455243373231413a207472616e736665722066726f6d20696e636f727265637460008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b6000612845602683611b7e565b9150612850826127e9565b604082019050919050565b6000602082019050818103600083015261287481612838565b9050919050565b7f455243373231413a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006128d7602583611b7e565b91506128e28261287b565b604082019050919050565b60006020820190508181036000830152612906816128ca565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b60006129348261290d565b915061293f8361290d565b925082820390506fffffffffffffffffffffffffffffffff81111561296757612966612274565b5b92915050565b60006129788261290d565b91506129838361290d565b925082820190506fffffffffffffffffffffffffffffffff8111156129ab576129aa612274565b5b92915050565b60006129bc82611c25565b91506129c783611c25565b92508282019050808211156129df576129de612274565b5b92915050565b7f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360008201527f74656e7420746f6b656e00000000000000000000000000000000000000000000602082015250565b6000612a41602a83611b7e565b9150612a4c826129e5565b604082019050919050565b60006020820190508181036000830152612a7081612a34565b9050919050565b6000612a8282611c25565b915060008203612a9557612a94612274565b5b600182039050919050565b7f455243373231413a20756e61626c6520746f2064657465726d696e652074686560008201527f206f776e6572206f6620746f6b656e0000000000000000000000000000000000602082015250565b6000612afc602f83611b7e565b9150612b0782612aa0565b604082019050919050565b60006020820190508181036000830152612b2b81612aef565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612b5982612b32565b612b638185612b3d565b9350612b73818560208601611b8f565b612b7c81611bb9565b840191505092915050565b6000608082019050612b9c6000830187611cba565b612ba96020830186611cba565b612bb66040830185611d50565b8181036060830152612bc88184612b4e565b905095945050505050565b600081519050612be281611ae4565b92915050565b600060208284031215612bfe57612bfd611aae565b5b6000612c0c84828501612bd3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c4f82611c25565b9150612c5a83611c25565b925082612c6a57612c69612c15565b5b828204905092915050565b6000612c8082611c25565b9150612c8b83611c25565b925082612c9b57612c9a612c15565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212206ed07b44d9afa73dbd5f77018d634a0194aa5ac40977c82de73b33012a88732d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD7224BA0 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x364 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C0 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x214 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4D7 JUMPI POP PUSH2 0x4D6 DUP3 PUSH2 0xE52 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x566 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x53B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x566 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x549 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP1 PUSH2 0x2130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x600 DUP3 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x68F PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6BE JUMPI POP PUSH2 0x6BD DUP2 PUSH2 0x6B8 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP4 DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x72E DUP4 DUP4 DUP4 PUSH2 0xF83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E DUP4 PUSH2 0x9BB JUMP JUMPDEST DUP3 LT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x789 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x8F0 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x886 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP3 POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DC JUMPI DUP7 DUP5 SUB PUSH2 0x8CD JUMPI DUP2 SWAP6 POP POP POP POP POP POP PUSH2 0x92C JUMP JUMPDEST DUP4 DUP1 PUSH2 0x8D8 SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x8E8 SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x795 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x2423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95C PUSH2 0x70D JUMP JUMPDEST DUP3 LT PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x994 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B0 DUP3 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xAB2 SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADE SWAP1 PUSH2 0x208D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0xBB7 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC64 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC0 DUP5 DUP5 DUP5 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xCCC DUP5 DUP5 DUP5 DUP5 PUSH2 0x173D JUMP JUMPDEST PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD1C DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD52 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDB0 JUMP JUMPDEST DUP1 PUSH2 0xD8F DUP5 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDA0 SWAP3 SWAP2 SWAP1 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFB5 PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1011 JUMPI POP PUSH2 0xFDA PUSH2 0xEC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF9 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x102D JUMPI POP PUSH2 0x102C DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x1027 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP1 PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D8 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1147 SWAP1 PUSH2 0x28ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115D DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x116D PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DB SWAP2 SWAP1 PUSH2 0x2929 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x296D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1385 SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14CA JUMPI PUSH2 0x13FA DUP2 PUSH2 0xEBC JUMP JUMPDEST ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1532 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1A41 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1542 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x154B DUP3 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP4 LT PUSH2 0x15EE JUMPI PUSH1 0x1 PUSH32 0x0 DUP5 PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP2 DUP2 LT PUSH2 0x16FC JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E8 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x1738 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x16F4 SWAP1 PUSH2 0x2A77 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172F SWAP1 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A47 JUMP JUMPDEST ISZERO PUSH2 0x18B7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1787 PUSH2 0xEC9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17E5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17E2 SWAP2 SWAP1 PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1867 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1815 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x185F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1856 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1954 JUMPI DUP1 DUP1 PUSH2 0x193D SWAP1 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x194D SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x192A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1A2F JUMPI PUSH1 0x1 DUP3 PUSH2 0x19BB SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x19CA SWAP2 SWAP1 PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x2CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP5 POP PUSH2 0x19A6 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AED DUP2 PUSH2 0x1AB8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B0A DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B34 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B52 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x1BDF DUP2 DUP6 PUSH2 0x1B7E JUMP JUMPDEST SWAP4 POP PUSH2 0x1BEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1BF8 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 DUP5 PUSH2 0x1BCA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C38 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C55 DUP2 PUSH2 0x1C2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C71 JUMPI PUSH2 0x1C70 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7F DUP5 DUP3 DUP6 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 DUP3 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC3 DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CED DUP2 PUSH2 0x1CA8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0A DUP2 PUSH2 0x1CE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D35 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D46 DUP6 DUP3 DUP7 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH2 0x1D92 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA1 DUP7 DUP3 DUP8 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DB2 DUP7 DUP3 DUP8 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1DC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF1 DUP5 DUP3 DUP6 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E03 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E20 DUP2 PUSH2 0x1DFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3C PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E4B DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5C DUP6 DUP3 DUP7 ADD PUSH2 0x1E11 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EA8 DUP3 PUSH2 0x1BB9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EC7 JUMPI PUSH2 0x1EC6 PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDA PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE6 DUP3 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1E70 JUMP JUMPDEST JUMPDEST PUSH2 0x1F0F DUP3 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH2 0x1F39 DUP5 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x1ED0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1E6B JUMP JUMPDEST JUMPDEST PUSH2 0x1F65 DUP5 DUP3 DUP6 PUSH2 0x1F1C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F82 JUMPI PUSH2 0x1F81 PUSH2 0x1E66 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F92 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1FB4 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP8 DUP3 DUP9 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP8 DUP3 DUP9 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1FE5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x1AB3 JUMP JUMPDEST JUMPDEST PUSH2 0x2012 DUP8 DUP3 DUP9 ADD PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2054 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x205E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x78697374656E7420746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211A PUSH1 0x2D DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2125 DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AC PUSH1 0x22 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x21B7 DUP3 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21DB DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223E PUSH1 0x39 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2249 DUP3 PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226D DUP2 PUSH2 0x2231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B9 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2333 PUSH1 0x22 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x233E DUP3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2362 DUP2 PUSH2 0x2326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E657220627920696E646578000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240D PUSH1 0x2E DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2418 DUP3 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243C DUP2 PUSH2 0x2400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E64730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249F PUSH1 0x23 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x24AA DUP3 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CE DUP2 PUSH2 0x2492 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 PUSH1 0x2B DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x253C DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2560 DUP2 PUSH2 0x2524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259D PUSH1 0x1A DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x25A8 DUP3 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CC DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563656976657220696D706C656D656E74657200000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262F PUSH1 0x33 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x263A DUP3 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x265E DUP2 PUSH2 0x2622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C1 PUSH1 0x2F DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x26CC DUP3 PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F0 DUP2 PUSH2 0x26B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270D DUP3 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x2717 DUP2 DUP6 PUSH2 0x26F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2727 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP3 DUP6 PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP PUSH2 0x274B DUP3 DUP5 PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B3 PUSH1 0x32 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x27BE DUP3 PUSH2 0x2757 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E2 DUP2 PUSH2 0x27A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2845 PUSH1 0x26 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2850 DUP3 PUSH2 0x27E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2874 DUP2 PUSH2 0x2838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D7 PUSH1 0x25 DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E2 DUP3 PUSH2 0x287B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2906 DUP2 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2934 DUP3 PUSH2 0x290D JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP4 PUSH2 0x290D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2967 JUMPI PUSH2 0x2966 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 DUP3 PUSH2 0x290D JUMP JUMPDEST SWAP2 POP PUSH2 0x2983 DUP4 PUSH2 0x290D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29AB JUMPI PUSH2 0x29AA PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BC DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C7 DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2274 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74656E7420746F6B656E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A41 PUSH1 0x2A DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4C DUP3 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A70 DUP2 PUSH2 0x2A34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A82 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2A95 JUMPI PUSH2 0x2A94 PUSH2 0x2274 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243373231413A20756E61626C6520746F2064657465726D696E6520746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F776E6572206F6620746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFC PUSH1 0x2F DUP4 PUSH2 0x1B7E JUMP JUMPDEST SWAP2 POP PUSH2 0x2B07 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B2B DUP2 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B59 DUP3 PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x2B63 DUP2 DUP6 PUSH2 0x2B3D JUMP JUMPDEST SWAP4 POP PUSH2 0x2B73 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x1BB9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B9C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x2BA9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x2BB6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2BC8 DUP2 DUP5 PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BE2 DUP2 PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFE JUMPI PUSH2 0x2BFD PUSH2 0x1AAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0C DUP5 DUP3 DUP6 ADD PUSH2 0x2BD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4F DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5A DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C6A JUMPI PUSH2 0x2C69 PUSH2 0x2C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C80 DUP3 PUSH2 0x1C25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C8B DUP4 PUSH2 0x1C25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C9B JUMPI PUSH2 0x2C9A PUSH2 0x2C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xD07B44D9AFA73DBD5F77018D634A01 SWAP5 0xAA GAS 0xC4 MULMOD PUSH24 0xC82DE73B33012A88732D64736F6C63430008110033000000 ",
							"sourceMap": "1728:15117:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4937:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6601:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8066:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7644:369;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3499:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8884:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4139:739;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9078:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3681:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6431:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5346:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6749:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8325:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9287:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6903:377;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13584:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8652:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4937:358;5059:4;5101:25;5086:40;;;:11;:40;;;;:98;;;;5151:33;5136:48;;;:11;:48;;;;5086:98;:158;;;;5209:35;5194:50;;;:11;:50;;;;5086:158;:204;;;;5254:36;5278:11;5254:23;:36::i;:::-;5086:204;5073:217;;4937:358;;;:::o;6601:92::-;6655:13;6683:5;6676:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:92;:::o;8066:200::-;8134:7;8157:16;8165:7;8157;:16::i;:::-;8149:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:15;:24;8253:7;8237:24;;;;;;;;;;;;;;;;;;;;;8230:31;;8066:200;;;:::o;7644:369::-;7712:13;7728:24;7744:7;7728:15;:24::i;:::-;7712:40;;7772:5;7766:11;;:2;:11;;;7758:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7854:5;7838:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;7863:37;7880:5;7887:12;:10;:12::i;:::-;7863:16;:37::i;:::-;7838:62;7823:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:28;7989:2;7993:7;8002:5;7980:8;:28::i;:::-;7706:307;7644:369;;:::o;3499:118::-;3552:7;3589:1;3574:12;;:16;;;;:::i;:::-;3567:23;;3499:118;:::o;8884:136::-;8987:28;8997:4;9003:2;9007:7;8987:9;:28::i;:::-;8884:136;;;:::o;4139:739::-;4244:7;4277:16;4287:5;4277:9;:16::i;:::-;4269:5;:24;4261:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4338:22;4363:13;:11;:13::i;:::-;4338:38;;4382:19;4411:25;4460:9;4472:1;4460:13;;4455:357;4480:14;4475:1;:19;4455:357;;4526:31;4560:11;:14;4572:1;4560:14;;;;;;;;;;;4526:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4612:1;4586:28;;:9;:14;;;:28;;;4582:87;;4646:9;:14;;;4626:34;;4582:87;4701:5;4680:26;;:17;:26;;;4676:130;;4737:5;4722:11;:20;4718:57;;4763:1;4756:8;;;;;;;;;4718:57;4784:13;;;;;:::i;:::-;;;;4676:130;4501:311;4496:3;;;;;:::i;:::-;;;;4455:357;;;;4817:56;;;;;;;;;;:::i;:::-;;;;;;;;4139:739;;;;;:::o;9078:151::-;9185:39;9202:4;9208:2;9212:7;9185:39;;;;;;;;;;;;:16;:39::i;:::-;9078:151;;;:::o;3681:174::-;3748:7;3779:13;:11;:13::i;:::-;3771:5;:21;3763:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3845:5;3838:12;;3681:174;;;:::o;6431:116::-;6495:7;6517:20;6529:7;6517:11;:20::i;:::-;:25;;;6510:32;;6431:116;;;:::o;5346:208::-;5410:7;5450:1;5433:19;;:5;:19;;;5425:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5521:12;:19;5534:5;5521:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;5513:36;;5506:43;;5346:208;;;:::o;6749:96::-;6805:13;6833:7;6826:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6749:96;:::o;8325:269::-;8427:12;:10;:12::i;:::-;8415:24;;:8;:24;;;8407:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8522:8;8477:18;:32;8496:12;:10;:12::i;:::-;8477:32;;;;;;;;;;;;;;;:42;8510:8;8477:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;8570:8;8541:48;;8556:12;:10;:12::i;:::-;8541:48;;;8580:8;8541:48;;;;;;:::i;:::-;;;;;;;;8325:269;;:::o;9287:300::-;9418:28;9428:4;9434:2;9438:7;9418:9;:28::i;:::-;9467:48;9490:4;9496:2;9500:7;9509:5;9467:22;:48::i;:::-;9452:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;9287:300;;;;:::o;6903:377::-;6996:13;7034:16;7042:7;7034;:16::i;:::-;7019:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;7120:21;7144:10;:8;:10::i;:::-;7120:34;;7197:1;7179:7;7173:21;:25;:102;;;;;;;;;;;;;;;;;7233:7;7242:18;:7;:16;:18::i;:::-;7216:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7173:102;7160:115;;;6903:377;;;:::o;13584:43::-;;;;:::o;8652:178::-;8769:4;8790:18;:25;8809:5;8790:25;;;;;;;;;;;;;;;:35;8816:8;8790:35;;;;;;;;;;;;;;;;;;;;;;;;;8783:42;;8652:178;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;9817:103:9:-;9874:4;9903:12;;9893:7;:22;9886:29;;9817:103;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;13415:165:9:-;13534:2;13507:15;:24;13523:7;13507:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;13567:7;13563:2;13547:28;;13556:5;13547:28;;;;;;;;;;;;13415:165;;;:::o;11832:1484::-;11924:35;11962:20;11974:7;11962:11;:20::i;:::-;11924:58;;11989:22;12031:13;:18;;;12015:34;;:12;:10;:12::i;:::-;:34;;;:80;;;;12083:12;:10;:12::i;:::-;12059:36;;:20;12071:7;12059:11;:20::i;:::-;:36;;;12015:80;:140;;;;12105:50;12122:13;:18;;;12142:12;:10;:12::i;:::-;12105:16;:50::i;:::-;12015:140;11989:167;;12178:17;12163:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;12305:4;12283:26;;:13;:18;;;:26;;;12268:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;12391:1;12377:16;;:2;:16;;;12369:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;12442:43;12464:4;12470:2;12474:7;12483:1;12442:21;:43::i;:::-;12539:49;12556:1;12560:7;12569:13;:18;;;12539:8;:49::i;:::-;12625:1;12595:12;:18;12608:4;12595:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12660:1;12632:12;:16;12645:2;12632:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12690:43;;;;;;;;12705:2;12690:43;;;;;;12716:15;12690:43;;;;;12667:11;:20;12679:7;12667:20;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12957:19;12989:1;12979:7;:11;;;;:::i;:::-;12957:33;;13041:1;13000:43;;:11;:24;13012:11;13000:24;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;12996:229;;13057:20;13065:11;13057:7;:20::i;:::-;13053:166;;;13116:94;;;;;;;;13142:13;:18;;;13116:94;;;;;;13172:13;:28;;;13116:94;;;;;13089:11;:24;13101:11;13089:24;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13053:166;12996:229;13255:7;13251:2;13236:27;;13245:4;13236:27;;;;;;;;;;;;13269:42;13290:4;13296:2;13300:7;13309:1;13269:20;:42::i;:::-;11918:1398;;;11832:1484;;;:::o;5796:586::-;5869:21;;:::i;:::-;5908:16;5916:7;5908;:16::i;:::-;5900:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5978:26;6025:12;6014:7;:23;6010:91;;6093:1;6078:12;6068:7;:22;;;;:::i;:::-;:26;;;;:::i;:::-;6047:47;;6010:91;6112:12;6127:7;6112:22;;6107:207;6144:18;6136:4;:26;6107:207;;6180:31;6214:11;:17;6226:4;6214:17;;;;;;;;;;;6180:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6269:1;6243:28;;:9;:14;;;:28;;;6239:69;;6290:9;6283:16;;;;;;;6239:69;6172:142;6164:6;;;;;:::i;:::-;;;;6107:207;;;;6320:57;;;;;;;;;;:::i;:::-;;;;;;;;5796:586;;;;:::o;15085:667::-;15217:4;15233:15;:2;:13;;;:15::i;:::-;15229:519;;;15286:2;15270:36;;;15307:12;:10;:12::i;:::-;15321:4;15327:7;15336:5;15270:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15258:452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15514:1;15497:6;:13;:18;15493:209;;15529:61;;;;;;;;;;:::i;:::-;;;;;;;;15493:209;15672:6;15666:13;15657:6;15653:2;15649:15;15642:38;15258:452;15400:45;;;15390:55;;;:6;:55;;;;15383:62;;;;;15229:519;15737:4;15730:11;;15085:667;;;;;;;:::o;7509:86::-;7560:13;7581:9;;;;;;;;;;;;;;7509:86;:::o;328:703:6:-;384:13;610:1;601:5;:10;597:51;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;16200:136:9:-;;;;;:::o;16708:135::-;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:232::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:15;11187:2;11179:6;11175:15;11168:40;10983:232;:::o;11221:366::-;11363:3;11384:67;11448:2;11443:3;11384:67;:::i;:::-;11377:74;;11460:93;11549:3;11460:93;:::i;:::-;11578:2;11573:3;11569:12;11562:19;;11221:366;;;:::o;11593:419::-;11759:4;11797:2;11786:9;11782:18;11774:26;;11846:9;11840:4;11836:20;11832:1;11821:9;11817:17;11810:47;11874:131;12000:4;11874:131;:::i;:::-;11866:139;;11593:419;;;:::o;12018:221::-;12158:34;12154:1;12146:6;12142:14;12135:58;12227:4;12222:2;12214:6;12210:15;12203:29;12018:221;:::o;12245:366::-;12387:3;12408:67;12472:2;12467:3;12408:67;:::i;:::-;12401:74;;12484:93;12573:3;12484:93;:::i;:::-;12602:2;12597:3;12593:12;12586:19;;12245:366;;;:::o;12617:419::-;12783:4;12821:2;12810:9;12806:18;12798:26;;12870:9;12864:4;12860:20;12856:1;12845:9;12841:17;12834:47;12898:131;13024:4;12898:131;:::i;:::-;12890:139;;12617:419;;;:::o;13042:244::-;13182:34;13178:1;13170:6;13166:14;13159:58;13251:27;13246:2;13238:6;13234:15;13227:52;13042:244;:::o;13292:366::-;13434:3;13455:67;13519:2;13514:3;13455:67;:::i;:::-;13448:74;;13531:93;13620:3;13531:93;:::i;:::-;13649:2;13644:3;13640:12;13633:19;;13292:366;;;:::o;13664:419::-;13830:4;13868:2;13857:9;13853:18;13845:26;;13917:9;13911:4;13907:20;13903:1;13892:9;13888:17;13881:47;13945:131;14071:4;13945:131;:::i;:::-;13937:139;;13664:419;;;:::o;14089:180::-;14137:77;14134:1;14127:88;14234:4;14231:1;14224:15;14258:4;14255:1;14248:15;14275:194;14315:4;14335:20;14353:1;14335:20;:::i;:::-;14330:25;;14369:20;14387:1;14369:20;:::i;:::-;14364:25;;14413:1;14410;14406:9;14398:17;;14437:1;14431:4;14428:11;14425:37;;;14442:18;;:::i;:::-;14425:37;14275:194;;;;:::o;14475:221::-;14615:34;14611:1;14603:6;14599:14;14592:58;14684:4;14679:2;14671:6;14667:15;14660:29;14475:221;:::o;14702:366::-;14844:3;14865:67;14929:2;14924:3;14865:67;:::i;:::-;14858:74;;14941:93;15030:3;14941:93;:::i;:::-;15059:2;15054:3;15050:12;15043:19;;14702:366;;;:::o;15074:419::-;15240:4;15278:2;15267:9;15263:18;15255:26;;15327:9;15321:4;15317:20;15313:1;15302:9;15298:17;15291:47;15355:131;15481:4;15355:131;:::i;:::-;15347:139;;15074:419;;;:::o;15499:233::-;15538:3;15561:24;15579:5;15561:24;:::i;:::-;15552:33;;15607:66;15600:5;15597:77;15594:103;;15677:18;;:::i;:::-;15594:103;15724:1;15717:5;15713:13;15706:20;;15499:233;;;:::o;15738:::-;15878:34;15874:1;15866:6;15862:14;15855:58;15947:16;15942:2;15934:6;15930:15;15923:41;15738:233;:::o;15977:366::-;16119:3;16140:67;16204:2;16199:3;16140:67;:::i;:::-;16133:74;;16216:93;16305:3;16216:93;:::i;:::-;16334:2;16329:3;16325:12;16318:19;;15977:366;;;:::o;16349:419::-;16515:4;16553:2;16542:9;16538:18;16530:26;;16602:9;16596:4;16592:20;16588:1;16577:9;16573:17;16566:47;16630:131;16756:4;16630:131;:::i;:::-;16622:139;;16349:419;;;:::o;16774:222::-;16914:34;16910:1;16902:6;16898:14;16891:58;16983:5;16978:2;16970:6;16966:15;16959:30;16774:222;:::o;17002:366::-;17144:3;17165:67;17229:2;17224:3;17165:67;:::i;:::-;17158:74;;17241:93;17330:3;17241:93;:::i;:::-;17359:2;17354:3;17350:12;17343:19;;17002:366;;;:::o;17374:419::-;17540:4;17578:2;17567:9;17563:18;17555:26;;17627:9;17621:4;17617:20;17613:1;17602:9;17598:17;17591:47;17655:131;17781:4;17655:131;:::i;:::-;17647:139;;17374:419;;;:::o;17799:230::-;17939:34;17935:1;17927:6;17923:14;17916:58;18008:13;18003:2;17995:6;17991:15;17984:38;17799:230;:::o;18035:366::-;18177:3;18198:67;18262:2;18257:3;18198:67;:::i;:::-;18191:74;;18274:93;18363:3;18274:93;:::i;:::-;18392:2;18387:3;18383:12;18376:19;;18035:366;;;:::o;18407:419::-;18573:4;18611:2;18600:9;18596:18;18588:26;;18660:9;18654:4;18650:20;18646:1;18635:9;18631:17;18624:47;18688:131;18814:4;18688:131;:::i;:::-;18680:139;;18407:419;;;:::o;18832:176::-;18972:28;18968:1;18960:6;18956:14;18949:52;18832:176;:::o;19014:366::-;19156:3;19177:67;19241:2;19236:3;19177:67;:::i;:::-;19170:74;;19253:93;19342:3;19253:93;:::i;:::-;19371:2;19366:3;19362:12;19355:19;;19014:366;;;:::o;19386:419::-;19552:4;19590:2;19579:9;19575:18;19567:26;;19639:9;19633:4;19629:20;19625:1;19614:9;19610:17;19603:47;19667:131;19793:4;19667:131;:::i;:::-;19659:139;;19386:419;;;:::o;19811:238::-;19951:34;19947:1;19939:6;19935:14;19928:58;20020:21;20015:2;20007:6;20003:15;19996:46;19811:238;:::o;20055:366::-;20197:3;20218:67;20282:2;20277:3;20218:67;:::i;:::-;20211:74;;20294:93;20383:3;20294:93;:::i;:::-;20412:2;20407:3;20403:12;20396:19;;20055:366;;;:::o;20427:419::-;20593:4;20631:2;20620:9;20616:18;20608:26;;20680:9;20674:4;20670:20;20666:1;20655:9;20651:17;20644:47;20708:131;20834:4;20708:131;:::i;:::-;20700:139;;20427:419;;;:::o;20852:234::-;20992:34;20988:1;20980:6;20976:14;20969:58;21061:17;21056:2;21048:6;21044:15;21037:42;20852:234;:::o;21092:366::-;21234:3;21255:67;21319:2;21314:3;21255:67;:::i;:::-;21248:74;;21331:93;21420:3;21331:93;:::i;:::-;21449:2;21444:3;21440:12;21433:19;;21092:366;;;:::o;21464:419::-;21630:4;21668:2;21657:9;21653:18;21645:26;;21717:9;21711:4;21707:20;21703:1;21692:9;21688:17;21681:47;21745:131;21871:4;21745:131;:::i;:::-;21737:139;;21464:419;;;:::o;21889:148::-;21991:11;22028:3;22013:18;;21889:148;;;;:::o;22043:390::-;22149:3;22177:39;22210:5;22177:39;:::i;:::-;22232:89;22314:6;22309:3;22232:89;:::i;:::-;22225:96;;22330:65;22388:6;22383:3;22376:4;22369:5;22365:16;22330:65;:::i;:::-;22420:6;22415:3;22411:16;22404:23;;22153:280;22043:390;;;;:::o;22439:435::-;22619:3;22641:95;22732:3;22723:6;22641:95;:::i;:::-;22634:102;;22753:95;22844:3;22835:6;22753:95;:::i;:::-;22746:102;;22865:3;22858:10;;22439:435;;;;;:::o;22880:237::-;23020:34;23016:1;23008:6;23004:14;22997:58;23089:20;23084:2;23076:6;23072:15;23065:45;22880:237;:::o;23123:366::-;23265:3;23286:67;23350:2;23345:3;23286:67;:::i;:::-;23279:74;;23362:93;23451:3;23362:93;:::i;:::-;23480:2;23475:3;23471:12;23464:19;;23123:366;;;:::o;23495:419::-;23661:4;23699:2;23688:9;23684:18;23676:26;;23748:9;23742:4;23738:20;23734:1;23723:9;23719:17;23712:47;23776:131;23902:4;23776:131;:::i;:::-;23768:139;;23495:419;;;:::o;23920:225::-;24060:34;24056:1;24048:6;24044:14;24037:58;24129:8;24124:2;24116:6;24112:15;24105:33;23920:225;:::o;24151:366::-;24293:3;24314:67;24378:2;24373:3;24314:67;:::i;:::-;24307:74;;24390:93;24479:3;24390:93;:::i;:::-;24508:2;24503:3;24499:12;24492:19;;24151:366;;;:::o;24523:419::-;24689:4;24727:2;24716:9;24712:18;24704:26;;24776:9;24770:4;24766:20;24762:1;24751:9;24747:17;24740:47;24804:131;24930:4;24804:131;:::i;:::-;24796:139;;24523:419;;;:::o;24948:224::-;25088:34;25084:1;25076:6;25072:14;25065:58;25157:7;25152:2;25144:6;25140:15;25133:32;24948:224;:::o;25178:366::-;25320:3;25341:67;25405:2;25400:3;25341:67;:::i;:::-;25334:74;;25417:93;25506:3;25417:93;:::i;:::-;25535:2;25530:3;25526:12;25519:19;;25178:366;;;:::o;25550:419::-;25716:4;25754:2;25743:9;25739:18;25731:26;;25803:9;25797:4;25793:20;25789:1;25778:9;25774:17;25767:47;25831:131;25957:4;25831:131;:::i;:::-;25823:139;;25550:419;;;:::o;25975:118::-;26012:7;26052:34;26045:5;26041:46;26030:57;;25975:118;;;:::o;26099:227::-;26139:4;26159:20;26177:1;26159:20;:::i;:::-;26154:25;;26193:20;26211:1;26193:20;:::i;:::-;26188:25;;26237:1;26234;26230:9;26222:17;;26261:34;26255:4;26252:44;26249:70;;;26299:18;;:::i;:::-;26249:70;26099:227;;;;:::o;26332:224::-;26372:3;26391:20;26409:1;26391:20;:::i;:::-;26386:25;;26425:20;26443:1;26425:20;:::i;:::-;26420:25;;26468:1;26465;26461:9;26454:16;;26491:34;26486:3;26483:43;26480:69;;;26529:18;;:::i;:::-;26480:69;26332:224;;;;:::o;26562:191::-;26602:3;26621:20;26639:1;26621:20;:::i;:::-;26616:25;;26655:20;26673:1;26655:20;:::i;:::-;26650:25;;26698:1;26695;26691:9;26684:16;;26719:3;26716:1;26713:10;26710:36;;;26726:18;;:::i;:::-;26710:36;26562:191;;;;:::o;26759:229::-;26899:34;26895:1;26887:6;26883:14;26876:58;26968:12;26963:2;26955:6;26951:15;26944:37;26759:229;:::o;26994:366::-;27136:3;27157:67;27221:2;27216:3;27157:67;:::i;:::-;27150:74;;27233:93;27322:3;27233:93;:::i;:::-;27351:2;27346:3;27342:12;27335:19;;26994:366;;;:::o;27366:419::-;27532:4;27570:2;27559:9;27555:18;27547:26;;27619:9;27613:4;27609:20;27605:1;27594:9;27590:17;27583:47;27647:131;27773:4;27647:131;:::i;:::-;27639:139;;27366:419;;;:::o;27791:171::-;27830:3;27853:24;27871:5;27853:24;:::i;:::-;27844:33;;27899:4;27892:5;27889:15;27886:41;;27907:18;;:::i;:::-;27886:41;27954:1;27947:5;27943:13;27936:20;;27791:171;;;:::o;27968:234::-;28108:34;28104:1;28096:6;28092:14;28085:58;28177:17;28172:2;28164:6;28160:15;28153:42;27968:234;:::o;28208:366::-;28350:3;28371:67;28435:2;28430:3;28371:67;:::i;:::-;28364:74;;28447:93;28536:3;28447:93;:::i;:::-;28565:2;28560:3;28556:12;28549:19;;28208:366;;;:::o;28580:419::-;28746:4;28784:2;28773:9;28769:18;28761:26;;28833:9;28827:4;28823:20;28819:1;28808:9;28804:17;28797:47;28861:131;28987:4;28861:131;:::i;:::-;28853:139;;28580:419;;;:::o;29005:98::-;29056:6;29090:5;29084:12;29074:22;;29005:98;;;:::o;29109:168::-;29192:11;29226:6;29221:3;29214:19;29266:4;29261:3;29257:14;29242:29;;29109:168;;;;:::o;29283:373::-;29369:3;29397:38;29429:5;29397:38;:::i;:::-;29451:70;29514:6;29509:3;29451:70;:::i;:::-;29444:77;;29530:65;29588:6;29583:3;29576:4;29569:5;29565:16;29530:65;:::i;:::-;29620:29;29642:6;29620:29;:::i;:::-;29615:3;29611:39;29604:46;;29373:283;29283:373;;;;:::o;29662:640::-;29857:4;29895:3;29884:9;29880:19;29872:27;;29909:71;29977:1;29966:9;29962:17;29953:6;29909:71;:::i;:::-;29990:72;30058:2;30047:9;30043:18;30034:6;29990:72;:::i;:::-;30072;30140:2;30129:9;30125:18;30116:6;30072:72;:::i;:::-;30191:9;30185:4;30181:20;30176:2;30165:9;30161:18;30154:48;30219:76;30290:4;30281:6;30219:76;:::i;:::-;30211:84;;29662:640;;;;;;;:::o;30308:141::-;30364:5;30395:6;30389:13;30380:22;;30411:32;30437:5;30411:32;:::i;:::-;30308:141;;;;:::o;30455:349::-;30524:6;30573:2;30561:9;30552:7;30548:23;30544:32;30541:119;;;30579:79;;:::i;:::-;30541:119;30699:1;30724:63;30779:7;30770:6;30759:9;30755:22;30724:63;:::i;:::-;30714:73;;30670:127;30455:349;;;;:::o;30810:180::-;30858:77;30855:1;30848:88;30955:4;30952:1;30945:15;30979:4;30976:1;30969:15;30996:185;31036:1;31053:20;31071:1;31053:20;:::i;:::-;31048:25;;31087:20;31105:1;31087:20;:::i;:::-;31082:25;;31126:1;31116:35;;31131:18;;:::i;:::-;31116:35;31173:1;31170;31166:9;31161:14;;30996:185;;;;:::o;31187:176::-;31219:1;31236:20;31254:1;31236:20;:::i;:::-;31231:25;;31270:20;31288:1;31270:20;:::i;:::-;31265:25;;31309:1;31299:35;;31314:18;;:::i;:::-;31299:35;31355:1;31352;31348:9;31343:14;;31187:176;;;;:::o;31369:180::-;31417:77;31414:1;31407:88;31514:4;31511:1;31504:15;31538:4;31535:1;31528:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2306200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2991",
								"getApproved(uint256)": "5099",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"nextOwnerToExplicitlySet()": "2517",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "843",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "3258",
								"totalSupply()": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2134",
								"_numberMinted(address)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setOwnersExplicit(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"ownershipOf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2064,
									"end": 2065,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2033,
									"end": 2065,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2033,
									"end": 2065,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 13626,
									"end": 13627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13584,
									"end": 13627,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 13584,
									"end": 13627,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3016,
									"end": 3436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3180,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3161,
									"end": 3176,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3161,
									"end": 3180,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3146,
									"end": 3242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 3146,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3256,
									"end": 3269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3256,
									"end": 3273,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3248,
									"end": 3317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3248,
									"end": 3317,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3331,
									"end": 3336,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3328,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3323,
									"end": 3336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3323,
									"end": 3336,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3352,
									"end": 3359,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3349,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3342,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3380,
									"end": 3393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3431,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3016,
									"end": 3436,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3154,
									"end": 3160,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3168,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3215,
									"end": 3224,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3198,
									"end": 3231,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3234,
									"end": 3313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3375,
									"end": 3376,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3377,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3378,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3397,
									"end": 3403,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3394,
									"end": 3424,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 3427,
									"end": 3506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3589,
									"end": 3595,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3578,
									"end": 3587,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3574,
									"end": 3596,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3532,
									"end": 3606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3325,
									"end": 3616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3676,
									"end": 3678,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3661,
									"end": 3679,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3655,
									"end": 3680,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3707,
									"end": 3725,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3699,
									"end": 3705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3696,
									"end": 3726,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 3729,
									"end": 3808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3900,
									"end": 3907,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3891,
									"end": 3897,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3880,
									"end": 3889,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3876,
									"end": 3898,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3834,
									"end": 3908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3626,
									"end": 3918,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3957,
									"end": 3959,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 4039,
									"end": 4046,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4030,
									"end": 4036,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4019,
									"end": 4028,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3983,
									"end": 4047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3928,
									"end": 4057,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4098,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4178,
									"end": 4185,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4169,
									"end": 4175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4167,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4154,
									"end": 4176,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4122,
									"end": 4186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4067,
									"end": 4196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 4203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4293,
									"end": 4304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4327,
									"end": 4333,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4322,
									"end": 4325,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4315,
									"end": 4334,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4367,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4362,
									"end": 4365,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4358,
									"end": 4372,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4343,
									"end": 4372,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4343,
									"end": 4372,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4384,
									"end": 4617,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4384,
									"end": 4617,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4558,
									"name": "PUSH",
									"source": 10,
									"value": "455243373231413A20636F6C6C656374696F6E206D7573742068617665206120"
								},
								{
									"begin": 4520,
									"end": 4521,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4512,
									"end": 4518,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4508,
									"end": 4522,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4501,
									"end": 4559,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4593,
									"end": 4609,
									"name": "PUSH",
									"source": 10,
									"value": "6E6F6E7A65726F20737570706C79000000000000000000000000000000000000"
								},
								{
									"begin": 4588,
									"end": 4590,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4580,
									"end": 4586,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4576,
									"end": 4591,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4569,
									"end": 4610,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4384,
									"end": 4617,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4384,
									"end": 4617,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4989,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4623,
									"end": 4989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4765,
									"end": 4768,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4786,
									"end": 4853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4850,
									"end": 4852,
									"name": "PUSH",
									"source": 10,
									"value": "2E"
								},
								{
									"begin": 4845,
									"end": 4848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4786,
									"end": 4853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4853,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4786,
									"end": 4853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4779,
									"end": 4853,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4779,
									"end": 4853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4951,
									"end": 4954,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4862,
									"end": 4955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4955,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4862,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4980,
									"end": 4982,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4971,
									"end": 4983,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4964,
									"end": 4983,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4964,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4989,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4989,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4989,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5414,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4995,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5165,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5199,
									"end": 5201,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5188,
									"end": 5197,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 5202,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5176,
									"end": 5202,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5176,
									"end": 5202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5248,
									"end": 5257,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5242,
									"end": 5246,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5258,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5235,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5223,
									"end": 5232,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5219,
									"end": 5236,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5212,
									"end": 5259,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 5407,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 5407,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5276,
									"end": 5407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 5407,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5276,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5268,
									"end": 5407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5268,
									"end": 5407,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5414,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5414,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5414,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 5414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5646,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5420,
									"end": 5646,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5560,
									"end": 5594,
									"name": "PUSH",
									"source": 10,
									"value": "455243373231413A206D61782062617463682073697A65206D75737420626520"
								},
								{
									"begin": 5556,
									"end": 5557,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5548,
									"end": 5554,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5544,
									"end": 5558,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5537,
									"end": 5595,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5629,
									"end": 5638,
									"name": "PUSH",
									"source": 10,
									"value": "6E6F6E7A65726F00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5624,
									"end": 5626,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5616,
									"end": 5622,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5612,
									"end": 5627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5605,
									"end": 5639,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5646,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5420,
									"end": 5646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5652,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5652,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5794,
									"end": 5797,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5815,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5879,
									"end": 5881,
									"name": "PUSH",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 5874,
									"end": 5877,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5815,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5815,
									"end": 5882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5815,
									"end": 5882,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5815,
									"end": 5882,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5808,
									"end": 5882,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5808,
									"end": 5882,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5980,
									"end": 5983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5891,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6009,
									"end": 6011,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6004,
									"end": 6007,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6000,
									"end": 6012,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5993,
									"end": 6012,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5993,
									"end": 6012,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5652,
									"end": 6018,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5652,
									"end": 6018,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5652,
									"end": 6018,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5652,
									"end": 6018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6443,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 6024,
									"end": 6443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6228,
									"end": 6230,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6217,
									"end": 6226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6213,
									"end": 6231,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6205,
									"end": 6231,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6205,
									"end": 6231,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6277,
									"end": 6286,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6271,
									"end": 6275,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6267,
									"end": 6287,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6263,
									"end": 6264,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6252,
									"end": 6261,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6248,
									"end": 6265,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6241,
									"end": 6288,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 6305,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6436,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6305,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6297,
									"end": 6436,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6297,
									"end": 6436,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6443,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6443,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6443,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6024,
									"end": 6443,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6449,
									"end": 6548,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6449,
									"end": 6548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6501,
									"end": 6507,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6535,
									"end": 6540,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6541,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6519,
									"end": 6541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6519,
									"end": 6541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6449,
									"end": 6548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6449,
									"end": 6548,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6449,
									"end": 6548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6449,
									"end": 6548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6734,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 6554,
									"end": 6734,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6602,
									"end": 6679,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6599,
									"end": 6600,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6592,
									"end": 6680,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6699,
									"end": 6703,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 6696,
									"end": 6697,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 6689,
									"end": 6704,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6723,
									"end": 6727,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6713,
									"end": 6728,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 7060,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6740,
									"end": 7060,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6784,
									"end": 6790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6821,
									"end": 6822,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6815,
									"end": 6819,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6811,
									"end": 6823,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6801,
									"end": 6823,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6801,
									"end": 6823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6868,
									"end": 6869,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6862,
									"end": 6866,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6858,
									"end": 6870,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6889,
									"end": 6907,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6879,
									"end": 6960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6879,
									"end": 6960,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6945,
									"end": 6949,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 6937,
									"end": 6943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6933,
									"end": 6950,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6923,
									"end": 6950,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6923,
									"end": 6950,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6879,
									"end": 6960,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6879,
									"end": 6960,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7007,
									"end": 7009,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6999,
									"end": 7005,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6996,
									"end": 7010,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6976,
									"end": 6994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6973,
									"end": 7011,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6970,
									"end": 7054,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6970,
									"end": 7054,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7026,
									"end": 7044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 7026,
									"end": 7044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7026,
									"end": 7044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7026,
									"end": 7044,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 7026,
									"end": 7044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6970,
									"end": 7054,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6970,
									"end": 7054,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6791,
									"end": 7060,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 7060,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 7060,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 7060,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 7060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7207,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7066,
									"end": 7207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7115,
									"end": 7119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7138,
									"end": 7141,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7130,
									"end": 7141,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7130,
									"end": 7141,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7161,
									"end": 7164,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7159,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7151,
									"end": 7165,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7195,
									"end": 7199,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7192,
									"end": 7193,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7182,
									"end": 7200,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 7174,
									"end": 7200,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7174,
									"end": 7200,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7207,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7207,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7207,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7213,
									"end": 7306,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 7213,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7250,
									"end": 7256,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7297,
									"end": 7299,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7292,
									"end": 7294,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7285,
									"end": 7290,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7281,
									"end": 7295,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7277,
									"end": 7300,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 7267,
									"end": 7300,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7267,
									"end": 7300,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7213,
									"end": 7306,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7213,
									"end": 7306,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7213,
									"end": 7306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7213,
									"end": 7306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 7364,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7406,
									"end": 7411,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7400,
									"end": 7404,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7396,
									"end": 7412,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 7375,
									"end": 7412,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7375,
									"end": 7412,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7494,
									"end": 7500,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7532,
									"end": 7542,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7528,
									"end": 7546,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7567,
									"end": 7664,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 7597,
									"end": 7663,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7586,
									"end": 7595,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7567,
									"end": 7664,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 7567,
									"end": 7664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7567,
									"end": 7664,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 7567,
									"end": 7664,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7715,
									"end": 7723,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7704,
									"end": 7713,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 7685,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7724,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7685,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 7724,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 7724,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7757,
									"end": 7761,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7753,
									"end": 7762,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7746,
									"end": 7751,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7742,
									"end": 7763,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7733,
									"end": 7763,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7733,
									"end": 7763,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7806,
									"end": 7810,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7796,
									"end": 7804,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7792,
									"end": 7811,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7785,
									"end": 7790,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7782,
									"end": 7812,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7772,
									"end": 7812,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7772,
									"end": 7812,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7501,
									"end": 7818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7501,
									"end": 7818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7425,
									"end": 7818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7884,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 7824,
									"end": 7884,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7852,
									"end": 7855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7873,
									"end": 7878,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7866,
									"end": 7878,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7866,
									"end": 7878,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7884,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7884,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7824,
									"end": 7884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7890,
									"end": 8032,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 7890,
									"end": 8032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7973,
									"end": 8026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7991,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 8018,
									"end": 8023,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 8000,
									"end": 8024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 8000,
									"end": 8024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7991,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 7991,
									"end": 8025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7991,
									"end": 8025,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7991,
									"end": 8025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7973,
									"end": 8026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 7973,
									"end": 8026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7973,
									"end": 8026,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7973,
									"end": 8026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 8026,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 8026,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7890,
									"end": 8032,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7890,
									"end": 8032,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7890,
									"end": 8032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7890,
									"end": 8032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8038,
									"end": 8113,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 8038,
									"end": 8113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8081,
									"end": 8084,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8102,
									"end": 8107,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8095,
									"end": 8107,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8095,
									"end": 8107,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8038,
									"end": 8113,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8038,
									"end": 8113,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8038,
									"end": 8113,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8038,
									"end": 8113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8119,
									"end": 8388,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 8119,
									"end": 8388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8229,
									"end": 8268,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8260,
									"end": 8267,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8229,
									"end": 8268,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 8229,
									"end": 8268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8229,
									"end": 8268,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8229,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8290,
									"end": 8381,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 8339,
									"end": 8380,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 8363,
									"end": 8379,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8339,
									"end": 8380,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 8339,
									"end": 8380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8339,
									"end": 8380,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 8339,
									"end": 8380,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8331,
									"end": 8337,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8324,
									"end": 8328,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8318,
									"end": 8329,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 8290,
									"end": 8381,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 8290,
									"end": 8381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8290,
									"end": 8381,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 8290,
									"end": 8381,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8284,
									"end": 8288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8277,
									"end": 8382,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8195,
									"end": 8388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8119,
									"end": 8388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8119,
									"end": 8388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8119,
									"end": 8388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8119,
									"end": 8388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8394,
									"end": 8467,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 8394,
									"end": 8467,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8439,
									"end": 8442,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8394,
									"end": 8467,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8394,
									"end": 8467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8473,
									"end": 8662,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 8473,
									"end": 8662,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8550,
									"end": 8582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8550,
									"end": 8582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 8550,
									"end": 8582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8550,
									"end": 8582,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8550,
									"end": 8582,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8656,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8649,
									"end": 8655,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8641,
									"end": 8647,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8635,
									"end": 8639,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8656,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 8591,
									"end": 8656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8656,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8591,
									"end": 8656,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8526,
									"end": 8662,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8473,
									"end": 8662,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8473,
									"end": 8662,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8473,
									"end": 8662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8668,
									"end": 8854,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 8668,
									"end": 8854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8745,
									"end": 8748,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8738,
									"end": 8743,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8735,
									"end": 8749,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8799,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 8836,
									"end": 8837,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8829,
									"end": 8834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8799,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 8799,
									"end": 8838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8799,
									"end": 8838,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 8799,
									"end": 8838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8772,
									"end": 8773,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8765,
									"end": 8770,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8761,
									"end": 8774,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8752,
									"end": 8774,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8752,
									"end": 8774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 8728,
									"end": 8848,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8668,
									"end": 8854,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8668,
									"end": 8854,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8668,
									"end": 8854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8860,
									"end": 9403,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 8860,
									"end": 9403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8961,
									"end": 8963,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8956,
									"end": 8959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8953,
									"end": 8964,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8950,
									"end": 9396,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8950,
									"end": 9396,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 8950,
									"end": 9396,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8995,
									"end": 9033,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 9027,
									"end": 9032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8995,
									"end": 9033,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8995,
									"end": 9033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8995,
									"end": 9033,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 8995,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9079,
									"end": 9108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 9097,
									"end": 9107,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9079,
									"end": 9108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 9079,
									"end": 9108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9079,
									"end": 9108,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 9079,
									"end": 9108,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9069,
									"end": 9077,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9065,
									"end": 9109,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9262,
									"end": 9264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9250,
									"end": 9260,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9247,
									"end": 9265,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 9244,
									"end": 9293,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9244,
									"end": 9293,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 9244,
									"end": 9293,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9283,
									"end": 9291,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9268,
									"end": 9291,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9268,
									"end": 9291,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9244,
									"end": 9293,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 9244,
									"end": 9293,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9306,
									"end": 9386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 9362,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 9380,
									"end": 9383,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9362,
									"end": 9384,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 9362,
									"end": 9384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9362,
									"end": 9384,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 9362,
									"end": 9384,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9352,
									"end": 9360,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9348,
									"end": 9385,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9335,
									"end": 9346,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9306,
									"end": 9386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 9306,
									"end": 9386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9306,
									"end": 9386,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 9306,
									"end": 9386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8965,
									"end": 9396,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8965,
									"end": 9396,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8950,
									"end": 9396,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 8950,
									"end": 9396,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8860,
									"end": 9403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8860,
									"end": 9403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8860,
									"end": 9403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8860,
									"end": 9403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9463,
									"end": 9471,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9513,
									"end": 9518,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9507,
									"end": 9511,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9503,
									"end": 9519,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 9482,
									"end": 9519,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9482,
									"end": 9519,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9409,
									"end": 9526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9576,
									"end": 9582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9609,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9657,
									"end": 9658,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9653,
									"end": 9659,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 9645,
									"end": 9650,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9642,
									"end": 9643,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 9638,
									"end": 9651,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 9609,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 9609,
									"end": 9660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9609,
									"end": 9660,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9609,
									"end": 9660,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9605,
									"end": 9661,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 9690,
									"end": 9694,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9684,
									"end": 9688,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9680,
									"end": 9695,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9670,
									"end": 9695,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9670,
									"end": 9695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9583,
									"end": 9701,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9532,
									"end": 9701,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9782,
									"end": 9786,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9928,
									"end": 9957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 9953,
									"end": 9956,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9947,
									"end": 9951,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9928,
									"end": 9957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 9928,
									"end": 9957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9928,
									"end": 9957,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 9928,
									"end": 9957,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9990,
									"end": 9993,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9987,
									"end": 9988,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 9983,
									"end": 9994,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 9977,
									"end": 9981,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9974,
									"end": 9995,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 9966,
									"end": 9995,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9966,
									"end": 9995,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9706,
									"end": 10001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10006,
									"end": 11401,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 10006,
									"end": 11401,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10123,
									"end": 10160,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 10156,
									"end": 10159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10123,
									"end": 10160,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 10123,
									"end": 10160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10123,
									"end": 10160,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 10123,
									"end": 10160,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10225,
									"end": 10243,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10217,
									"end": 10223,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10214,
									"end": 10244,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 10211,
									"end": 10267,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10211,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 10211,
									"end": 10267,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10247,
									"end": 10265,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 10247,
									"end": 10265,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 10247,
									"end": 10265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10247,
									"end": 10265,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 10247,
									"end": 10265,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10211,
									"end": 10267,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 10211,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10291,
									"end": 10329,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 10323,
									"end": 10327,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10317,
									"end": 10328,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 10291,
									"end": 10329,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 10291,
									"end": 10329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10291,
									"end": 10329,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 10291,
									"end": 10329,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10376,
									"end": 10443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 10436,
									"end": 10442,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10428,
									"end": 10434,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10422,
									"end": 10426,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10376,
									"end": 10443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 10376,
									"end": 10443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10376,
									"end": 10443,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 10376,
									"end": 10443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10470,
									"end": 10471,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10494,
									"end": 10498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10481,
									"end": 10498,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10481,
									"end": 10498,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10526,
									"end": 10528,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 10518,
									"end": 10524,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10515,
									"end": 10529,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 10543,
									"end": 10544,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11200,
									"end": 11201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 11217,
									"end": 11223,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 11214,
									"end": 11291,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 11214,
									"end": 11291,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 11214,
									"end": 11291,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 11266,
									"end": 11275,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11261,
									"end": 11264,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 11257,
									"end": 11276,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11251,
									"end": 11277,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 11242,
									"end": 11277,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 11242,
									"end": 11277,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 11214,
									"end": 11291,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 11214,
									"end": 11291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11317,
									"end": 11384,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 11377,
									"end": 11383,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 11370,
									"end": 11375,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11317,
									"end": 11384,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 11317,
									"end": 11384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11317,
									"end": 11384,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 11317,
									"end": 11384,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11311,
									"end": 11315,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 11304,
									"end": 11385,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 11173,
									"end": 11395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10508,
									"end": 11395,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 10508,
									"end": 11395,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 10538,
									"end": 11156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10590,
									"end": 10594,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 10586,
									"end": 10595,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 10578,
									"end": 10584,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10574,
									"end": 10596,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 10624,
									"end": 10661,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 10656,
									"end": 10660,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10624,
									"end": 10661,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 10624,
									"end": 10661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10624,
									"end": 10661,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 10624,
									"end": 10661,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10683,
									"end": 10684,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10711,
									"end": 10718,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10708,
									"end": 10709,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10705,
									"end": 10719,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10790,
									"end": 10799,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10785,
									"end": 10788,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 10781,
									"end": 10800,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10775,
									"end": 10801,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 10767,
									"end": 10773,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10760,
									"end": 10802,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 10841,
									"end": 10842,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 10833,
									"end": 10839,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10829,
									"end": 10843,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10819,
									"end": 10843,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10819,
									"end": 10843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10888,
									"end": 10890,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10877,
									"end": 10886,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10873,
									"end": 10891,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10860,
									"end": 10891,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 10860,
									"end": 10891,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10734,
									"end": 10738,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10731,
									"end": 10732,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10727,
									"end": 10739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10722,
									"end": 10739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10722,
									"end": 10739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 10697,
									"end": 10905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10933,
									"end": 10939,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10924,
									"end": 10931,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10921,
									"end": 10940,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 10918,
									"end": 11097,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10918,
									"end": 11097,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 10918,
									"end": 11097,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10991,
									"end": 11000,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10986,
									"end": 10989,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 10982,
									"end": 11001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10976,
									"end": 11002,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 11034,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 11076,
									"end": 11080,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 11068,
									"end": 11074,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 11064,
									"end": 11081,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 11053,
									"end": 11062,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 11034,
									"end": 11082,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 11034,
									"end": 11082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 11034,
									"end": 11082,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 11034,
									"end": 11082,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11026,
									"end": 11032,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 11019,
									"end": 11083,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 10941,
									"end": 11097,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10918,
									"end": 11097,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 10918,
									"end": 11097,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 11143,
									"end": 11144,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 11139,
									"end": 11140,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 11131,
									"end": 11137,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 11127,
									"end": 11141,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 11123,
									"end": 11145,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 11117,
									"end": 11121,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 11110,
									"end": 11146,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 10545,
									"end": 11156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10545,
									"end": 11156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10545,
									"end": 11156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10508,
									"end": 11395,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 10508,
									"end": 11395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10508,
									"end": 11395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10098,
									"end": 11401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10098,
									"end": 11401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10098,
									"end": 11401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10006,
									"end": 11401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10006,
									"end": 11401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10006,
									"end": 11401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "791"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "789"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 16845,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ed07b44d9afa73dbd5f77018d634a0194aa5ac40977c82de73b33012a88732d64736f6c63430008110033",
									".code": [
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "4F6CCCE7"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "D7224BA0"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "4F6CCCE7"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "2F745C59"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 16845,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4937,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4937,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4937,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6601,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6601,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 8066,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 8066,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 8066,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7644,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7644,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3499,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3499,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 8884,
											"end": 9020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8884,
											"end": 9020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4139,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4139,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4139,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9078,
											"end": 9229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9078,
											"end": 9229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3681,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3681,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3681,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6431,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6431,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6431,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5346,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5346,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5346,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 6749,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6749,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8325,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8325,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9287,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9287,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6903,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6903,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6903,
											"end": 7280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 13584,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 13584,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 8652,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 8652,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 8652,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5126,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5126,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5184,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5136,
											"end": 5184,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5086,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5244,
											"name": "PUSH",
											"source": 9,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5194,
											"end": 5244,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5086,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5278,
											"end": 5289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5254,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5254,
											"end": 5290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5254,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5086,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4937,
											"end": 5295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6655,
											"end": 6668,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6683,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6676,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6676,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 6688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8157,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8157,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8157,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8157,
											"end": 8173,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 8157,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 8149,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8149,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8252,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8237,
											"end": 8261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7725,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7744,
											"end": 7751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7728,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7772,
											"end": 7777,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7766,
											"end": 7777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7766,
											"end": 7777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7777,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 7758,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7758,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 7838,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7838,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7850,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 7838,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7859,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 7880,
											"end": 7885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 7887,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 7887,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 7863,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 7823,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 7823,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7993,
											"end": 8000,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7980,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8008,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7980,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 8013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3590,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3574,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3574,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3567,
											"end": 3590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3567,
											"end": 3590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 8987,
											"end": 9015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 9015,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 8987,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 9020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4287,
											"end": 4292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4277,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4277,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4293,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4261,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4261,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4338,
											"end": 4360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4363,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4363,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4363,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4376,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4363,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4338,
											"end": 4376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4338,
											"end": 4376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4460,
											"end": 4473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4494,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4571,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4614,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4586,
											"end": 4614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4614,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4586,
											"end": 4614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4614,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4582,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4582,
											"end": 4669,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4660,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4660,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4582,
											"end": 4669,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4582,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4706,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4680,
											"end": 4706,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4676,
											"end": 4806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4733,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4756,
											"end": 4764,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4784,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4806,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4676,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4501,
											"end": 4812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4496,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4817,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4873,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9185,
											"end": 9224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9185,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3779,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3792,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3779,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3792,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3763,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3763,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6529,
											"end": 6536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6517,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6537,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6517,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6431,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5410,
											"end": 5417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 5425,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5425,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5533,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5539,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5548,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6805,
											"end": 6818,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6833,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6826,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6826,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 8427,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8427,
											"end": 8439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8439,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 8427,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 8407,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 8407,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8522,
											"end": 8530,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8496,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8496,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8496,
											"end": 8508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8508,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8496,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8509,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8518,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8556,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 8556,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8556,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8556,
											"end": 8568,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 8556,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 8580,
											"end": 8588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 8541,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8541,
											"end": 8589,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9418,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9436,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9438,
											"end": 9445,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9418,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9418,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9418,
											"end": 9446,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 9418,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 9490,
											"end": 9494,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9496,
											"end": 9498,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9500,
											"end": 9507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9509,
											"end": 9514,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9467,
											"end": 9515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9515,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 9467,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 9452,
											"end": 9582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9452,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7009,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7042,
											"end": 7049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7034,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7019,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7019,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 7144,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7144,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7198,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7242,
											"end": 7249,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 7242,
											"end": 7260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7216,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7173,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7275,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8814,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8815,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8824,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8783,
											"end": 8825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8783,
											"end": 8825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9920,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 9817,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9903,
											"end": 9915,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9915,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13415,
											"end": 13580,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13415,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13534,
											"end": 13536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13522,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13507,
											"end": 13536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13567,
											"end": 13574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13575,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 13316,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11832,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 11974,
											"end": 11981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11962,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 11962,
											"end": 11982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 11962,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11989,
											"end": 12011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12031,
											"end": 12049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12031,
											"end": 12049,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12049,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12015,
											"end": 12049,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12015,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 12015,
											"end": 12027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12027,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12015,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12049,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12015,
											"end": 12049,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12049,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 12083,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 12083,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12095,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12095,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 12071,
											"end": 12078,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 12059,
											"end": 12079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12079,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 12059,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12095,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12095,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12095,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 12015,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 12122,
											"end": 12135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12140,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 12142,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 12142,
											"end": 12154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 12142,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 12105,
											"end": 12155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12155,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 12105,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 12015,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11989,
											"end": 12156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11989,
											"end": 12156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 12163,
											"end": 12261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 12163,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12305,
											"end": 12309,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12309,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12283,
											"end": 12309,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12296,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12309,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12283,
											"end": 12309,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12283,
											"end": 12309,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 12268,
											"end": 12363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 12268,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12369,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12369,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12442,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12470,
											"end": 12472,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12481,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12442,
											"end": 12485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12442,
											"end": 12485,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12442,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12556,
											"end": 12557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12560,
											"end": 12567,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12569,
											"end": 12582,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12569,
											"end": 12587,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 12539,
											"end": 12588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12539,
											"end": 12588,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12539,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12595,
											"end": 12607,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12612,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12613,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 12595,
											"end": 12626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12595,
											"end": 12626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12660,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12632,
											"end": 12644,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12647,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12648,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12656,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12632,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12632,
											"end": 12661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12705,
											"end": 12707,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12716,
											"end": 12731,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12678,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12686,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12687,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12990,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12979,
											"end": 12986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12979,
											"end": 12990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 12979,
											"end": 12990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13041,
											"end": 13042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13043,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13000,
											"end": 13043,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13011,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13012,
											"end": 13023,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13024,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13000,
											"end": 13029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13043,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13000,
											"end": 13043,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12996,
											"end": 13225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 13057,
											"end": 13077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13219,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13053,
											"end": 13219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13172,
											"end": 13185,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13172,
											"end": 13200,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13172,
											"end": 13200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13172,
											"end": 13200,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13116,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13100,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13101,
											"end": 13112,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13219,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13053,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13225,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12996,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13255,
											"end": 13262,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13251,
											"end": 13253,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13245,
											"end": 13249,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13263,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 13290,
											"end": 13294,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13298,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13300,
											"end": 13307,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13309,
											"end": 13310,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13269,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13269,
											"end": 13311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 13269,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11918,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11832,
											"end": 13316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5869,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5869,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5908,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5924,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5908,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5900,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5900,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5978,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6037,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "791"
										},
										{
											"begin": 6014,
											"end": 6021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6037,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6010,
											"end": 6101,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6078,
											"end": 6090,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "791"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6068,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6068,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6068,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6047,
											"end": 6094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6047,
											"end": 6094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6101,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6010,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6162,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6230,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6231,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6271,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6239,
											"end": 6308,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6308,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 6239,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 6164,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 6320,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6320,
											"end": 6377,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5796,
											"end": 6382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15217,
											"end": 15221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15233,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15233,
											"end": 15235,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15233,
											"end": 15246,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15233,
											"end": 15246,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15233,
											"end": 15246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 15233,
											"end": 15248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15233,
											"end": 15248,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15233,
											"end": 15248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15229,
											"end": 15748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15229,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15229,
											"end": 15748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15306,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15270,
											"end": 15306,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15306,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 15307,
											"end": 15319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 15307,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 15307,
											"end": 15319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15307,
											"end": 15319,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 15307,
											"end": 15319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15325,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15327,
											"end": 15334,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15336,
											"end": 15341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15270,
											"end": 15342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 15270,
											"end": 15342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15270,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15514,
											"end": 15515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15497,
											"end": 15503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15510,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15493,
											"end": 15702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 15493,
											"end": 15702,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 15529,
											"end": 15590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15590,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15493,
											"end": 15702,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 15493,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15672,
											"end": 15678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15666,
											"end": 15679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15657,
											"end": 15663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15653,
											"end": 15655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15649,
											"end": 15664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15642,
											"end": 15680,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15258,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15400,
											"end": 15445,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 15400,
											"end": 15445,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15400,
											"end": 15445,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15445,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15383,
											"end": 15445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15383,
											"end": 15445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15383,
											"end": 15445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15383,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 15383,
											"end": 15445,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15229,
											"end": 15748,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 15229,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15737,
											"end": 15741,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15730,
											"end": 15741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15730,
											"end": 15741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15085,
											"end": 15752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7595,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7509,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7573,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 657,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 687,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 718,
											"end": 727,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 743,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 765,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 817,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 851,
											"end": 861,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 877,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 945,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 932,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 902,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 972,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16200,
											"end": 16336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16708,
											"end": 16843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "237"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11207,
											"name": "PUSH",
											"source": 10,
											"value": "78697374656E7420746F6B656E00000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11168,
											"end": 11208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11363,
											"end": 11366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11448,
											"end": 11450,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 11384,
											"end": 11451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11384,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 11451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11377,
											"end": 11451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 11549,
											"end": 11552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11460,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 11460,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11578,
											"end": 11580,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11569,
											"end": 11581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11562,
											"end": 11581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11562,
											"end": 11581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11774,
											"end": 11800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11846,
											"end": 11855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11836,
											"end": 11856,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11821,
											"end": 11830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11817,
											"end": 11834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11810,
											"end": 11857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 12000,
											"end": 12004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11874,
											"end": 12005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 11874,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 12005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 12005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 12012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 12012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12192,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
										},
										{
											"begin": 12154,
											"end": 12155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12152,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12142,
											"end": 12156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12227,
											"end": 12231,
											"name": "PUSH",
											"source": 10,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12203,
											"end": 12232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12472,
											"end": 12474,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 12408,
											"end": 12475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12408,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12401,
											"end": 12475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12484,
											"end": 12577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 12484,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12604,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12597,
											"end": 12600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12806,
											"end": 12824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12864,
											"end": 12868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 12880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12845,
											"end": 12854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12841,
											"end": 12858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12834,
											"end": 12881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 13024,
											"end": 13028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12898,
											"end": 13029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 12898,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12890,
											"end": 13029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12890,
											"end": 13029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 13036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 13036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13182,
											"end": 13216,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13159,
											"end": 13217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13278,
											"name": "PUSH",
											"source": 10,
											"value": "776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
										},
										{
											"begin": 13246,
											"end": 13248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13238,
											"end": 13244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13234,
											"end": 13249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 13519,
											"end": 13521,
											"name": "PUSH",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 13514,
											"end": 13517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 13455,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 13455,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13448,
											"end": 13522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13448,
											"end": 13522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 13620,
											"end": 13623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13531,
											"end": 13624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 13531,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13649,
											"end": 13651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13644,
											"end": 13647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13640,
											"end": 13652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13633,
											"end": 13652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13633,
											"end": 13652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13830,
											"end": 13834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13868,
											"end": 13870,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13853,
											"end": 13871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13845,
											"end": 13871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13845,
											"end": 13871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13911,
											"end": 13915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13907,
											"end": 13927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13888,
											"end": 13905,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13881,
											"end": 13928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13945,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 13945,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 14076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 14076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 14083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 14083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14269,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14089,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14214,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14134,
											"end": 14135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14127,
											"end": 14215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14238,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14231,
											"end": 14232,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14224,
											"end": 14239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14262,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14248,
											"end": 14263,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14335,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14353,
											"end": 14354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14335,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14335,
											"end": 14355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14335,
											"end": 14355,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14335,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14330,
											"end": 14355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14330,
											"end": 14355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 14387,
											"end": 14388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 14369,
											"end": 14389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14389,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 14369,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14364,
											"end": 14389,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14364,
											"end": 14389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14410,
											"end": 14411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14406,
											"end": 14415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14437,
											"end": 14438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14439,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14425,
											"end": 14462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14425,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 14425,
											"end": 14462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14442,
											"end": 14460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 14442,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14425,
											"end": 14462,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 14425,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14475,
											"end": 14696,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14475,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14615,
											"end": 14649,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A206F776E657220696E646578206F7574206F6620626F756E"
										},
										{
											"begin": 14611,
											"end": 14612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14684,
											"end": 14688,
											"name": "PUSH",
											"source": 10,
											"value": "6473000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14679,
											"end": 14681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 14682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14660,
											"end": 14689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14475,
											"end": 14696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14475,
											"end": 14696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 15068,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 14702,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 14847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 14929,
											"end": 14931,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14924,
											"end": 14927,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14865,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 14865,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14865,
											"end": 14932,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 14865,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14858,
											"end": 14932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14858,
											"end": 14932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 15030,
											"end": 15033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14941,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 15034,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 14941,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15054,
											"end": 15057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 15068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 15068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 15068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 15068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15493,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 15074,
											"end": 15493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15278,
											"end": 15280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15267,
											"end": 15276,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15255,
											"end": 15281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15255,
											"end": 15281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15327,
											"end": 15336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15321,
											"end": 15325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15317,
											"end": 15337,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15313,
											"end": 15314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15291,
											"end": 15338,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 15481,
											"end": 15485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 15355,
											"end": 15486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15486,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 15355,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15347,
											"end": 15486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15347,
											"end": 15486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15732,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 15499,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15538,
											"end": 15541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15561,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 15579,
											"end": 15584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 15561,
											"end": 15585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15585,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 15561,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15552,
											"end": 15585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15552,
											"end": 15585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15607,
											"end": 15673,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15600,
											"end": 15605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15597,
											"end": 15674,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15594,
											"end": 15697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 15594,
											"end": 15697,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 15677,
											"end": 15695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15594,
											"end": 15697,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 15594,
											"end": 15697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15725,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15717,
											"end": 15722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15713,
											"end": 15726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15706,
											"end": 15726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15706,
											"end": 15726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15738,
											"end": 15971,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 15738,
											"end": 15971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15912,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620"
										},
										{
											"begin": 15874,
											"end": 15875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15862,
											"end": 15876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15855,
											"end": 15913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E657220627920696E646578000000000000000000000000000000000000"
										},
										{
											"begin": 15942,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 15945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15738,
											"end": 15971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15738,
											"end": 15971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 16343,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 15977,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16119,
											"end": 16122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16140,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 16204,
											"end": 16206,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 16199,
											"end": 16202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 16140,
											"end": 16207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16207,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 16140,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16216,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 16305,
											"end": 16308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16216,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 16216,
											"end": 16309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16216,
											"end": 16309,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 16216,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16334,
											"end": 16336,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16329,
											"end": 16332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16325,
											"end": 16337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16318,
											"end": 16337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16318,
											"end": 16337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 16343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 16343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 16343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15977,
											"end": 16343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16768,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 16349,
											"end": 16768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16515,
											"end": 16519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16555,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16542,
											"end": 16551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16538,
											"end": 16556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16530,
											"end": 16556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16530,
											"end": 16556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16602,
											"end": 16611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16596,
											"end": 16600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16577,
											"end": 16586,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16630,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 16756,
											"end": 16760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16630,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 16630,
											"end": 16761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16630,
											"end": 16761,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 16630,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16622,
											"end": 16761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16622,
											"end": 16761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16996,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 16774,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16914,
											"end": 16948,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75"
										},
										{
											"begin": 16910,
											"end": 16911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16898,
											"end": 16912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16891,
											"end": 16949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16983,
											"end": 16988,
											"name": "PUSH",
											"source": 10,
											"value": "6E64730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16978,
											"end": 16980,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16970,
											"end": 16976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16966,
											"end": 16981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16989,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16774,
											"end": 16996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17368,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 17002,
											"end": 17368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17144,
											"end": 17147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 17229,
											"end": 17231,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 17224,
											"end": 17227,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17165,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 17165,
											"end": 17232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17165,
											"end": 17232,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 17165,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 17330,
											"end": 17333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 17241,
											"end": 17334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17334,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 17241,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17359,
											"end": 17361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17354,
											"end": 17357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17793,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 17374,
											"end": 17793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17580,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17567,
											"end": 17576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17563,
											"end": 17581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17555,
											"end": 17581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17555,
											"end": 17581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17627,
											"end": 17636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17621,
											"end": 17625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17617,
											"end": 17637,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17613,
											"end": 17614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17611,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17598,
											"end": 17615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17591,
											"end": 17638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17655,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 17781,
											"end": 17785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17655,
											"end": 17786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 17655,
											"end": 17786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17655,
											"end": 17786,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 17655,
											"end": 17786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17647,
											"end": 17786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17647,
											"end": 17786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17799,
											"end": 18029,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 17799,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17939,
											"end": 17973,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 17935,
											"end": 17936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17927,
											"end": 17933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17923,
											"end": 17937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17916,
											"end": 17974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18008,
											"end": 18021,
											"name": "PUSH",
											"source": 10,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 18003,
											"end": 18005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17995,
											"end": 18001,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17991,
											"end": 18006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17984,
											"end": 18022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17799,
											"end": 18029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17799,
											"end": 18029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18177,
											"end": 18180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 18262,
											"end": 18264,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 18257,
											"end": 18260,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18198,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 18198,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18191,
											"end": 18265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18191,
											"end": 18265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 18363,
											"end": 18366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 18274,
											"end": 18367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 18274,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18392,
											"end": 18394,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18387,
											"end": 18390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18383,
											"end": 18395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18035,
											"end": 18401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18573,
											"end": 18577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18611,
											"end": 18613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18600,
											"end": 18609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18596,
											"end": 18614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18660,
											"end": 18669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18654,
											"end": 18658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18650,
											"end": 18670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18635,
											"end": 18644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18624,
											"end": 18671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 18814,
											"end": 18818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 18688,
											"end": 18819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 18688,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18407,
											"end": 18826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18832,
											"end": 19008,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 18832,
											"end": 19008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 19000,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20617070726F766520746F2063616C6C6572000000000000"
										},
										{
											"begin": 18968,
											"end": 18969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18960,
											"end": 18966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18956,
											"end": 18970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18949,
											"end": 19001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18832,
											"end": 19008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18832,
											"end": 19008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19014,
											"end": 19380,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 19014,
											"end": 19380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19156,
											"end": 19159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19177,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 19241,
											"end": 19243,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 19236,
											"end": 19239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19177,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 19177,
											"end": 19244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19177,
											"end": 19244,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 19177,
											"end": 19244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19253,
											"end": 19346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 19342,
											"end": 19345,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19253,
											"end": 19346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 19253,
											"end": 19346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19253,
											"end": 19346,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 19253,
											"end": 19346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19371,
											"end": 19373,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19366,
											"end": 19369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19362,
											"end": 19374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19014,
											"end": 19380,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19014,
											"end": 19380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19014,
											"end": 19380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19014,
											"end": 19380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19805,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 19386,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19552,
											"end": 19556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19590,
											"end": 19592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19579,
											"end": 19588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19575,
											"end": 19593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19567,
											"end": 19593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19567,
											"end": 19593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19639,
											"end": 19648,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19633,
											"end": 19637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19629,
											"end": 19649,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19625,
											"end": 19626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19623,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19610,
											"end": 19627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19650,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 19793,
											"end": 19797,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 19667,
											"end": 19798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19798,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 19667,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19659,
											"end": 19798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19659,
											"end": 19798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19805,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 20049,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 19811,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19951,
											"end": 19985,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
										},
										{
											"begin": 19947,
											"end": 19948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19939,
											"end": 19945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19935,
											"end": 19949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19928,
											"end": 19986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20020,
											"end": 20041,
											"name": "PUSH",
											"source": 10,
											"value": "6563656976657220696D706C656D656E74657200000000000000000000000000"
										},
										{
											"begin": 20015,
											"end": 20017,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20007,
											"end": 20013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20003,
											"end": 20018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 20049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19811,
											"end": 20049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20421,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 20055,
											"end": 20421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20197,
											"end": 20200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20218,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20282,
											"end": 20284,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 20277,
											"end": 20280,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 20218,
											"end": 20285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20218,
											"end": 20285,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20218,
											"end": 20285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20211,
											"end": 20285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20211,
											"end": 20285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20294,
											"end": 20387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 20383,
											"end": 20386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20294,
											"end": 20387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 20294,
											"end": 20387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20294,
											"end": 20387,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 20294,
											"end": 20387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20412,
											"end": 20414,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20403,
											"end": 20415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20396,
											"end": 20415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20396,
											"end": 20415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20055,
											"end": 20421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20846,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 20427,
											"end": 20846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20593,
											"end": 20597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20631,
											"end": 20633,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20620,
											"end": 20629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20616,
											"end": 20634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20608,
											"end": 20634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20608,
											"end": 20634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20680,
											"end": 20689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20674,
											"end": 20678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20670,
											"end": 20690,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20655,
											"end": 20664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20651,
											"end": 20668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20644,
											"end": 20691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 20834,
											"end": 20838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 20708,
											"end": 20839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20708,
											"end": 20839,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 20708,
											"end": 20839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20700,
											"end": 20839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20700,
											"end": 20839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 21086,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 20852,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20992,
											"end": 21026,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 20988,
											"end": 20989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20980,
											"end": 20986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 20990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 21027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21061,
											"end": 21078,
											"name": "PUSH",
											"source": 10,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 21056,
											"end": 21058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21048,
											"end": 21054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21044,
											"end": 21059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 21086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 21086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21458,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 21092,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21234,
											"end": 21237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 21319,
											"end": 21321,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 21314,
											"end": 21317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 21255,
											"end": 21322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 21255,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21248,
											"end": 21322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21248,
											"end": 21322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21331,
											"end": 21424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 21420,
											"end": 21423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21331,
											"end": 21424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 21331,
											"end": 21424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21331,
											"end": 21424,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 21331,
											"end": 21424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21449,
											"end": 21451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21444,
											"end": 21447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21440,
											"end": 21452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21433,
											"end": 21452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21433,
											"end": 21452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21092,
											"end": 21458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21883,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 21464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21630,
											"end": 21634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21668,
											"end": 21670,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21657,
											"end": 21666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21653,
											"end": 21671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21645,
											"end": 21671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21717,
											"end": 21726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21711,
											"end": 21715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21707,
											"end": 21727,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21703,
											"end": 21704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21692,
											"end": 21701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21688,
											"end": 21705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21681,
											"end": 21728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21745,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21871,
											"end": 21875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21745,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 21745,
											"end": 21876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21745,
											"end": 21876,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21745,
											"end": 21876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21883,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21464,
											"end": 21883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21991,
											"end": 22002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22028,
											"end": 22031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22013,
											"end": 22031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22013,
											"end": 22031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21889,
											"end": 22037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22149,
											"end": 22152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22177,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 22210,
											"end": 22215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22177,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 22177,
											"end": 22216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22177,
											"end": 22216,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 22177,
											"end": 22216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22232,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22314,
											"end": 22320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22312,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22232,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 22232,
											"end": 22321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22232,
											"end": 22321,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 22232,
											"end": 22321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22225,
											"end": 22321,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22225,
											"end": 22321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22330,
											"end": 22395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22388,
											"end": 22394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22383,
											"end": 22386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22376,
											"end": 22380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22369,
											"end": 22374,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22365,
											"end": 22381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22330,
											"end": 22395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 22330,
											"end": 22395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22330,
											"end": 22395,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 22330,
											"end": 22395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22420,
											"end": 22426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22415,
											"end": 22418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22411,
											"end": 22427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22404,
											"end": 22427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22404,
											"end": 22427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22153,
											"end": 22433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22043,
											"end": 22433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22619,
											"end": 22622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22732,
											"end": 22735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22723,
											"end": 22729,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22641,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 22641,
											"end": 22736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22641,
											"end": 22736,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 22641,
											"end": 22736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22634,
											"end": 22736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22634,
											"end": 22736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22844,
											"end": 22847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22835,
											"end": 22841,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 22753,
											"end": 22848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 22848,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 22753,
											"end": 22848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22746,
											"end": 22848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22746,
											"end": 22848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22865,
											"end": 22868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 22868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 22868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22439,
											"end": 22874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22880,
											"end": 23117,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 22880,
											"end": 23117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23020,
											"end": 23054,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 23016,
											"end": 23017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23008,
											"end": 23014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23004,
											"end": 23018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22997,
											"end": 23055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23089,
											"end": 23109,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 23084,
											"end": 23086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23076,
											"end": 23082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23072,
											"end": 23087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23065,
											"end": 23110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22880,
											"end": 23117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22880,
											"end": 23117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23265,
											"end": 23268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 23350,
											"end": 23352,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 23345,
											"end": 23348,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 23286,
											"end": 23353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 23286,
											"end": 23353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23279,
											"end": 23353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23279,
											"end": 23353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 23451,
											"end": 23454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 23362,
											"end": 23455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 23362,
											"end": 23455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23480,
											"end": 23482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23475,
											"end": 23478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23471,
											"end": 23483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23464,
											"end": 23483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23464,
											"end": 23483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23123,
											"end": 23489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23661,
											"end": 23665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23699,
											"end": 23701,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23688,
											"end": 23697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23684,
											"end": 23702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23676,
											"end": 23702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23676,
											"end": 23702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23748,
											"end": 23757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23742,
											"end": 23746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23738,
											"end": 23758,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23734,
											"end": 23735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23723,
											"end": 23732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23719,
											"end": 23736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23712,
											"end": 23759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 23902,
											"end": 23906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 23776,
											"end": 23907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 23776,
											"end": 23907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23768,
											"end": 23907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23768,
											"end": 23907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23495,
											"end": 23914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24145,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 23920,
											"end": 24145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24060,
											"end": 24094,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E736665722066726F6D20696E636F7272656374"
										},
										{
											"begin": 24056,
											"end": 24057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24048,
											"end": 24054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24044,
											"end": 24058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24037,
											"end": 24095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24129,
											"end": 24137,
											"name": "PUSH",
											"source": 10,
											"value": "206F776E65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24124,
											"end": 24126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24116,
											"end": 24122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24112,
											"end": 24127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24105,
											"end": 24138,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23920,
											"end": 24145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24517,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 24151,
											"end": 24517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24293,
											"end": 24296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24314,
											"end": 24381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 24378,
											"end": 24380,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 24373,
											"end": 24376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24314,
											"end": 24381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 24314,
											"end": 24381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24314,
											"end": 24381,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 24314,
											"end": 24381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24307,
											"end": 24381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24307,
											"end": 24381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24390,
											"end": 24483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 24479,
											"end": 24482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24390,
											"end": 24483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 24390,
											"end": 24483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24390,
											"end": 24483,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 24390,
											"end": 24483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24508,
											"end": 24510,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24503,
											"end": 24506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24492,
											"end": 24511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24492,
											"end": 24511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24151,
											"end": 24517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24523,
											"end": 24942,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 24523,
											"end": 24942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24689,
											"end": 24693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24727,
											"end": 24729,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24716,
											"end": 24725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24712,
											"end": 24730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24704,
											"end": 24730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24704,
											"end": 24730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24776,
											"end": 24785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24770,
											"end": 24774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24766,
											"end": 24786,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24762,
											"end": 24763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24751,
											"end": 24760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24747,
											"end": 24764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24740,
											"end": 24787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24804,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 24930,
											"end": 24934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24804,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 24804,
											"end": 24935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24804,
											"end": 24935,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 24804,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24796,
											"end": 24935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24796,
											"end": 24935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24523,
											"end": 24942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24523,
											"end": 24942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24523,
											"end": 24942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24523,
											"end": 24942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24948,
											"end": 25172,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 24948,
											"end": 25172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25088,
											"end": 25122,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 25084,
											"end": 25085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25076,
											"end": 25082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25072,
											"end": 25086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25065,
											"end": 25123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25157,
											"end": 25164,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25152,
											"end": 25154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25144,
											"end": 25150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25140,
											"end": 25155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25133,
											"end": 25165,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24948,
											"end": 25172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24948,
											"end": 25172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25544,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 25178,
											"end": 25544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25320,
											"end": 25323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25341,
											"end": 25408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 25405,
											"end": 25407,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 25400,
											"end": 25403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25341,
											"end": 25408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 25341,
											"end": 25408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25341,
											"end": 25408,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 25341,
											"end": 25408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25334,
											"end": 25408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25334,
											"end": 25408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25417,
											"end": 25510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 25506,
											"end": 25509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25417,
											"end": 25510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 25417,
											"end": 25510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25417,
											"end": 25510,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 25417,
											"end": 25510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25535,
											"end": 25537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25530,
											"end": 25533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25526,
											"end": 25538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25519,
											"end": 25538,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25519,
											"end": 25538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25550,
											"end": 25969,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 25550,
											"end": 25969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25716,
											"end": 25720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25754,
											"end": 25756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25743,
											"end": 25752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25739,
											"end": 25757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25731,
											"end": 25757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25731,
											"end": 25757,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25803,
											"end": 25812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25797,
											"end": 25801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25793,
											"end": 25813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25789,
											"end": 25790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25778,
											"end": 25787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25774,
											"end": 25791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25767,
											"end": 25814,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 25957,
											"end": 25961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 25831,
											"end": 25962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25550,
											"end": 25969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25550,
											"end": 25969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25550,
											"end": 25969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25550,
											"end": 25969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25975,
											"end": 26093,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 25975,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26012,
											"end": 26019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26052,
											"end": 26086,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26045,
											"end": 26050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26041,
											"end": 26087,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 26030,
											"end": 26087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26030,
											"end": 26087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25975,
											"end": 26093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25975,
											"end": 26093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25975,
											"end": 26093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25975,
											"end": 26093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26139,
											"end": 26143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26159,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 26177,
											"end": 26178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26159,
											"end": 26179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 26159,
											"end": 26179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26159,
											"end": 26179,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 26159,
											"end": 26179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26154,
											"end": 26179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26154,
											"end": 26179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26193,
											"end": 26213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 26211,
											"end": 26212,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26193,
											"end": 26213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 26193,
											"end": 26213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26193,
											"end": 26213,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 26193,
											"end": 26213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26188,
											"end": 26213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26188,
											"end": 26213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26237,
											"end": 26238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26234,
											"end": 26235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26230,
											"end": 26239,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26222,
											"end": 26239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26222,
											"end": 26239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26261,
											"end": 26295,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26255,
											"end": 26259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26252,
											"end": 26296,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 26249,
											"end": 26319,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26249,
											"end": 26319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 26249,
											"end": 26319,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26299,
											"end": 26317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 26299,
											"end": 26317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 26299,
											"end": 26317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26299,
											"end": 26317,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 26299,
											"end": 26317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26249,
											"end": 26319,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 26249,
											"end": 26319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26372,
											"end": 26375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26391,
											"end": 26411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 26409,
											"end": 26410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26391,
											"end": 26411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 26391,
											"end": 26411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26391,
											"end": 26411,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 26391,
											"end": 26411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26386,
											"end": 26411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26386,
											"end": 26411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26425,
											"end": 26445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 26443,
											"end": 26444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26425,
											"end": 26445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 26425,
											"end": 26445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26425,
											"end": 26445,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 26425,
											"end": 26445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26420,
											"end": 26445,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26420,
											"end": 26445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26468,
											"end": 26469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26465,
											"end": 26466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26461,
											"end": 26470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26454,
											"end": 26470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26454,
											"end": 26470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26491,
											"end": 26525,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26486,
											"end": 26489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26483,
											"end": 26526,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 26480,
											"end": 26549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26480,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 26480,
											"end": 26549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26529,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 26529,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 26529,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26529,
											"end": 26547,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 26529,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26480,
											"end": 26549,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 26480,
											"end": 26549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26332,
											"end": 26556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26602,
											"end": 26605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26621,
											"end": 26641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 26639,
											"end": 26640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26621,
											"end": 26641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 26621,
											"end": 26641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26621,
											"end": 26641,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 26621,
											"end": 26641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26616,
											"end": 26641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26616,
											"end": 26641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 26673,
											"end": 26674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 26655,
											"end": 26675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26675,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 26655,
											"end": 26675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26650,
											"end": 26675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26650,
											"end": 26675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26698,
											"end": 26699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26695,
											"end": 26696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26691,
											"end": 26700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26684,
											"end": 26700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26684,
											"end": 26700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26719,
											"end": 26722,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 26716,
											"end": 26717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26713,
											"end": 26723,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 26710,
											"end": 26746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26710,
											"end": 26746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 26710,
											"end": 26746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26726,
											"end": 26744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 26726,
											"end": 26744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 26726,
											"end": 26744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26726,
											"end": 26744,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 26726,
											"end": 26744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26710,
											"end": 26746,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 26710,
											"end": 26746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26759,
											"end": 26988,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 26759,
											"end": 26988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26899,
											"end": 26933,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
										},
										{
											"begin": 26895,
											"end": 26896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26887,
											"end": 26893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26883,
											"end": 26897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26876,
											"end": 26934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26968,
											"end": 26980,
											"name": "PUSH",
											"source": 10,
											"value": "74656E7420746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 26963,
											"end": 26965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26955,
											"end": 26961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26951,
											"end": 26966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26944,
											"end": 26981,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26759,
											"end": 26988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26759,
											"end": 26988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26994,
											"end": 27360,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 26994,
											"end": 27360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27136,
											"end": 27139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27157,
											"end": 27224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 27221,
											"end": 27223,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 27216,
											"end": 27219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27157,
											"end": 27224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 27157,
											"end": 27224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27157,
											"end": 27224,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 27157,
											"end": 27224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27150,
											"end": 27224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27150,
											"end": 27224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27233,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 27322,
											"end": 27325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27233,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 27233,
											"end": 27326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27233,
											"end": 27326,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 27233,
											"end": 27326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27351,
											"end": 27353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 27346,
											"end": 27349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27342,
											"end": 27354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27335,
											"end": 27354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27335,
											"end": 27354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26994,
											"end": 27360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26994,
											"end": 27360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26994,
											"end": 27360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26994,
											"end": 27360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27366,
											"end": 27785,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 27366,
											"end": 27785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27532,
											"end": 27536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27570,
											"end": 27572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27559,
											"end": 27568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27555,
											"end": 27573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27547,
											"end": 27573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27547,
											"end": 27573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27619,
											"end": 27628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27613,
											"end": 27617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27609,
											"end": 27629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27605,
											"end": 27606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27594,
											"end": 27603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27590,
											"end": 27607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27583,
											"end": 27630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27647,
											"end": 27778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 27773,
											"end": 27777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27647,
											"end": 27778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 27647,
											"end": 27778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27647,
											"end": 27778,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 27647,
											"end": 27778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27639,
											"end": 27778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27639,
											"end": 27778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27366,
											"end": 27785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27366,
											"end": 27785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27366,
											"end": 27785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27366,
											"end": 27785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27962,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 27791,
											"end": 27962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27830,
											"end": 27833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27853,
											"end": 27877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 27871,
											"end": 27876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27853,
											"end": 27877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 27853,
											"end": 27877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27853,
											"end": 27877,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 27853,
											"end": 27877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27844,
											"end": 27877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27844,
											"end": 27877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27899,
											"end": 27903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27892,
											"end": 27897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27889,
											"end": 27904,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27886,
											"end": 27927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 27886,
											"end": 27927,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27907,
											"end": 27925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 27907,
											"end": 27925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 27907,
											"end": 27925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27907,
											"end": 27925,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 27907,
											"end": 27925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27886,
											"end": 27927,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 27886,
											"end": 27927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27954,
											"end": 27955,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 27947,
											"end": 27952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27943,
											"end": 27956,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27936,
											"end": 27956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27936,
											"end": 27956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27968,
											"end": 28202,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 27968,
											"end": 28202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28108,
											"end": 28142,
											"name": "PUSH",
											"source": 10,
											"value": "455243373231413A20756E61626C6520746F2064657465726D696E6520746865"
										},
										{
											"begin": 28104,
											"end": 28105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28096,
											"end": 28102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28092,
											"end": 28106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28085,
											"end": 28143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28177,
											"end": 28194,
											"name": "PUSH",
											"source": 10,
											"value": "206F776E6572206F6620746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 28172,
											"end": 28174,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28164,
											"end": 28170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28160,
											"end": 28175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28153,
											"end": 28195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27968,
											"end": 28202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27968,
											"end": 28202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28574,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 28208,
											"end": 28574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28350,
											"end": 28353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28371,
											"end": 28438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 28435,
											"end": 28437,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 28430,
											"end": 28433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28371,
											"end": 28438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 28371,
											"end": 28438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28371,
											"end": 28438,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 28371,
											"end": 28438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28364,
											"end": 28438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28364,
											"end": 28438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28447,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 28536,
											"end": 28539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28447,
											"end": 28540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 28447,
											"end": 28540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28447,
											"end": 28540,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 28447,
											"end": 28540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28565,
											"end": 28567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28560,
											"end": 28563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28556,
											"end": 28568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28549,
											"end": 28568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28549,
											"end": 28568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28999,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 28580,
											"end": 28999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28746,
											"end": 28750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28784,
											"end": 28786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28773,
											"end": 28782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28769,
											"end": 28787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28761,
											"end": 28787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28761,
											"end": 28787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28833,
											"end": 28842,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28827,
											"end": 28831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28823,
											"end": 28843,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28819,
											"end": 28820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28808,
											"end": 28817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28804,
											"end": 28821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28797,
											"end": 28844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 28987,
											"end": 28991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 28861,
											"end": 28992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 28992,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 28861,
											"end": 28992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28853,
											"end": 28992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28853,
											"end": 28992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29005,
											"end": 29103,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 29005,
											"end": 29103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29056,
											"end": 29062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29090,
											"end": 29095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29084,
											"end": 29096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29074,
											"end": 29096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29074,
											"end": 29096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29005,
											"end": 29103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29005,
											"end": 29103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29005,
											"end": 29103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29005,
											"end": 29103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29192,
											"end": 29203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29226,
											"end": 29232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29221,
											"end": 29224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29214,
											"end": 29233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29266,
											"end": 29270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29261,
											"end": 29264,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29257,
											"end": 29271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29242,
											"end": 29271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29242,
											"end": 29271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29109,
											"end": 29277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29369,
											"end": 29372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29397,
											"end": 29435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 29429,
											"end": 29434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29397,
											"end": 29435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 29397,
											"end": 29435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29397,
											"end": 29435,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 29397,
											"end": 29435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 29514,
											"end": 29520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29509,
											"end": 29512,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 29451,
											"end": 29521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29451,
											"end": 29521,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 29451,
											"end": 29521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29444,
											"end": 29521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 29444,
											"end": 29521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29530,
											"end": 29595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 29588,
											"end": 29594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29583,
											"end": 29586,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29576,
											"end": 29580,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29569,
											"end": 29574,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 29565,
											"end": 29581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29530,
											"end": 29595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 29530,
											"end": 29595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29530,
											"end": 29595,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 29530,
											"end": 29595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29620,
											"end": 29649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 29642,
											"end": 29648,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29620,
											"end": 29649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 29620,
											"end": 29649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29620,
											"end": 29649,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 29620,
											"end": 29649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29615,
											"end": 29618,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29611,
											"end": 29650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29604,
											"end": 29650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29604,
											"end": 29650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29373,
											"end": 29656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29283,
											"end": 29656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29857,
											"end": 29861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29895,
											"end": 29898,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 29884,
											"end": 29893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29880,
											"end": 29899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29872,
											"end": 29899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29872,
											"end": 29899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 29980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 29977,
											"end": 29978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29966,
											"end": 29975,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29962,
											"end": 29979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29953,
											"end": 29959,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 29980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 29909,
											"end": 29980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 29980,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 29909,
											"end": 29980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 30058,
											"end": 30060,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30047,
											"end": 30056,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30043,
											"end": 30061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 29990,
											"end": 30062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30062,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 29990,
											"end": 30062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30072,
											"end": 30144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 30140,
											"end": 30142,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 30129,
											"end": 30138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30125,
											"end": 30143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30116,
											"end": 30122,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30072,
											"end": 30144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 30072,
											"end": 30144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30072,
											"end": 30144,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 30072,
											"end": 30144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30191,
											"end": 30200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30185,
											"end": 30189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30181,
											"end": 30201,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30176,
											"end": 30178,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 30165,
											"end": 30174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30161,
											"end": 30179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30154,
											"end": 30202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30219,
											"end": 30295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 30290,
											"end": 30294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30281,
											"end": 30287,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30219,
											"end": 30295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 30219,
											"end": 30295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30219,
											"end": 30295,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 30219,
											"end": 30295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30211,
											"end": 30295,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30211,
											"end": 30295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29662,
											"end": 30302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30364,
											"end": 30369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30395,
											"end": 30401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30389,
											"end": 30402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30411,
											"end": 30443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 30437,
											"end": 30442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30411,
											"end": 30443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 30411,
											"end": 30443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30411,
											"end": 30443,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 30411,
											"end": 30443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30308,
											"end": 30449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30524,
											"end": 30530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30573,
											"end": 30575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30561,
											"end": 30570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30552,
											"end": 30559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30548,
											"end": 30571,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30544,
											"end": 30576,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 30541,
											"end": 30660,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30541,
											"end": 30660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 30541,
											"end": 30660,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30579,
											"end": 30658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 30579,
											"end": 30658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 30579,
											"end": 30658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30579,
											"end": 30658,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 30579,
											"end": 30658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30541,
											"end": 30660,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 30541,
											"end": 30660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30699,
											"end": 30700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30724,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 30779,
											"end": 30786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30770,
											"end": 30776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30759,
											"end": 30768,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30755,
											"end": 30777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30724,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 30724,
											"end": 30787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30724,
											"end": 30787,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 30724,
											"end": 30787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30714,
											"end": 30787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30714,
											"end": 30787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30670,
											"end": 30797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30455,
											"end": 30804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30810,
											"end": 30990,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 30810,
											"end": 30990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30858,
											"end": 30935,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30855,
											"end": 30856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30848,
											"end": 30936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30955,
											"end": 30959,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 30952,
											"end": 30953,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 30945,
											"end": 30960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30979,
											"end": 30983,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 30976,
											"end": 30977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30969,
											"end": 30984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31036,
											"end": 31037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 31071,
											"end": 31072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 31053,
											"end": 31073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31048,
											"end": 31073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31048,
											"end": 31073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31087,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 31105,
											"end": 31106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31087,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 31087,
											"end": 31107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31087,
											"end": 31107,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 31087,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31082,
											"end": 31107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31082,
											"end": 31107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31126,
											"end": 31127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31116,
											"end": 31151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 31116,
											"end": 31151,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 31131,
											"end": 31149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 31131,
											"end": 31149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 31131,
											"end": 31149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31131,
											"end": 31149,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 31131,
											"end": 31149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31116,
											"end": 31151,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 31116,
											"end": 31151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31173,
											"end": 31174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31170,
											"end": 31171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31166,
											"end": 31175,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 31161,
											"end": 31175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31161,
											"end": 31175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30996,
											"end": 31181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31219,
											"end": 31220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31236,
											"end": 31256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 31254,
											"end": 31255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31236,
											"end": 31256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 31236,
											"end": 31256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31236,
											"end": 31256,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 31236,
											"end": 31256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31231,
											"end": 31256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31231,
											"end": 31256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31270,
											"end": 31290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 31288,
											"end": 31289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31270,
											"end": 31290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 31270,
											"end": 31290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31270,
											"end": 31290,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 31270,
											"end": 31290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31265,
											"end": 31290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31265,
											"end": 31290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31299,
											"end": 31334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 31299,
											"end": 31334,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 31314,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 31314,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 31314,
											"end": 31332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31314,
											"end": 31332,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 31314,
											"end": 31332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31299,
											"end": 31334,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 31299,
											"end": 31334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31355,
											"end": 31356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31352,
											"end": 31353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31348,
											"end": 31357,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31187,
											"end": 31363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31369,
											"end": 31549,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 31369,
											"end": 31549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31417,
											"end": 31494,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31414,
											"end": 31415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31407,
											"end": 31495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31514,
											"end": 31518,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 31511,
											"end": 31512,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 31504,
											"end": 31519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31538,
											"end": 31542,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 31535,
											"end": 31536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31528,
											"end": 31543,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-solidity/contracts/utils/Address.sol",
								"openzeppelin-solidity/contracts/utils/Context.sol",
								"openzeppelin-solidity/contracts/utils/Strings.sol",
								"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
								"standards/ERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"nextOwnerToExplicitlySet()": "d7224ba0",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxBatchSize_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionSize_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOwnerToExplicitlySet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Assumes the number of issuable tokens (collection size) is capped and fits in a uint128. Does not support burning tokens to address(0).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"`maxBatchSize` refers to how much a minter can mint at a time. `collectionSize_` refers to how many tokens are in the collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"standards/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"standards/ERC721A.sol\":{\"keccak256\":\"0x95a49630fb5bce0b49a8d13317d2a42eb421f9b8147b7a3efec8a6f53f2d186c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ed125e000a539e002f0ffdd4660b722d50f3c81c95f7b253a28ae3081ad9c59\",\"dweb:/ipfs/Qmef9mR7Jyfuv743MfW3Wtvcn7Ebjsc4k6cqx5PZ7zi388\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 787,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 795,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 800,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)779_storage)"
							},
							{
								"astId": 805,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(AddressData)784_storage)"
							},
							{
								"astId": 809,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 815,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1760,
								"contract": "standards/ERC721A.sol:ERC721A",
								"label": "nextOwnerToExplicitlySet",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)784_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)784_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)779_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)779_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)784_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 781,
										"contract": "standards/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									},
									{
										"astId": 783,
										"contract": "standards/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)779_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 776,
										"contract": "standards/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 778,
										"contract": "standards/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							747
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 748,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								747
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:0"
									},
									"scope": 115,
									"src": "2647:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:0"
									},
									"scope": 115,
									"src": "3270:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:0"
									},
									"scope": 115,
									"src": "3837:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4239:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:0"
									},
									"scope": 115,
									"src": "4212:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4493:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:0"
									},
									"scope": 115,
									"src": "4432:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4742:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:0"
									},
									"scope": 115,
									"src": "4660:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4500:0",
							"usedErrors": []
						}
					],
					"src": "108:4643:0"
				},
				"id": 0
			},
			"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							747
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:2"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 165,
							"sourceUnit": 116,
							"src": "154:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"348:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "348:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:2"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164,
								115,
								747
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:2",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "495:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:2"
									},
									"scope": 164,
									"src": "449:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:2",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "715:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "730:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "768:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:2"
									},
									"scope": 164,
									"src": "686:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:2",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "974:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1012:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:2"
									},
									"scope": 164,
									"src": "952:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "317:706:2",
							"usedErrors": []
						}
					],
					"src": "129:895:2"
				},
				"id": 2
			},
			"openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							747
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							191
						]
					},
					"id": 192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 192,
							"sourceUnit": 116,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 169,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:3"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 168,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 191,
							"linearizedBaseContracts": [
								191,
								115,
								747
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 191,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 191,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 191,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 192,
							"src": "297:463:3",
							"usedErrors": []
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			"openzeppelin-solidity/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 202,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 201,
												"id": 207,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 486,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 220,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$486",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$486",
																				"typeString": "library Address"
																			}
																		],
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 218,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													229,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 230,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 232,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 486,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 253,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															260,
															280
														],
														"referencedDeclaration": 280,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 252,
												"id": 258,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 486,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 272,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															350
														],
														"referencedDeclaration": 350,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 271,
												"id": 278,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 486,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 292,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															350
														],
														"referencedDeclaration": 350,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 298,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 486,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 317,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$486",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$486",
																				"typeString": "library Address"
																			}
																		],
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 326,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													333,
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"arguments": [
														{
															"id": 340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 336,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 338,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 345,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 346,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 343,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 348,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 486,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 360,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															367,
															402
														],
														"referencedDeclaration": 402,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 359,
												"id": 365,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 486,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 381,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 380,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													387,
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 386,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 388,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [
														{
															"id": 392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 397,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 398,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 395,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 378,
												"id": 400,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 486,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 412,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															419,
															454
														],
														"referencedDeclaration": 454,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 411,
												"id": 417,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 486,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 433,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 432,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													439,
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 438,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 440,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"id": 444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 442,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 447,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 430,
												"id": 452,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 486,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 466,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 457,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 470,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 480,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 477,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 461,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 476,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 479,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 481,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 475,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 459,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 459,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 474,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 469,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 467,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 465,
															"id": 468,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 486,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"openzeppelin-solidity/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							508
						]
					},
					"id": 509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 489,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 508,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 503,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 502,
												"id": 505,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 508,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 509,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"openzeppelin-solidity/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 514,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 711,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 512,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 521,
															"id": 526,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"id": 531,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 517,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 546,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 539,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 542,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 547,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 548,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [
														{
															"id": 552,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 585,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 558,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 561,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 562,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 564,
																	"indexExpression": {
																		"id": 563,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 574,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 572,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 517,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 573,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 571,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 570,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 575,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 565,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 580,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 584,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 587,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 521,
												"id": 591,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 711,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 600,
															"id": 605,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"id": 610,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 596,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"hexValue": "30",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 626,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 619,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 622,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 625,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 616,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 630,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															634,
															710
														],
														"referencedDeclaration": 710,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 600,
												"id": 632,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 711,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 644,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 649,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 646,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 655,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 657,
														"indexExpression": {
															"hexValue": "30",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 661,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 663,
														"indexExpression": {
															"hexValue": "31",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 695,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 681,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 683,
																	"indexExpression": {
																		"id": 682,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 684,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 688,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 690,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"initializationExpression": {
													"assignments": [
														668
													],
													"declarations": [
														{
															"constant": false,
															"id": 668,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 696,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 667,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 674,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 670,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 678,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 680,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 698,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 704,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 643,
												"id": 708,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 711,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							735
						],
						"IERC165": [
							747
						]
					},
					"id": 736,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 736,
							"sourceUnit": 748,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 716,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "754:7:7"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 735,
							"linearizedBaseContracts": [
								735,
								747
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										746
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 728,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$747_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$747_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 727,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$747",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 725,
												"id": 732,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 719,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 735,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 736,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 737,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 738,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 740,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 747,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 748,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"standards/ERC721A.sol": {
				"ast": {
					"absolutePath": "standards/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							486
						],
						"Context": [
							508
						],
						"ERC165": [
							735
						],
						"ERC721A": [
							1944
						],
						"IERC165": [
							747
						],
						"IERC721": [
							115
						],
						"IERC721Enumerable": [
							164
						],
						"IERC721Metadata": [
							191
						],
						"IERC721Receiver": [
							133
						],
						"Strings": [
							711
						]
					},
					"id": 1945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
							"id": 750,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 116,
							"src": "58:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 134,
							"src": "125:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 192,
							"src": "200:85:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 165,
							"src": "286:87:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
							"file": "openzeppelin-solidity/contracts/utils/Address.sol",
							"id": 754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 487,
							"src": "374:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
							"file": "openzeppelin-solidity/contracts/utils/Context.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 509,
							"src": "434:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
							"file": "openzeppelin-solidity/contracts/utils/Strings.sol",
							"id": 756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 712,
							"src": "494:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
							"file": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 736,
							"src": "554:72:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 759,
										"name": "Context",
										"nameLocations": [
											"1750:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "1750:7:9"
									},
									"id": 760,
									"nodeType": "InheritanceSpecifier",
									"src": "1750:7:9"
								},
								{
									"baseName": {
										"id": 761,
										"name": "ERC165",
										"nameLocations": [
											"1761:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 735,
										"src": "1761:6:9"
									},
									"id": 762,
									"nodeType": "InheritanceSpecifier",
									"src": "1761:6:9"
								},
								{
									"baseName": {
										"id": 763,
										"name": "IERC721",
										"nameLocations": [
											"1771:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "1771:7:9"
									},
									"id": 764,
									"nodeType": "InheritanceSpecifier",
									"src": "1771:7:9"
								},
								{
									"baseName": {
										"id": 765,
										"name": "IERC721Metadata",
										"nameLocations": [
											"1782:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 191,
										"src": "1782:15:9"
									},
									"id": 766,
									"nodeType": "InheritanceSpecifier",
									"src": "1782:15:9"
								},
								{
									"baseName": {
										"id": 767,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"1801:17:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "1801:17:9"
									},
									"id": 768,
									"nodeType": "InheritanceSpecifier",
									"src": "1801:17:9"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "1285:442:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Assumes the number of issuable tokens (collection size) is capped and fits in a uint128.\n Does not support burning tokens to address(0)."
							},
							"fullyImplemented": true,
							"id": 1944,
							"linearizedBaseContracts": [
								1944,
								164,
								191,
								115,
								735,
								747,
								508
							],
							"name": "ERC721A",
							"nameLocation": "1737:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 771,
									"libraryName": {
										"id": 769,
										"name": "Address",
										"nameLocations": [
											"1829:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1829:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1823:26:9",
									"typeName": {
										"id": 770,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1841:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 774,
									"libraryName": {
										"id": 772,
										"name": "Strings",
										"nameLocations": [
											"1858:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1858:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1852:26:9",
									"typeName": {
										"id": 773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1870:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 779,
									"members": [
										{
											"constant": false,
											"id": 776,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1918:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "1910:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 775,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1910:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 778,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1935:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "1928:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 777,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1928:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1889:14:9",
									"nodeType": "StructDefinition",
									"scope": 1944,
									"src": "1882:72:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 784,
									"members": [
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1991:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 784,
											"src": "1983:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 780,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1983:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 783,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2012:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 784,
											"src": "2004:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 782,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2004:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "1965:11:9",
									"nodeType": "StructDefinition",
									"scope": 1944,
									"src": "1958:71:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 787,
									"mutability": "mutable",
									"name": "currentIndex",
									"nameLocation": "2049:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2033:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2033:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2064:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "immutable",
									"name": "collectionSize",
									"nameLocation": "2155:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2128:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2128:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "immutable",
									"name": "maxBatchSize",
									"nameLocation": "2200:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2173:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 790,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2173:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2248:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2233:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 792,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2233:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2291:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2276:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 794,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2276:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "2513:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2470:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 799,
										"keyType": {
											"id": 796,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2478:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2470:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 798,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 797,
												"name": "TokenOwnership",
												"nameLocations": [
													"2489:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "2489:14:9"
											},
											"referencedDeclaration": 779,
											"src": "2489:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 805,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "2612:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2572:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 804,
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2580:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2572:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 803,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 802,
												"name": "AddressData",
												"nameLocations": [
													"2591:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2591:11:9"
											},
											"referencedDeclaration": 784,
											"src": "2591:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$784_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 809,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2712:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2676:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 808,
										"keyType": {
											"id": 806,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2684:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2676:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2695:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 815,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2831:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2778:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 814,
										"keyType": {
											"id": 810,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2786:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2778:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 813,
											"keyType": {
												"id": 811,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2805:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2797:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 812,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2816:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "3140:296:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "collectionSize_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "3161:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3179:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3161:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20636f6c6c656374696f6e206d75737420686176652061206e6f6e7a65726f20737570706c79",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3188:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																"typeString": "literal_string \"ERC721A: collection must have a nonzero supply\""
															},
															"value": "ERC721A: collection must have a nonzero supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec48ee9b4997502c01c5204986dfa50afb08e64fcd05ece1ac30d5d5387fca7a",
																"typeString": "literal_string \"ERC721A: collection must have a nonzero supply\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3146:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3146:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "3146:96:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 835,
																"name": "maxBatchSize_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "3256:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3272:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3256:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d61782062617463682073697a65206d757374206265206e6f6e7a65726f",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3275:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																"typeString": "literal_string \"ERC721A: max batch size must be nonzero\""
															},
															"value": "ERC721A: max batch size must be nonzero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dfed9e7a667d23d7742d6be8566c3ee538b5e6284bdf0c716f8c687ea26963b",
																"typeString": "literal_string \"ERC721A: max batch size must be nonzero\""
															}
														],
														"id": 834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3248:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3248:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "3248:69:9"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3323:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3331:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3323:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "3323:13:9"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3342:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3352:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3342:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "3342:17:9"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "maxBatchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "3365:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "maxBatchSize_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3380:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3365:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "3365:28:9"
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "collectionSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3399:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 854,
														"name": "collectionSize_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "3416:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3399:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "3399:32:9"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2854:159:9",
										"text": " @dev\n `maxBatchSize` refers to how much a minter can mint at a time.\n `collectionSize_` refers to how many tokens are in the collection."
									},
									"id": 858,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3047:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3033:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3033:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3072:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3058:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3058:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "maxBatchSize_",
												"nameLocation": "3093:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3085:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "collectionSize_",
												"nameLocation": "3120:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3112:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:112:9"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3140:0:9"
									},
									"scope": 1944,
									"src": "3016:420:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "3561:56:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "3574:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3589:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3574:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 868,
												"nodeType": "Return",
												"src": "3567:23:9"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "3440:56:9",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3508:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 861,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3534:8:9"
									},
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:2:9"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "3552:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3552:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:9:9"
									},
									"scope": 1944,
									"src": "3499:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										163
									],
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "3757:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "3771:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 881,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3779:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3779:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3771:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																"typeString": "literal_string \"ERC721A: global index out of bounds\""
															},
															"value": "ERC721A: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
																"typeString": "literal_string \"ERC721A: global index out of bounds\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "3763:69:9"
											},
											{
												"expression": {
													"id": 887,
													"name": "index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 873,
													"src": "3845:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 888,
												"nodeType": "Return",
												"src": "3838:12:9"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "3621:57:9",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "3690:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 875,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3730:8:9"
									},
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3711:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3703:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3702:15:9"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3748:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3747:9:9"
									},
									"scope": 1944,
									"src": "3681:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4255:623:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "4269:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 904,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "4287:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 903,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "4277:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4269:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4295:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																"typeString": "literal_string \"ERC721A: owner index out of bounds\""
															},
															"value": "ERC721A: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
																"typeString": "literal_string \"ERC721A: owner index out of bounds\""
															}
														],
														"id": 901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4261:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4261:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "4261:71:9"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "numMintedSoFar",
														"nameLocation": "4346:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4338:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4338:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 912,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "4363:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4363:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4338:38:9"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "tokenIdsIdx",
														"nameLocation": "4390:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4382:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"hexValue": "30",
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4404:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:23:9"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "currOwnershipAddr",
														"nameLocation": "4419:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4411:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 919,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4411:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4447:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4439:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4439:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4439:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4411:38:9"
											},
											{
												"body": {
													"id": 972,
													"nodeType": "Block",
													"src": "4501:311:9",
													"statements": [
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "ownership",
																	"nameLocation": "4548:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 972,
																	"src": "4526:31:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	},
																	"typeName": {
																		"id": 937,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 936,
																			"name": "TokenOwnership",
																			"nameLocations": [
																				"4526:14:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 779,
																			"src": "4526:14:9"
																		},
																		"referencedDeclaration": 779,
																		"src": "4526:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
																			"typeString": "struct ERC721A.TokenOwnership"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "4560:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "4572:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4560:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4526:48:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 943,
																		"name": "ownership",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "4586:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																			"typeString": "struct ERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4596:4:9",
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 776,
																	"src": "4586:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4612:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4604:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 945,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4604:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4604:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4586:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 956,
															"nodeType": "IfStatement",
															"src": "4582:87:9",
															"trueBody": {
																"id": 955,
																"nodeType": "Block",
																"src": "4616:53:9",
																"statements": [
																	{
																		"expression": {
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 950,
																				"name": "currOwnershipAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "4626:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 951,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 938,
																					"src": "4646:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																						"typeString": "struct ERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4656:4:9",
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 776,
																				"src": "4646:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4626:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 954,
																		"nodeType": "ExpressionStatement",
																		"src": "4626:34:9"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "currOwnershipAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4680:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 958,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "4701:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4680:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 971,
															"nodeType": "IfStatement",
															"src": "4676:130:9",
															"trueBody": {
																"id": 970,
																"nodeType": "Block",
																"src": "4708:98:9",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 960,
																				"name": "tokenIdsIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 916,
																				"src": "4722:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 961,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 895,
																				"src": "4737:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4722:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 966,
																		"nodeType": "IfStatement",
																		"src": "4718:57:9",
																		"trueBody": {
																			"id": 965,
																			"nodeType": "Block",
																			"src": "4744:31:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 963,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 927,
																						"src": "4763:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 900,
																					"id": 964,
																					"nodeType": "Return",
																					"src": "4756:8:9"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4784:13:9",
																			"subExpression": {
																				"id": 967,
																				"name": "tokenIdsIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 916,
																				"src": "4784:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 969,
																		"nodeType": "ExpressionStatement",
																		"src": "4784:13:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "4475:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 931,
														"name": "numMintedSoFar",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "4480:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4475:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"initializationExpression": {
													"assignments": [
														927
													],
													"declarations": [
														{
															"constant": false,
															"id": 927,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4468:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 973,
															"src": "4460:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 926,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4460:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 929,
													"initialValue": {
														"hexValue": "31",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4472:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4460:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4496:3:9",
														"subExpression": {
															"id": 933,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "4496:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"nodeType": "ExpressionStatement",
													"src": "4496:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4455:357:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f66206f776e657220627920696e646578",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4824:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																"typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
															},
															"value": "ERC721A: unable to get token of owner by index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
																"typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
															}
														],
														"id": 974,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4817:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4817:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "4817:56:9"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3859:277:9",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(collectionSize). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
									},
									"functionSelector": "2f745c59",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "4148:19:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4222:8:9"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4176:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4168:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4191:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4183:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:30:9"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4244:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:9:9"
									},
									"scope": 1944,
									"src": "4139:739:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734,
										746
									],
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "5067:228:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5086:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 992,
																				"name": "IERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "5106:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																					"typeString": "type(contract IERC721)"
																				}
																			],
																			"id": 991,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5101:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5101:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5115:11:9",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "5101:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "5086:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5136:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 998,
																				"name": "IERC721Metadata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "5156:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
																					"typeString": "type(contract IERC721Metadata)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$191_$",
																					"typeString": "type(contract IERC721Metadata)"
																				}
																			],
																			"id": 997,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5151:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5151:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$191",
																			"typeString": "type(contract IERC721Metadata)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5173:11:9",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "5151:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "5136:48:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5086:98:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5194:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1005,
																			"name": "IERC721Enumerable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "5214:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$164_$",
																				"typeString": "type(contract IERC721Enumerable)"
																			}
																		],
																		"id": 1004,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "5209:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5209:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$164",
																		"typeString": "type(contract IERC721Enumerable)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5233:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "5209:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "5194:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5086:158:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1012,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5278:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1010,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "5254:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$1944_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5260:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "5254:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5254:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5086:204:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 989,
												"id": 1015,
												"nodeType": "Return",
												"src": "5073:217:9"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4882:52:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 986,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 984,
												"name": "ERC165",
												"nameLocations": [
													"5029:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 735,
												"src": "5029:6:9"
											},
											{
												"id": 985,
												"name": "IERC165",
												"nameLocations": [
													"5037:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "5037:7:9"
											}
										],
										"src": "5020:25:9"
									},
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "4964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 981,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:20:9"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "5059:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5059:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5058:6:9"
									},
									"scope": 1944,
									"src": "4937:358:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "5419:135:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "5433:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5450:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5442:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5442:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5442:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5433:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5454:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															},
															"value": "ERC721A: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
																"typeString": "literal_string \"ERC721A: balance query for the zero address\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5425:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "5425:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1038,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "5521:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1040,
																"indexExpression": {
																	"id": 1039,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "5534:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5521:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$784_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5541:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 781,
															"src": "5521:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5513:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5513:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1043,
												"nodeType": "Return",
												"src": "5506:43:9"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "5299:44:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5355:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1022,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5392:8:9"
									},
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5373:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5365:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5364:15:9"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "5410:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:9:9"
									},
									"scope": 1944,
									"src": "5346:208:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "5628:164:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "5649:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5666:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5658:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1054,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5658:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5658:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5649:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5676:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															},
															"value": "ERC721A: number minted query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
																"typeString": "literal_string \"ERC721A: number minted query for the zero address\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5634:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5634:99:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "5634:99:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1064,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "5754:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1066,
																"indexExpression": {
																	"id": 1065,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "5767:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5754:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$784_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5774:12:9",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 783,
															"src": "5754:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5746:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5746:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1069,
												"nodeType": "Return",
												"src": "5739:48:9"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "5567:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5589:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5581:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:15:9"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5619:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5619:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5618:9:9"
									},
									"scope": 1944,
									"src": "5558:234:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "5894:488:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1081,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "5916:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "5908:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5908:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5926:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															},
															"value": "ERC721A: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
																"typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5900:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "5900:71:9"
											},
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "lowestTokenToCheck",
														"nameLocation": "5986:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "5978:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5978:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"nodeType": "VariableDeclarationStatement",
												"src": "5978:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "6014:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1090,
														"name": "maxBatchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "6025:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6014:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "6010:91:9",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "6039:62:9",
													"statements": [
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1092,
																	"name": "lowestTokenToCheck",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "6047:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1093,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "6068:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1094,
																			"name": "maxBatchSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "6078:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6068:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6093:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "6068:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6047:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "6047:47:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1130,
													"nodeType": "Block",
													"src": "6172:142:9",
													"statements": [
														{
															"assignments": [
																1114
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1114,
																	"mutability": "mutable",
																	"name": "ownership",
																	"nameLocation": "6202:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1130,
																	"src": "6180:31:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	},
																	"typeName": {
																		"id": 1113,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1112,
																			"name": "TokenOwnership",
																			"nameLocations": [
																				"6180:14:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 779,
																			"src": "6180:14:9"
																		},
																		"referencedDeclaration": 779,
																		"src": "6180:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
																			"typeString": "struct ERC721A.TokenOwnership"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1118,
															"initialValue": {
																"baseExpression": {
																	"id": 1115,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "6214:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1117,
																"indexExpression": {
																	"id": 1116,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "6226:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6214:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6180:51:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1119,
																		"name": "ownership",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "6243:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																			"typeString": "struct ERC721A.TokenOwnership memory"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6253:4:9",
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 776,
																	"src": "6243:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6261:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1121,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6261:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6261:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6243:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1129,
															"nodeType": "IfStatement",
															"src": "6239:69:9",
															"trueBody": {
																"id": 1128,
																"nodeType": "Block",
																"src": "6273:35:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1126,
																			"name": "ownership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1114,
																			"src": "6290:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"functionReturnParameters": 1078,
																		"id": 1127,
																		"nodeType": "Return",
																		"src": "6283:16:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "curr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "6136:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1107,
														"name": "lowestTokenToCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "6144:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6136:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"initializationExpression": {
													"assignments": [
														1103
													],
													"declarations": [
														{
															"constant": false,
															"id": 1103,
															"mutability": "mutable",
															"name": "curr",
															"nameLocation": "6120:4:9",
															"nodeType": "VariableDeclaration",
															"scope": 1131,
															"src": "6112:12:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6112:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1105,
													"initialValue": {
														"id": 1104,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "6127:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6112:22:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "6164:6:9",
														"subExpression": {
															"id": 1109,
															"name": "curr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "6164:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1111,
													"nodeType": "ExpressionStatement",
													"src": "6164:6:9"
												},
												"nodeType": "ForStatement",
												"src": "6107:207:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6327:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															},
															"value": "ERC721A: unable to determine the owner of token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
																"typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
															}
														],
														"id": 1132,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6320:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6320:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "6320:57:9"
											}
										]
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipOf",
									"nameLocation": "5805:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5825:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "5817:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5816:17:9"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "5869:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "TokenOwnership",
														"nameLocations": [
															"5869:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "5869:14:9"
													},
													"referencedDeclaration": 779,
													"src": "5869:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5868:23:9"
									},
									"scope": 1944,
									"src": "5796:586:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "6504:43:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1147,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "6529:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1146,
															"name": "ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "6517:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6517:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6538:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 776,
													"src": "6517:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1150,
												"nodeType": "Return",
												"src": "6510:32:9"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "6386:42:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "6440:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6477:8:9"
									},
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6456:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "6448:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6448:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6447:17:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "6495:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6495:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:9:9"
									},
									"scope": 1944,
									"src": "6431:116:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										176
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "6670:23:9",
										"statements": [
											{
												"expression": {
													"id": 1159,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 793,
													"src": "6683:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1160,
												"nodeType": "Return",
												"src": "6676:12:9"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "6551:47:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6610:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6637:8:9"
									},
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6614:2:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "6655:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6655:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6654:15:9"
									},
									"scope": 1944,
									"src": "6601:92:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "6820:25:9",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "6833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1170,
												"nodeType": "Return",
												"src": "6826:14:9"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "6697:49:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6758:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6787:8:9"
									},
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6764:2:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6805:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6805:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6804:15:9"
									},
									"scope": 1944,
									"src": "6749:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										190
									],
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "7013:267:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1183,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "7042:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1182,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "7034:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7034:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7058:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7019:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:94:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "7019:94:9"
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "7134:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1213,
														"src": "7120:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1188,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7120:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1190,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "7144:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7144:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7120:34:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "7179:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7173:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "7173:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7173:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7188:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7173:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7197:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7173:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7273:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7173:102:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1204,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "7233:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1205,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1175,
																				"src": "7242:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7250:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 593,
																			"src": "7242:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7242:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1202,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "7216:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7220:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "7216:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7216:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7209:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1200,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "7209:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7209:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1212,
												"nodeType": "Return",
												"src": "7160:115:9"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "6849:51:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "6912:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6974:8:9"
									},
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6929:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "6921:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6921:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6920:17:9"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "6996:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6996:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6995:15:9"
									},
									"scope": 1944,
									"src": "6903:377:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "7575:20:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7588:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1219,
												"id": 1221,
												"nodeType": "Return",
												"src": "7581:9:9"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "7284:222:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "7518:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7526:2:9"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "7560:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7560:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7559:15:9"
									},
									"scope": 1944,
									"src": "7509:86:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "7706:307:9",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7720:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1266,
														"src": "7712:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7712:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"id": 1236,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "7744:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1234,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "7728:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$1944_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7736:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "7728:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7728:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7712:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "7766:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1241,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "7772:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7766:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7779:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															},
															"value": "ERC721A: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
																"typeString": "literal_string \"ERC721A: approval to current owner\""
															}
														],
														"id": 1239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7758:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7758:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "7758:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1247,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "7838:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7838:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1249,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "7854:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7838:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "7880:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1253,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "7887:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7887:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1251,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "7863:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7863:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7838:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7908:59:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721A: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
																"typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7823:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7823:150:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "7823:150:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "7989:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "7993:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1263,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "8002:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1260,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "7980:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7980:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "7980:28:9"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "7599:42:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7653:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7697:8:9"
									},
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7669:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "7661:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7661:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7681:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "7673:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7673:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7660:29:9"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7706:0:9"
									},
									"scope": 1944,
									"src": "7644:369:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "8143:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1278,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "8165:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1277,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "8157:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8157:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8175:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															},
															"value": "ERC721A: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
																"typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8149:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8149:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "8149:74:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1283,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "8237:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1285,
													"indexExpression": {
														"id": 1284,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "8253:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8237:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1286,
												"nodeType": "Return",
												"src": "8230:31:9"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "8017:46:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "8075:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8116:8:9"
									},
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8095:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "8087:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8087:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:17:9"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "8134:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:9:9"
									},
									"scope": 1944,
									"src": "8066:200:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "8401:193:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "8415:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1299,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "8427:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8427:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8415:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8441:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															},
															"value": "ERC721A: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
																"typeString": "literal_string \"ERC721A: approve to caller\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8407:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8407:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "8407:63:9"
											},
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1305,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "8477:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1309,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1306,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "8496:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8477:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1310,
														"indexExpression": {
															"id": 1308,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "8510:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8477:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1311,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "8522:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8477:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "8477:53:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1315,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "8556:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8556:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "8570:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "8580:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1314,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "8541:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8541:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "EmitStatement",
												"src": "8536:53:9"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "8270:52:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "8334:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1295,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8392:8:9"
									},
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8360:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "8352:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8352:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "8375:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "8370:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8370:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8351:33:9"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8401:0:9"
									},
									"scope": 1944,
									"src": "8325:269:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "8777:53:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1333,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8790:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "8809:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8790:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1337,
													"indexExpression": {
														"id": 1336,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "8816:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8790:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1338,
												"nodeType": "Return",
												"src": "8783:42:9"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "8598:51:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8661:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1329,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8747:8:9"
									},
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8686:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "8678:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8678:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8701:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "8693:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8677:33:9"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "8769:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8769:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8768:6:9"
									},
									"scope": 1944,
									"src": "8652:178:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "8981:39:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "8997:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "9003:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "9007:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1351,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "8987:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8987:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "8987:28:9"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "8834:47:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8893:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8972:8:9"
									},
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8919:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "8911:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8911:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8937:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "8929:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8953:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "8945:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8905:59:9"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8981:0:9"
									},
									"scope": 1944,
									"src": "8884:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "9179:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "9202:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "9208:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "9212:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9221:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1369,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1377,
															1407
														],
														"referencedDeclaration": 1407,
														"src": "9185:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9185:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "9185:39:9"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "9024:51:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "9087:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9170:8:9"
									},
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9117:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "9109:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9135:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "9127:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9151:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "9143:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9103:59:9"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9179:0:9"
									},
									"scope": 1944,
									"src": "9078:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "9412:175:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "9428:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9434:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "9438:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "9418:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9418:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "9418:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1398,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "9490:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1399,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "9496:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1400,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "9500:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1401,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "9509:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1397,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "9467:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9467:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9523:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721A: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9452:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9452:130:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "9452:130:9"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "9233:51:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "9296:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1388,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9403:8:9"
									},
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9326:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "9318:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9318:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9344:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "9336:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9336:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9360:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "9352:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9352:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9386:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "9373:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9373:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:83:9"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9412:0:9"
									},
									"scope": 1944,
									"src": "9287:300:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "9880:40:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1415,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "9893:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1416,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "9903:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9893:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1418,
												"nodeType": "Return",
												"src": "9886:29:9"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "9591:223:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "9826:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9842:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "9834:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9833:17:9"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "9874:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9874:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9873:6:9"
									},
									"scope": 1944,
									"src": "9817:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "9982:38:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "9998:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "10002:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10012:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1427,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1434,
															1580
														],
														"referencedDeclaration": 1580,
														"src": "9988:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9988:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "9988:27:9"
											}
										]
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9933:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9951:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "9943:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "9963:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "9955:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9942:30:9"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9982:0:9"
									},
									"scope": 1944,
									"src": "9924:96:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "10440:1172:9",
										"statements": [
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "10454:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "10446:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10446:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1447,
												"initialValue": {
													"id": 1446,
													"name": "currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 787,
													"src": "10469:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10446:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1449,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "10522:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10536:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10528:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1450,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10528:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10528:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10522:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10540:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															},
															"value": "ERC721A: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
																"typeString": "literal_string \"ERC721A: mint to the zero address\""
															}
														],
														"id": 1448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10514:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10514:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "10514:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10710:22:9",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1460,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "10719:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1459,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "10711:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10711:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a20746f6b656e20616c7265616479206d696e746564",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10734:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
																"typeString": "literal_string \"ERC721A: token already minted\""
															},
															"value": "ERC721A: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
																"typeString": "literal_string \"ERC721A: token already minted\""
															}
														],
														"id": 1458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10702:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10702:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "10702:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1467,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "10780:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1468,
																"name": "maxBatchSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "10792:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10780:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207175616e7469747920746f206d696e7420746f6f2068696768",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10806:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f951f64ac6906b354d8bb2547d84c5624da207edd1bdfc2de747a2d7378fbda0",
																"typeString": "literal_string \"ERC721A: quantity to mint too high\""
															},
															"value": "ERC721A: quantity to mint too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f951f64ac6906b354d8bb2547d84c5624da207edd1bdfc2de747a2d7378fbda0",
																"typeString": "literal_string \"ERC721A: quantity to mint too high\""
															}
														],
														"id": 1466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10772:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10772:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "10772:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10880:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10872:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1474,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10872:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10872:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "10884:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "10888:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1480,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "10902:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1473,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "10850:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10850:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "10850:61:9"
											},
											{
												"assignments": [
													1485
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "addressData",
														"nameLocation": "10937:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "10918:30:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$784_memory_ptr",
															"typeString": "struct ERC721A.AddressData"
														},
														"typeName": {
															"id": 1484,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1483,
																"name": "AddressData",
																"nameLocations": [
																	"10918:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 784,
																"src": "10918:11:9"
															},
															"referencedDeclaration": 784,
															"src": "10918:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$784_storage_ptr",
																"typeString": "struct ERC721A.AddressData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1489,
												"initialValue": {
													"baseExpression": {
														"id": 1486,
														"name": "_addressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10951:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
															"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
														}
													},
													"id": 1488,
													"indexExpression": {
														"id": 1487,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "10964:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10951:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressData_$784_storage",
														"typeString": "struct ERC721A.AddressData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10918:49:9"
											},
											{
												"expression": {
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1490,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "10973:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
																"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"id": 1491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "10986:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10973:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$784_storage",
															"typeString": "struct ERC721A.AddressData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1494,
																		"name": "addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "11011:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressData_$784_memory_ptr",
																			"typeString": "struct ERC721A.AddressData memory"
																		}
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11023:7:9",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 781,
																	"src": "11011:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "11041:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11033:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "11033:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11033:17:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "11011:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1501,
																		"name": "addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "11058:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressData_$784_memory_ptr",
																			"typeString": "struct ERC721A.AddressData memory"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11070:12:9",
																	"memberName": "numberMinted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 783,
																	"src": "11058:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1505,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "11093:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11085:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1503,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "11085:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11085:17:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "11058:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1493,
															"name": "AddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "10992:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_AddressData_$784_storage_ptr_$",
																"typeString": "type(struct ERC721A.AddressData storage pointer)"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10992:116:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$784_memory_ptr",
															"typeString": "struct ERC721A.AddressData memory"
														}
													},
													"src": "10973:135:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressData_$784_storage",
														"typeString": "struct ERC721A.AddressData storage ref"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "10973:135:9"
											},
											{
												"expression": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1511,
															"name": "_ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "11114:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
															}
														},
														"id": 1513,
														"indexExpression": {
															"id": 1512,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "11126:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11114:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
															"typeString": "struct ERC721A.TokenOwnership storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1515,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "11157:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1518,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "11168:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11174:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "11168:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11161:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1516,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11161:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11161:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1514,
															"name": "TokenOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "11142:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$779_storage_ptr_$",
																"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11142:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"src": "11114:71:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
														"typeString": "struct ERC721A.TokenOwnership storage ref"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "11114:71:9"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "updatedIndex",
														"nameLocation": "11200:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "11192:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11192:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"id": 1526,
													"name": "startTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1445,
													"src": "11215:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11192:35:9"
											},
											{
												"body": {
													"id": 1563,
													"nodeType": "Block",
													"src": "11273:235:9",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11303:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11295:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1539,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11295:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11295:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1543,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1437,
																		"src": "11307:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1544,
																		"name": "updatedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "11311:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1538,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "11286:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11286:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1546,
															"nodeType": "EmitStatement",
															"src": "11281:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11380:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11372:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1549,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "11372:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11372:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1553,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "11384:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1554,
																				"name": "updatedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1525,
																				"src": "11388:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1555,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "11402:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1548,
																			"name": "_checkOnERC721Received",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1917,
																			"src": "11349:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11349:59:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11418:53:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																			"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																		},
																		"value": "ERC721A: transfer to non ERC721Receiver implementer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																			"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																		}
																	],
																	"id": 1547,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11332:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11332:147:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "11332:147:9"
														},
														{
															"expression": {
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "11487:14:9",
																"subExpression": {
																	"id": 1560,
																	"name": "updatedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "11487:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1562,
															"nodeType": "ExpressionStatement",
															"src": "11487:14:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1532,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "11254:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1533,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "11258:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11254:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"initializationExpression": {
													"assignments": [
														1529
													],
													"declarations": [
														{
															"constant": false,
															"id": 1529,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11247:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1564,
															"src": "11239:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1528,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11239:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1531,
													"initialValue": {
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11251:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11239:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11268:3:9",
														"subExpression": {
															"id": 1535,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "11268:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ExpressionStatement",
													"src": "11268:3:9"
												},
												"nodeType": "ForStatement",
												"src": "11234:274:9"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "11514:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1566,
														"name": "updatedIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "11529:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11514:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "11514:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11576:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11568:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11568:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11568:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "11580:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "11584:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1576,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "11598:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "11547:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11547:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "11547:60:9"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "10024:319:9",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - there must be `quantity` tokens remaining unminted in the total collection.\n - `to` cannot be the zero address.\n - `quantity` cannot be larger than the max batch size.\n Emits a {Transfer} event."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10355:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10378:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10370:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10370:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "10394:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10386:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10386:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10421:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "10408:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10408:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10364:66:9"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10440:0:9"
									},
									"scope": 1944,
									"src": "10346:1266:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "11918:1398:9",
										"statements": [
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "11946:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1733,
														"src": "11924:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1591,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1590,
																"name": "TokenOwnership",
																"nameLocations": [
																	"11924:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 779,
																"src": "11924:14:9"
															},
															"referencedDeclaration": 779,
															"src": "11924:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [
														{
															"id": 1594,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "11974:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1593,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "11962:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11962:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11924:58:9"
											},
											{
												"assignments": [
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "11994:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1733,
														"src": "11989:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11989:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1599,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "12015:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12015:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1601,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "12031:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12045:4:9",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "12031:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "12015:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1605,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1587,
																				"src": "12071:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1604,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "12059:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12059:20:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1607,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "12083:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12083:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "12059:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12015:80:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1612,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "12122:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12136:4:9",
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "12122:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1614,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "12142:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12142:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1611,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "12105:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12105:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12015:140:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1618,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12014:142:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11989:167:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1621,
															"name": "isApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "12178:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12203:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															},
															"value": "ERC721A: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
																"typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
															}
														],
														"id": 1620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12163:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12163:98:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "12163:98:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1626,
																	"name": "prevOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "12283:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership memory"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12297:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 776,
																"src": "12283:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1628,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "12305:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12283:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12317:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															},
															"value": "ERC721A: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
																"typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12268:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12268:95:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "12268:95:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1634,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "12377:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12391:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12383:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1635,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12383:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12383:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12377:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12395:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															},
															"value": "ERC721A: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
																"typeString": "literal_string \"ERC721A: transfer to the zero address\""
															}
														],
														"id": 1633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12369:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12369:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "12369:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "12464:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "12470:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "12474:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12483:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1643,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "12442:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12442:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "12442:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12556:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12548:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1651,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12548:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12548:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "12560:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1656,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "12569:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12583:4:9",
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 776,
															"src": "12569:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "12539:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12539:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "12539:49:9"
											},
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1660,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "12595:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1662,
															"indexExpression": {
																"id": 1661,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "12608:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12595:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$784_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12614:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "12595:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12625:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12595:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "12595:31:9"
											},
											{
												"expression": {
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1667,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "12632:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$784_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1669,
															"indexExpression": {
																"id": 1668,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "12645:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12632:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$784_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12649:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "12632:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12660:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12632:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "12632:29:9"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1674,
															"name": "_ownerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "12667:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
															}
														},
														"id": 1676,
														"indexExpression": {
															"id": 1675,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "12679:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12667:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
															"typeString": "struct ERC721A.TokenOwnership storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1585,
																"src": "12705:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "12716:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12722:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "12716:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12709:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1679,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12709:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12709:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 1677,
															"name": "TokenOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "12690:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$779_storage_ptr_$",
																"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12690:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"src": "12667:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
														"typeString": "struct ERC721A.TokenOwnership storage ref"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "12667:66:9"
											},
											{
												"assignments": [
													1688
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "nextTokenId",
														"nameLocation": "12965:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1733,
														"src": "12957:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12957:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1692,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1689,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "12979:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12989:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12979:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12957:33:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1693,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "13000:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1695,
															"indexExpression": {
																"id": 1694,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "13012:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13000:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13025:4:9",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 776,
														"src": "13000:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13041:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13033:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1697,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13033:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13033:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13000:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1719,
												"nodeType": "IfStatement",
												"src": "12996:229:9",
												"trueBody": {
													"id": 1718,
													"nodeType": "Block",
													"src": "13045:180:9",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 1703,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1702,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "13057:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13057:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1717,
															"nodeType": "IfStatement",
															"src": "13053:166:9",
															"trueBody": {
																"id": 1716,
																"nodeType": "Block",
																"src": "13079:140:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1705,
																					"name": "_ownerships",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "13089:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																						"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																					}
																				},
																				"id": 1707,
																				"indexExpression": {
																					"id": 1706,
																					"name": "nextTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1688,
																					"src": "13101:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "13089:24:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																					"typeString": "struct ERC721A.TokenOwnership storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1709,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1592,
																							"src": "13142:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1710,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13156:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 776,
																						"src": "13142:18:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1711,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1592,
																							"src": "13172:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1712,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13186:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 778,
																						"src": "13172:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					],
																					"id": 1708,
																					"name": "TokenOwnership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "13116:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$779_storage_ptr_$",
																						"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
																					}
																				},
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13116:94:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"src": "13089:121:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																				"typeString": "struct ERC721A.TokenOwnership storage ref"
																			}
																		},
																		"id": 1715,
																		"nodeType": "ExpressionStatement",
																		"src": "13089:121:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1721,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "13245:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "13251:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1723,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "13255:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "13236:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13236:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "EmitStatement",
												"src": "13231:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "13290:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "13296:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "13300:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13309:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1726,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "13269:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13269:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "13269:42:9"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "11616:213:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11841:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11864:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "11856:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11882:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "11874:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11874:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "11890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11890:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11850:59:9"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11918:0:9"
									},
									"scope": 1944,
									"src": "11832:1484:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "13501:79:9",
										"statements": [
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1744,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "13507:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1746,
														"indexExpression": {
															"id": 1745,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "13523:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13507:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1747,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "13534:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13507:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "13507:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1751,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "13556:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1752,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "13563:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1753,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "13567:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1750,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "13547:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13547:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "EmitStatement",
												"src": "13542:33:9"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "13320:92:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13424:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13446:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "13438:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13438:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13462:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "13454:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13454:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13483:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "13475:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13475:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13432:60:9"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13501:0:9"
									},
									"scope": 1944,
									"src": "13415:165:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d7224ba0",
									"id": 1760,
									"mutability": "mutable",
									"name": "nextOwnerToExplicitlySet",
									"nameLocation": "13599:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "13584:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1758,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13584:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1759,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13626:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "13782:772:9",
										"statements": [
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"mutability": "mutable",
														"name": "oldNextOwnerToSet",
														"nameLocation": "13796:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "13788:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"id": 1768,
													"name": "nextOwnerToExplicitlySet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1760,
													"src": "13816:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13788:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1771,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "13854:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13865:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13854:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7175616e74697479206d757374206265206e6f6e7a65726f",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13868:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_737d165da1eb856050a92dfade64119f1cf8c88d622d3e0772ede5cbd9cfb846",
																"typeString": "literal_string \"quantity must be nonzero\""
															},
															"value": "quantity must be nonzero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_737d165da1eb856050a92dfade64119f1cf8c88d622d3e0772ede5cbd9cfb846",
																"typeString": "literal_string \"quantity must be nonzero\""
															}
														],
														"id": 1770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13846:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13846:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "13846:49:9"
											},
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"mutability": "mutable",
														"name": "endIndex",
														"nameLocation": "13909:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1852,
														"src": "13901:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13901:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1779,
															"name": "oldNextOwnerToSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "13920:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1780,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "13940:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13920:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13951:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13920:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13901:51:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1785,
														"name": "endIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "13962:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1786,
															"name": "collectionSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "13973:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13990:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "13973:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13962:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1797,
												"nodeType": "IfStatement",
												"src": "13958:79:9",
												"trueBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "13993:44:9",
													"statements": [
														{
															"expression": {
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1790,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "14001:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "collectionSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "14012:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14029:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "14012:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14001:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1795,
															"nodeType": "ExpressionStatement",
															"src": "14001:29:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1800,
																	"name": "endIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "14158:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1799,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "14150:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14150:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f756768206d696e7465642079657420666f72207468697320636c65616e7570",
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14169:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c91bff745ee80645a0fce79a064d0f28773450181c1ffda5746acdef8f467e",
																"typeString": "literal_string \"not enough minted yet for this cleanup\""
															},
															"value": "not enough minted yet for this cleanup"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c91bff745ee80645a0fce79a064d0f28773450181c1ffda5746acdef8f467e",
																"typeString": "literal_string \"not enough minted yet for this cleanup\""
															}
														],
														"id": 1798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14142:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14142:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "14142:68:9"
											},
											{
												"body": {
													"id": 1844,
													"nodeType": "Block",
													"src": "14272:233:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1815,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "14284:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 1817,
																		"indexExpression": {
																			"id": 1816,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "14296:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14284:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14299:4:9",
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 776,
																	"src": "14284:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14315:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14307:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1819,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14307:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14307:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14284:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1843,
															"nodeType": "IfStatement",
															"src": "14280:219:9",
															"trueBody": {
																"id": 1842,
																"nodeType": "Block",
																"src": "14319:180:9",
																"statements": [
																	{
																		"assignments": [
																			1826
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1826,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "14351:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1842,
																				"src": "14329:31:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1825,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1824,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"14329:14:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 779,
																						"src": "14329:14:9"
																					},
																					"referencedDeclaration": 779,
																					"src": "14329:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$779_storage_ptr",
																						"typeString": "struct ERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1830,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1828,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "14375:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1827,
																				"name": "ownershipOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "14363:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$779_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14363:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "14329:48:9"
																	},
																	{
																		"expression": {
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1831,
																					"name": "_ownerships",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "14387:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$779_storage_$",
																						"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																					}
																				},
																				"id": 1833,
																				"indexExpression": {
																					"id": 1832,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "14399:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14387:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																					"typeString": "struct ERC721A.TokenOwnership storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1835,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1826,
																							"src": "14430:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1836,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14440:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 776,
																						"src": "14430:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1837,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1826,
																							"src": "14456:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1838,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14466:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 778,
																						"src": "14456:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					],
																					"id": 1834,
																					"name": "TokenOwnership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "14404:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenOwnership_$779_storage_ptr_$",
																						"typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
																					}
																				},
																				"id": 1839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14404:86:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$779_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"src": "14387:103:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$779_storage",
																				"typeString": "struct ERC721A.TokenOwnership storage ref"
																			}
																		},
																		"id": 1841,
																		"nodeType": "ExpressionStatement",
																		"src": "14387:103:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1809,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "14252:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1810,
														"name": "endIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "14257:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14252:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"initializationExpression": {
													"assignments": [
														1806
													],
													"declarations": [
														{
															"constant": false,
															"id": 1806,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14229:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1845,
															"src": "14221:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1805,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14221:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1808,
													"initialValue": {
														"id": 1807,
														"name": "oldNextOwnerToSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "14233:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14221:29:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14267:3:9",
														"subExpression": {
															"id": 1812,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "14267:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1814,
													"nodeType": "ExpressionStatement",
													"src": "14267:3:9"
												},
												"nodeType": "ForStatement",
												"src": "14216:289:9"
											},
											{
												"expression": {
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1846,
														"name": "nextOwnerToExplicitlySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "14510:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1847,
															"name": "endIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "14537:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14548:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "14537:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14510:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "14510:39:9"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "13632:92:9",
										"text": " @dev Explicitly set `owners` to eliminate loops in future calls of ownerOf()."
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwnersExplicit",
									"nameLocation": "13736:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "13763:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "13755:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13755:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13754:18:9"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13782:0:9"
									},
									"scope": 1944,
									"src": "13727:827:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "15223:529:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1867,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "15233:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15236:10:9",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "15233:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15233:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1914,
													"nodeType": "Block",
													"src": "15722:26:9",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15737:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1866,
															"id": 1913,
															"nodeType": "Return",
															"src": "15730:11:9"
														}
													]
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "15229:519:9",
												"trueBody": {
													"id": 1911,
													"nodeType": "Block",
													"src": "15250:466:9",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1891,
																		"nodeType": "Block",
																		"src": "15373:81:9",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1883,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1881,
																						"src": "15390:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1885,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1858,
																										"src": "15416:2:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1884,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 133,
																									"src": "15400:15:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1886,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15400:19:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1887,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15420:16:9",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 132,
																							"src": "15400:36:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1888,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15437:8:9",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15400:45:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15390:55:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1866,
																				"id": 1890,
																				"nodeType": "Return",
																				"src": "15383:62:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1892,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1882,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1881,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "15365:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1892,
																				"src": "15358:13:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1880,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15358:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15357:15:9"
																	},
																	"src": "15349:105:9"
																},
																{
																	"block": {
																		"id": 1908,
																		"nodeType": "Block",
																		"src": "15483:227:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1896,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1894,
																							"src": "15497:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1897,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15504:6:9",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15497:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1898,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15514:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15497:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1906,
																					"nodeType": "Block",
																					"src": "15607:95:9",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15628:64:9",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15653:2:9",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15657:6:9"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15649:3:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15649:15:9"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15672:6:9"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15666:5:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15666:13:9"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15642:6:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15642:38:9"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15642:38:9"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1894,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15657:6:9",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1894,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15672:6:9",
																									"valueSize": 1
																								}
																							],
																							"id": 1905,
																							"nodeType": "InlineAssembly",
																							"src": "15619:73:9"
																						}
																					]
																				},
																				"id": 1907,
																				"nodeType": "IfStatement",
																				"src": "15493:209:9",
																				"trueBody": {
																					"id": 1904,
																					"nodeType": "Block",
																					"src": "15517:84:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1901,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15536:53:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721A: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
																											"typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1900,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15529:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1902,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15529:61:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1903,
																							"nodeType": "ExpressionStatement",
																							"src": "15529:61:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1909,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1895,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1894,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15475:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1909,
																				"src": "15462:19:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1893,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15462:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15461:21:9"
																	},
																	"src": "15455:255:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1874,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "15307:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15307:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1876,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "15321:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1877,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "15327:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1878,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "15336:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1871,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1858,
																				"src": "15286:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1870,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "15270:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15270:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15290:16:9",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "15270:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15270:72:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1910,
															"nodeType": "TryStatement",
															"src": "15258:452:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "14558:524:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "15094:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15130:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15122:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15148:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15140:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15164:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15156:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15156:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15190:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15177:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15177:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15116:83:9"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15217:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15217:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15216:6:9"
									},
									"scope": 1944,
									"src": "15085:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "16334:2:9",
										"statements": []
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "15756:441:9",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "16209:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16244:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "16236:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16236:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16262:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "16254:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16254:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "16278:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "16270:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16270:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16304:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "16296:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16230:86:9"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16334:0:9"
									},
									"scope": 1944,
									"src": "16200:136:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "16841:2:9",
										"statements": []
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "16340:365:9",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
									},
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "16717:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16751:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "16743:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16743:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16769:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "16761:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16761:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "16785:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "16777:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16777:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16811:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "16803:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16803:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16737:86:9"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16841:0:9"
									},
									"scope": 1944,
									"src": "16708:135:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1945,
							"src": "1728:15117:9",
							"usedErrors": []
						}
					],
					"src": "33:16812:9"
				},
				"id": 9
			}
		}
	}
}