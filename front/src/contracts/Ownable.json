{
  "contractName": "Ownable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n",
  "sourcePath": "C:\\Users\\Administrator\\Desktop\\nftP\\blockChain\\node_modules\\@openzeppelin\\contracts\\access\\Ownable.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
    "exportedSymbols": {
      "Context": [
<<<<<<< HEAD
        8713
      ],
      "Ownable": [
        8115
      ]
    },
    "id": 8116,
=======
        8835
      ],
      "Ownable": [
        8237
      ]
    },
    "id": 8238,
>>>>>>> main
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 8004,
=======
        "id": 8126,
>>>>>>> main
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:23:45"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
<<<<<<< HEAD
        "id": 8005,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8116,
        "sourceUnit": 8714,
=======
        "id": 8127,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8238,
        "sourceUnit": 8836,
>>>>>>> main
        "src": "127:30:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 8007,
=======
              "id": 8129,
>>>>>>> main
              "name": "Context",
              "nameLocations": [
                "683:7:45"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 8713,
              "src": "683:7:45"
            },
            "id": 8008,
=======
              "referencedDeclaration": 8835,
              "src": "683:7:45"
            },
            "id": 8130,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "683:7:45"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 8006,
=======
          "id": 8128,
>>>>>>> main
          "nodeType": "StructuredDocumentation",
          "src": "159:494:45",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 8115,
        "linearizedBaseContracts": [
          8115,
          8713
=======
        "id": 8237,
        "linearizedBaseContracts": [
          8237,
          8835
>>>>>>> main
        ],
        "name": "Ownable",
        "nameLocation": "672:7:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
<<<<<<< HEAD
            "id": 8010,
=======
            "id": 8132,
>>>>>>> main
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "713:6:45",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "697:22:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 8009,
=======
              "id": 8131,
>>>>>>> main
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
<<<<<<< HEAD
            "id": 8016,
=======
            "id": 8138,
>>>>>>> main
            "name": "OwnershipTransferred",
            "nameLocation": "732:20:45",
            "nodeType": "EventDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8015,
=======
              "id": 8137,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 8012,
=======
                  "id": 8134,
>>>>>>> main
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "769:13:45",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 8016,
=======
                  "scope": 8138,
>>>>>>> main
                  "src": "753:29:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 8011,
=======
                    "id": 8133,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 8014,
=======
                  "id": 8136,
>>>>>>> main
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "800:8:45",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 8016,
=======
                  "scope": 8138,
>>>>>>> main
                  "src": "784:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 8013,
=======
                    "id": 8135,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:57:45"
            },
            "src": "726:84:45"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8025,
=======
              "id": 8147,
>>>>>>> main
              "nodeType": "Block",
              "src": "926:49:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
<<<<<<< HEAD
                          "id": 8021,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8703,
=======
                          "id": 8143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8825,
>>>>>>> main
                          "src": "955:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
<<<<<<< HEAD
                        "id": 8022,
=======
                        "id": 8144,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "955:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 8020,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8114,
=======
                      "id": 8142,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8236,
>>>>>>> main
                      "src": "936:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 8023,
=======
                    "id": 8145,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8024,
=======
                  "id": 8146,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "936:32:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8017,
=======
              "id": 8139,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "816:91:45",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
<<<<<<< HEAD
            "id": 8026,
=======
            "id": 8148,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8018,
=======
              "id": 8140,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8019,
=======
              "id": 8141,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "912:63:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8033,
=======
              "id": 8155,
>>>>>>> main
              "nodeType": "Block",
              "src": "1084:41:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 8029,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8057,
=======
                      "id": 8151,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8179,
>>>>>>> main
                      "src": "1094:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
<<<<<<< HEAD
                    "id": 8030,
=======
                    "id": 8152,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:13:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8031,
=======
                  "id": 8153,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "1094:13:45"
                },
                {
<<<<<<< HEAD
                  "id": 8032,
=======
                  "id": 8154,
>>>>>>> main
                  "nodeType": "PlaceholderStatement",
                  "src": "1117:1:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8027,
=======
              "id": 8149,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "981:77:45",
              "text": " @dev Throws if called by any account other than the owner."
            },
<<<<<<< HEAD
            "id": 8034,
=======
            "id": 8156,
>>>>>>> main
            "name": "onlyOwner",
            "nameLocation": "1072:9:45",
            "nodeType": "ModifierDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8028,
=======
              "id": 8150,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:45"
            },
            "src": "1063:62:45",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8042,
=======
              "id": 8164,
>>>>>>> main
              "nodeType": "Block",
              "src": "1256:30:45",
              "statements": [
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 8040,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8010,
=======
                    "id": 8162,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8132,
>>>>>>> main
                    "src": "1273:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 8039,
                  "id": 8041,
=======
                  "functionReturnParameters": 8161,
                  "id": 8163,
>>>>>>> main
                  "nodeType": "Return",
                  "src": "1266:13:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8035,
=======
              "id": 8157,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "1131:65:45",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 8043,
=======
            "id": 8165,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1210:5:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8036,
=======
              "id": 8158,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:2:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8039,
=======
              "id": 8161,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 8038,
=======
                  "id": 8160,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 8043,
=======
                  "scope": 8165,
>>>>>>> main
                  "src": "1247:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 8037,
=======
                    "id": 8159,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:9:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "1201:85:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8056,
=======
              "id": 8178,
>>>>>>> main
              "nodeType": "Block",
              "src": "1404:85:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 8052,
=======
                        "id": 8174,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 8048,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8043,
=======
                            "id": 8170,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8165,
>>>>>>> main
                            "src": "1422:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 8049,
=======
                          "id": 8171,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1422:7:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
<<<<<<< HEAD
                            "id": 8050,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8703,
=======
                            "id": 8172,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8825,
>>>>>>> main
                            "src": "1433:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 8051,
=======
                          "id": 8173,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1422:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
<<<<<<< HEAD
                        "id": 8053,
=======
                        "id": 8175,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 8047,
=======
                      "id": 8169,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1414:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 8054,
=======
                    "id": 8176,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:68:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8055,
=======
                  "id": 8177,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "1414:68:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8044,
=======
              "id": 8166,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "1292:62:45",
              "text": " @dev Throws if the sender is not the owner."
            },
<<<<<<< HEAD
            "id": 8057,
=======
            "id": 8179,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOwner",
            "nameLocation": "1368:11:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8045,
=======
              "id": 8167,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1379:2:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8046,
=======
              "id": 8168,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "1359:130:45",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8070,
=======
              "id": 8192,
>>>>>>> main
              "nodeType": "Block",
              "src": "1885:47:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 8066,
=======
                            "id": 8188,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1922:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 8065,
=======
                          "id": 8187,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1914:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 8064,
=======
                            "id": 8186,
>>>>>>> main
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1914:7:45",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 8067,
=======
                        "id": 8189,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1914:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 8063,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8114,
=======
                      "id": 8185,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8236,
>>>>>>> main
                      "src": "1895:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 8068,
=======
                    "id": 8190,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8069,
=======
                  "id": 8191,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "1895:30:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8058,
=======
              "id": 8180,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "1495:331:45",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
<<<<<<< HEAD
            "id": 8071,
=======
            "id": 8193,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 8061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8060,
=======
                "id": 8183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8182,
>>>>>>> main
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1875:9:45"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 8034,
=======
                  "referencedDeclaration": 8156,
>>>>>>> main
                  "src": "1875:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "1875:9:45"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "1840:17:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8059,
=======
              "id": 8181,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:2:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8062,
=======
              "id": 8184,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:0:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "1831:101:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8093,
=======
              "id": 8215,
>>>>>>> main
              "nodeType": "Block",
              "src": "2151:128:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 8085,
=======
                        "id": 8207,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 8080,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8074,
=======
                          "id": 8202,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8196,
>>>>>>> main
                          "src": "2169:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 8083,
=======
                              "id": 8205,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2189:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 8082,
=======
                            "id": 8204,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2181:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 8081,
=======
                              "id": 8203,
>>>>>>> main
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2181:7:45",
                              "typeDescriptions": {}
                            }
                          },
<<<<<<< HEAD
                          "id": 8084,
=======
                          "id": 8206,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2181:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2169:22:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
<<<<<<< HEAD
                        "id": 8086,
=======
                        "id": 8208,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2193:40:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 8079,
=======
                      "id": 8201,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2161:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 8087,
=======
                    "id": 8209,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:73:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8088,
=======
                  "id": 8210,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2161:73:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 8090,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8074,
=======
                        "id": 8212,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8196,
>>>>>>> main
                        "src": "2263:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 8089,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8114,
=======
                      "id": 8211,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8236,
>>>>>>> main
                      "src": "2244:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 8091,
=======
                    "id": 8213,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8092,
=======
                  "id": 8214,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2244:28:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8072,
=======
              "id": 8194,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "1938:138:45",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
<<<<<<< HEAD
            "id": 8094,
=======
            "id": 8216,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 8077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8076,
=======
                "id": 8199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8198,
>>>>>>> main
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2141:9:45"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 8034,
=======
                  "referencedDeclaration": 8156,
>>>>>>> main
                  "src": "2141:9:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "2141:9:45"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "2090:17:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8075,
=======
              "id": 8197,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 8074,
=======
                  "id": 8196,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2116:8:45",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 8094,
=======
                  "scope": 8216,
>>>>>>> main
                  "src": "2108:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 8073,
=======
                    "id": 8195,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:18:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8078,
=======
              "id": 8200,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2151:0:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "2081:198:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 8113,
=======
              "id": 8235,
>>>>>>> main
              "nodeType": "Block",
              "src": "2496:124:45",
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    8101
=======
                    8223
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 8101,
=======
                      "id": 8223,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "2514:8:45",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 8113,
=======
                      "scope": 8235,
>>>>>>> main
                      "src": "2506:16:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 8100,
=======
                        "id": 8222,
>>>>>>> main
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2506:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 8103,
                  "initialValue": {
                    "id": 8102,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8010,
=======
                  "id": 8225,
                  "initialValue": {
                    "id": 8224,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8132,
>>>>>>> main
                    "src": "2525:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2506:25:45"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 8106,
=======
                    "id": 8228,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 8104,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8010,
=======
                      "id": 8226,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8132,
>>>>>>> main
                      "src": "2541:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 8105,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8097,
=======
                      "id": 8227,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8219,
>>>>>>> main
                      "src": "2550:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2541:17:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 8107,
=======
                  "id": 8229,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2541:17:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 8109,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8101,
=======
                        "id": 8231,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8223,
>>>>>>> main
                        "src": "2594:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 8110,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8097,
=======
                        "id": 8232,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8219,
>>>>>>> main
                        "src": "2604:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 8108,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8016,
=======
                      "id": 8230,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8138,
>>>>>>> main
                      "src": "2573:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 8111,
=======
                    "id": 8233,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2573:40:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 8112,
=======
                  "id": 8234,
>>>>>>> main
                  "nodeType": "EmitStatement",
                  "src": "2568:45:45"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 8095,
=======
              "id": 8217,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "2285:143:45",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
            },
<<<<<<< HEAD
            "id": 8114,
=======
            "id": 8236,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "2442:18:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 8098,
=======
              "id": 8220,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 8097,
=======
                  "id": 8219,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2469:8:45",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 8114,
=======
                  "scope": 8236,
>>>>>>> main
                  "src": "2461:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 8096,
=======
                    "id": 8218,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:18:45"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 8099,
=======
              "id": 8221,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2496:0:45"
            },
<<<<<<< HEAD
            "scope": 8115,
=======
            "scope": 8237,
>>>>>>> main
            "src": "2433:187:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 8116,
=======
        "scope": 8238,
>>>>>>> main
        "src": "654:1968:45",
        "usedErrors": []
      }
    ],
    "src": "102:2521:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
<<<<<<< HEAD
  "updatedAt": "2022-12-25T12:15:20.153Z",
=======
  "updatedAt": "2022-12-25T11:59:44.156Z",
>>>>>>> main
  "devdoc": {
    "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}